{"ast":null,"code":"var _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/LoginScreen.js\";\n\nfunction LoginScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm({\n    criteriaMode: 'all'\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var usernameInputRef = React.useRef();\n  var passwordInputRef = React.useRef();\n\n  var onSubmit = function onSubmit(data) {\n    var json, username, password, user, response;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            username = json[\"username\"];\n            password = json[\"password\"];\n            user = {\n              username: username,\n              password: password\n            };\n            console.log(JSON.stringify(user));\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"accepts\": \"application/json\"\n              },\n              body: JSON.stringify(user)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 7:\n            response = _context.sent;\n            console.log(response.message);\n\n            if (response.message == \"login successful\") {\n              navigation.navigate('Main');\n            } else {\n              alert(\"Login invalid\");\n            }\n\n            console.log(response);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signup = function signup() {\n    navigation.navigate('Signup');\n  };\n\n  var onError = function onError(errors, e) {\n    return console.log(errors, e);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Welcome!\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Username\"), React.createElement(Controller, {\n    name: \"username\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        autoCapitalize: \"none\",\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: usernameInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    name: \"password\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        secureTextEntry: true,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: passwordInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(onSubmit, onError),\n    style: styles.buttonSpecial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Log In\"))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \" \"), React.createElement(TouchableOpacity, {\n    onPress: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonWhiteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"New to Dasher? Create an account\"))));\n}","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/LoginScreen.js"],"names":["LoginScreen","navigation","useForm","criteriaMode","control","handleSubmit","setError","errors","usernameInputRef","React","useRef","passwordInputRef","onSubmit","data","json","JSON","parse","stringify","username","password","user","console","log","fetch","method","headers","body","then","response","message","navigate","alert","signup","onError","e","styles","container","title","label","required","props","textbox","value","onChange","buttonSpecial","button","buttonWhiteText"],"mappings":"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","sourcesContent":["\n\n// Login screen\nfunction LoginScreen ({ navigation }) {\n\n    // useForm allows us to validate inputs and build forms\n    const {control, handleSubmit, setError, errors} = useForm( { criteriaMode: 'all' })\n    const usernameInputRef = React.useRef()\n    const passwordInputRef = React.useRef()\n  \n    const onSubmit = async (data) => { \n      // Once handleSubmit validates the inputs in onPress in button, this code is executed\n      const json = JSON.parse(JSON.stringify(data))\n      const username = json[\"username\"]\n      const password = json[\"password\"]\n      const user = {username, password}\n      console.log(JSON.stringify(user))\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"accepts\":\"application/json\"\n        },\n        body: JSON.stringify(user)\n      }).then((response) => response.json())\n      .then(data => {\n          return data;\n      });\n      console.log(response.message)\n      if (response.message == \"login successful\") {\n        navigation.navigate('Main');\n      } else {\n        //Display message\n        alert(`Login invalid`)\n      }\n      console.log(response)\n      \n    }\n    const signup = () => {\n      navigation.navigate('Signup');\n    }\n  \n    const onError = (errors, e) => console.log(errors, e)\n  \n    return (\n      <View style={styles.container}>\n        <View>\n          <Text style={styles.title}>Welcome!</Text>\n          <Text style={styles.label}>Username</Text>\n          <Controller \n            name=\"username\" \n            control={control} \n            rules= {{required: 'This is required'}}\n            defaultValue=''\n            render={(props) => \n              <TextInput {...props} \n              //I know the following line sometimes gives a warning.\n                //Please leave it in place, otherwise the forms are hard to work with\n                autoCapitalize=\"none\"\n                style={styles.textbox}\n                onChangeText={(value) => {\n                  props.onChange(value)\n                }}\n                ref={usernameInputRef}\n              />\n            }\n          />\n        </View>\n        <View>\n          <Text style={styles.label}>Password</Text>\n          <Controller \n            name=\"password\" \n            control={control} \n            rules= {{required: 'This is required'}}\n            defaultValue=''\n            render={(props) => \n              <TextInput {...props} \n                secureTextEntry={true}\n                style={styles.textbox}\n                onChangeText={(value) => {\n                  props.onChange(value)\n                }}\n                ref={passwordInputRef}\n              />\n            }\n          />\n        </View>\n        <View>\n          <TouchableOpacity \n            // handleSubmit validates inputs before calling onSubmit\n            onPress={handleSubmit(onSubmit, onError)}\n            // onPress={() => navigation.navigate('Main')}\n            style={styles.buttonSpecial}>\n            <Text style={styles.button}>Log In</Text>    \n          </TouchableOpacity>\n        </View>\n        <View>\n          <Text style={styles.label}> </Text>\n          <TouchableOpacity onPress={signup}>\n            <Text style={styles.buttonWhiteText}>New to Dasher? Create an account</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  }"]},"metadata":{},"sourceType":"script"}