{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/CommentsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport function CommentsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  useEffect(function _callee() {\n    var response, list, _useState, _useState2, exampleState, setExampleState, addElement;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_comments\", {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(function (response) {\n              return response.json();\n            }));\n\n          case 2:\n            response = _context.sent;\n            list = response.comments;\n            console.log(list);\n            _useState = useState(list), _useState2 = _slicedToArray(_useState, 2), exampleState = _useState2[0], setExampleState = _useState2[1];\n\n            addElement = function addElement() {};\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.comment;\n    },\n    data: exampleState,\n    renderItem: function renderItem(item) {\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }\n      }, item.item.restaurant_name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Add element\",\n    onPress: addElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 40,\n    width: 200,\n    marginTop: 10,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/CommentsScreen.js"],"names":["useForm","Controller","React","useEffect","useState","Component","CommentsScreen","navigation","fetch","method","headers","then","response","json","list","comments","console","log","exampleState","setExampleState","addElement","styles","container","item","comment","restaurant_name","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","scrollView","marginHorizontal","textbox","height","width","marginTop","marginBottom","borderRadius","borderColor","borderWidth","padding","title","color","fontSize","marginVertical","paddingHorizontal"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;;;;;AAGA,OAAO,SAASC,cAAT,OAAyC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAE5CJ,EAAAA,SAAS,CAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACgBK,KAAK,CAAC,oCAAD,EAAuC;AACjEC,cAAAA,MAAM,EAAE,KADyD;AAEjEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT;AAFwD,aAAvC,CAAL,CAKpBC,IALoB,CAKf,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,aALe,CADhB;;AAAA;AACDD,YAAAA,QADC;AAODE,YAAAA,IAPC,GAOMF,QAAQ,CAACG,QAPf;AAQPC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AARO,wBAUiCV,QAAQ,CAACU,IAAD,CAVzC,6CAUAI,YAVA,kBAUcC,eAVd;;AAYDC,YAAAA,UAZC,GAYY,SAAbA,UAAa,GAAM,CAGxB,CAfM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,CAAT;AAkBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AACI,IAAA,YAAY,EAAI,sBAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,OAAT;AAAA,KADxB;AAEI,IAAA,IAAI,EAAEN,YAFV;AAGI,IAAA,UAAU,EAAI,oBAAAK,IAAI;AAAA,aAAK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACA,IAAL,CAAUE,eAAjB,CAAL;AAAA,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKA,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,OAAO,EAAEL,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADF;AAWH;AAED,IAAMC,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,UAAU,EAAE;AACVH,IAAAA,eAAe,EAAE,OADP;AAEVI,IAAAA,gBAAgB,EAAE;AAFR,GAPmB;AAW/BC,EAAAA,OAAO,EAAE;AACLL,IAAAA,eAAe,EAAE,sBADZ;AAEHM,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,KAAK,EAAE,GAHJ;AAIHC,IAAAA,SAAS,EAAE,EAJR;AAKHC,IAAAA,YAAY,EAAE,EALX;AAMHC,IAAAA,YAAY,EAAE,CANX;AAOHC,IAAAA,WAAW,EAAE,OAPV;AAQHC,IAAAA,WAAW,EAAE,CARV;AASHC,IAAAA,OAAO,EAAE;AATN,GAXsB;AAsB/BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,OADJ;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAIHZ,IAAAA,gBAAgB,EAAE,EAJf;AAKHa,IAAAA,cAAc,EAAE,EALb;AAMHJ,IAAAA,OAAO,EAAE,CANN;AAOHK,IAAAA,iBAAiB,EAAE,EAPhB;AAQHR,IAAAA,YAAY,EAAE;AARX;AAtBwB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Alert, TextInput, TouchableOpacity, FlatList} from 'react-native'\n\nexport function CommentsScreen ({ navigation }) {\n\n    useEffect (async () => {\n        const response = await fetch(\"http://localhost:5000/get_comments\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then((response) => response.json())\n        const list = response.comments // an array of comments (restaurant name and comment)\n        console.log(list)\n\n        const [exampleState, setExampleState] = useState(list)\n\n        const addElement = () => {\n          // var newArray = [...list];\n          // setExampleState(newArray);\n        }\n    })\n    \n    return (\n      <View style={styles.container}>\n      <FlatList\n          keyExtractor = {item => item.comment}  \n          data={exampleState}\n          renderItem = {item => (<Text>{item.item.restaurant_name}</Text>)} />\n      <Button\n        title=\"Add element\"\n        onPress={addElement} />\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20,\n  },\n  textbox: {\n      backgroundColor: 'rgba(255,255,255,.5)',\n        height: 40,\n        width: 200,\n        marginTop: 10,\n        marginBottom: 20,\n        borderRadius: 5,\n        borderColor: 'white',\n        borderWidth: 1,\n        padding: 5\n  },\n  title: {\n      color: 'black',\n      fontSize: 30,\n      // backgroundColor: 'white',\n      marginHorizontal: 15,\n      marginVertical: 15,\n      padding: 7,\n      paddingHorizontal: 20,\n      borderRadius: 5\n  },\n})"]},"metadata":{},"sourceType":"module"}