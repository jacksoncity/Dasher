{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ianrose/code/csci335/Dasher/dasher-app/App.js\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { RecommendForm } from \"./RecommendForm\";\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Welcome to Dasher!\"), React.createElement(TextInput, {\n    style: styles.textbox,\n    placeholder: \"Username\",\n    placeholderTextColor: \"rgba(0,0,0,0.5)\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.textbox,\n    placeholder: \"Password\",\n    placeholderTextColor: \"rgba(0,0,0,0.5)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Main');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Login\")), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MainScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Main Menu\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Recommendations');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Get recommendation\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Record a new drive\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Statistics');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"View statistics\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"View/edit past drives\")));\n}\n\nfunction RecommendScreen(_ref3) {\n  var navigation = _ref3.navigation;\n\n  var onSubmit = function onSubmit(data) {\n    alert(JSON.stringify(data));\n  };\n\n  return React.createElement(\"form\", {\n    className: \"App\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Get Recommendation\"), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Restaurant:\"), React.createElement(\"input\", {\n    name: \"restaurant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Distance:\"), React.createElement(\"input\", {\n    name: \"distance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Username\"), React.createElement(\"input\", {\n    name: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Email\"), React.createElement(\"input\", {\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"About you\"), React.createElement(\"textarea\", {\n    name: \"about you\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RecordDriveScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Record Drive\"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Time\"), React.createElement(Text, {\n    style: styles.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, \"00:00:00\"), React.createElement(Image, {\n    source: {\n      uri: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/1D_line.svg/2000px-1D_line.svg.png\"\n    },\n    style: {\n      width: 400,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"Press the record button to start your drive!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Start Recording\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Save Drive\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Delete Drive\")));\n}\n\nfunction StatisticsScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"Statistics\"));\n}\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 2\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recommendations\",\n    component: RecommendScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecordDrive\",\n    component: RecordDriveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Statistics\",\n    component: StatisticsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n    backgroundColor: \"rgba(0,0,0,0.1)\",\n    height: 40,\n    width: 200,\n    marginTop: 0,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/ianrose/code/csci335/Dasher/dasher-app/App.js"],"names":["StatusBar","React","useEffect","useState","NavigationContainer","createStackNavigator","RecommendForm","LoginScreen","navigation","username","setUsername","styles","container","title","textbox","text","navigate","backgroundColor","button","MainScreen","RecommendScreen","onSubmit","data","alert","JSON","stringify","RecordDriveScreen","time","uri","width","height","StatisticsScreen","Stack","App","StyleSheet","create","flex","alignItems","justifyContent","color","fontSize","marginHorizontal","marginVertical","padding","paddingHorizontal","borderRadius","marginTop","marginBottom","borderColor","borderWidth","margin","alignContent","fontWeight"],"mappings":";;AAAA,OAAO,8BAAP;AAEA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;;AAEA,SAASC,aAAT;;AAGA,SAASC,WAAT,OAAqC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACHL,QAAQ,CAAC,EAAD,CADL;AAAA;AAAA,MAC5BM,QAD4B;AAAA,MAClBC,WADkB;;AAYnC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIE,oBAAC,SAAD;AACA,IAAA,KAAK,EAAEF,MAAM,CAACG,OADd;AAEA,IAAA,WAAW,EAAG,UAFd;AAEyB,IAAA,oBAAoB,EAAG,iBAFhD;AAGA,IAAA,YAAY,EAAI,sBAACC,IAAD;AAAA,aAAUL,WAAW,CAACK,IAAD,CAArB;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE,oBAAC,SAAD;AACA,IAAA,eAAe,EAAE,IADjB;AAEA,IAAA,KAAK,EAAEJ,MAAM,CAACG,OAFd;AAGA,IAAA,WAAW,EAAG,UAHd;AAGyB,IAAA,oBAAoB,EAAG,iBAHhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBE,oBAAC,gBAAD;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,UAAU,CAACQ,QAAX,CAAoB,MAApB,CAAN;AAAA,KAFX;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAhBF,EAuBE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF;AA4BD;;AAGD,SAASC,UAAT,QAAoC;AAAA,MAAdX,UAAc,SAAdA,UAAc;AAClC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACQ,QAAX,CAAoB,iBAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CAJF,EAUE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACQ,QAAX,CAAoB,aAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CAVF,EAgBE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACQ,QAAX,CAAoB,YAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CAhBF,EAsBE,oBAAC,gBAAD;AAEE,IAAA,KAAK,EAAE;AAAED,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CAtBF,CADF;AA+BD;;AAGD,SAASE,eAAT,QAAyC;AAAA,MAAdZ,UAAc,SAAdA,UAAc;;AACvC,MAAMa,QAAQ,GAAG,SAAXA,QAAW,CAAAC,IAAI,EAAI;AACvBC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAD,CAAL;AACD,GAFD;;AAIA,SACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,QAAQ,EAAED,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,EAYE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,EAeE;AAAU,IAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAiBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD;;AAGD,SAASK,iBAAT,QAA2C;AAAA,MAAdlB,UAAc,SAAdA,UAAc;AACzC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACI,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIJ,MAAM,CAACgB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAf;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAKnB,MAAM,CAACI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDARF,EASE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAWE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIJ,MAAM,CAACO,MAAlC;AAEE,IAAA,KAAK,EAAE;AAAED,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGN,MAAM,CAACO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CAXF,EAiBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIP,MAAM,CAACO,MAAlC;AAEE,IAAA,KAAK,EAAE;AAAED,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGN,MAAM,CAACO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAjBF,EAuBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIP,MAAM,CAACO,MAAlC;AAEE,IAAA,KAAK,EAAE;AAAED,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGN,MAAM,CAACO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CAvBF,CADF;AAgCD;;AAGD,SAASa,gBAAT,QAA0C;AAAA,MAAdvB,UAAc,SAAdA,UAAc;AACxC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAOD;;AAED,IAAMmB,KAAK,GAAG3B,oBAAoB,EAAlC;AAEA,eAAe,SAAS4B,GAAT,GAAe;AAC5B,SACD,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAE1B,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEY,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,iBAAnB;AAAqC,IAAA,SAAS,EAAEC,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEM,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEK,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADL,CADC;AAWD;AAED,IAAMpB,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC/BvB,EAAAA,SAAS,EAAE;AACTwB,IAAAA,IAAI,EAAE,CADG;AAETnB,IAAAA,eAAe,EAAE,SAFR;AAGToB,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BzB,EAAAA,KAAK,EAAE;AACL0B,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAILC,IAAAA,gBAAgB,EAAE,EAJb;AAKLC,IAAAA,cAAc,EAAE,EALX;AAMLC,IAAAA,OAAO,EAAE,CANJ;AAOLC,IAAAA,iBAAiB,EAAE,EAPd;AAQLC,IAAAA,YAAY,EAAE;AART,GAPwB;AAiB/B3B,EAAAA,MAAM,EAAE;AACNqB,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,gBAAgB,EAAE,EAHZ;AAINC,IAAAA,cAAc,EAAE,EAJV;AAKNG,IAAAA,YAAY,EAAE;AALR,GAjBuB;AAwB/B/B,EAAAA,OAAO,EAAE;AACRG,IAAAA,eAAe,EAAE,iBADT;AAERa,IAAAA,MAAM,EAAE,EAFA;AAGRD,IAAAA,KAAK,EAAE,GAHC;AAIRiB,IAAAA,SAAS,EAAE,CAJH;AAKRC,IAAAA,YAAY,EAAE,EALN;AAMRF,IAAAA,YAAY,EAAE,CANN;AAORG,IAAAA,WAAW,EAAE,OAPL;AAQRC,IAAAA,WAAW,EAAE,CARL;AASRN,IAAAA,OAAO,EAAE;AATD,GAxBsB;AAoC/B5B,EAAAA,IAAI,EAAE;AACJyB,IAAAA,QAAQ,EAAE,EADN;AAEJD,IAAAA,KAAK,EAAE,OAFH;AAGJW,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,YAAY,EAAE;AAJV,GApCyB;AA0C/BxB,EAAAA,IAAI,EAAE;AACJyB,IAAAA,UAAU,EAAE,MADR;AAEJZ,IAAAA,QAAQ,EAAE,EAFN;AAGJD,IAAAA,KAAK,EAAE,MAHH;AAIJY,IAAAA,YAAY,EAAE;AAJV;AA1CyB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler';\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Button, Text, View, Image} from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { SafeAreaView, TextInput, TouchableOpacity} from 'react-native';\nimport { RecommendForm } from \"./RecommendForm\";\n\n//Login screen\nfunction LoginScreen({ navigation }) {\n  const [username, setUsername] = useState([]);\n\n  /** \n  useEffect(() => {\n    fetch(\"/signup\").then(response =>\n      response.json().then(data => {\n        set(data.movies);\n      })\n    );\n  }, []); */\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}> \n      Welcome to Dasher!</Text>\n\n      <TextInput\n      style={styles.textbox}\n      placeholder = \"Username\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      onChangeText = {(text) => setUsername(text)}\n      />\n\n      <TextInput\n      secureTextEntry={true}\n      style={styles.textbox}\n      placeholder = \"Password\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      />\n\n      <TouchableOpacity\n        //onPress={() => alert(`You are logged in as ${username}`)}\n        onPress={() => navigation.navigate('Main')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Login</Text>\n      </TouchableOpacity>\n\n      <StatusBar style=\"auto\" />\n    </View>\n    \n  );\n}\n\n//Main menu screen\nfunction MainScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}> \n      Main Menu</Text>\n      \n      <TouchableOpacity\n        onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Get recommendation</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('RecordDrive')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Record a new drive</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Statistics')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View statistics</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        //onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View/edit past drives</Text>\n      </TouchableOpacity>\n\n    </View>\n  );\n}\n\n//GetRecommendations screen\nfunction RecommendScreen({ navigation }) {\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  };\n\n  return (\n    <form className=\"App\" onSubmit={onSubmit}>\n      <h1>Get Recommendation</h1>\n      <label>Restaurant:</label>\n      <input name=\"restaurant\" />\n\n      <label>Distance:</label>\n      <input name=\"distance\" />\n\n      <label>Username</label>\n      <input name=\"username\" />\n\n      <label>Email</label>\n      <input name=\"email\" />\n\n      <label>About you</label>\n      <textarea name=\"about you\" />\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n\n//RecordDrive screen\nfunction RecordDriveScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}> \n      Record Drive</Text>\n\n      <Text style = {styles.text}>Time</Text>\n      <Text style = {styles.time}>00:00:00</Text>\n      <Image source={{ uri: \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/1D_line.svg/2000px-1D_line.svg.png\"}} \n        style={{ width: 400, height: 30}} />\n      <Text style = { styles.text }>Press the record button to start your drive!</Text>\n      <StatusBar style=\"auto\" />\n\n      <TouchableOpacity style = {styles.button}\n        //onPress={startButton} \n        style={{ backgroundColor: 'white'}}>\n        <Text style={ styles.button}>Start Recording</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style = {styles.button}\n        //onPress={saveDrive} \n        style={{ backgroundColor: 'white'}}>\n        <Text style={ styles.button}>Save Drive</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style = {styles.button}\n        //onPress={deleteDrive} \n        style={{ backgroundColor: 'white'}}>\n        <Text style={ styles.button}>Delete Drive</Text>\n      </TouchableOpacity>\n\n    </View>\n  );\n}\n\n//Statistics screen\nfunction StatisticsScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}> \n      Statistics</Text>\n\n    </View>\n  );\n}\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n\t<NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Main\" component={MainScreen} />\n        <Stack.Screen name=\"Recommendations\" component={RecommendScreen} />\n        <Stack.Screen name=\"RecordDrive\" component={RecordDriveScreen} />\n        <Stack.Screen name=\"Statistics\" component={StatisticsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    //backgroundColor: 'white',\n    marginHorizontal: 15, \n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n  }, \n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5,\n  },\n  textbox: {\n  \tbackgroundColor: \"rgba(0,0,0,0.1)\",\n  \theight: 40, \n  \twidth: 200,\n  \tmarginTop: 0,\n  \tmarginBottom: 20,\n  \tborderRadius: 5,\n  \tborderColor: 'white', \n  \tborderWidth: 1,\n  \tpadding: 5,\n  },\n\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center',\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center',\n  },\n});\n\n//1ddf6e - traffic light green\n//21a35e - spinach green\n//3fb659 - grass green\n\n//<Button\n  //title=\"Go to Main... again\"\n  //onPress={() => navigation.navigate('Main')}\n///>\n\n/**\n * <TextInput\n      style={styles.textbox}\n      placeholder = \"Restaurant name\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      //onChangeText = {(text) => setUsername(text)}\n      />\n\n      <TextInput\n      style={styles.textbox}\n      placeholder = \"Driving distance\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      //onChangeText = {(text) => setUsername(text)}\n      />\n\n      <TextInput\n      style={styles.textbox}\n      placeholder = \"Expected payment\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      //onChangeText = {(text) => setUsername(text)}\n      />\n\n      <TouchableOpacity\n        //onPress={() => navigation.navigate('Statistics')}\n        // onPress={() => }\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Go</Text>\n      </TouchableOpacity>\n */"]},"metadata":{},"sourceType":"module"}