{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/RecommendScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport function RecommendScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var restaurantInputRef = React.useRef();\n  var distanceInputRef = React.useRef();\n  var payInputRef = React.useRef();\n\n  var _useState = useState(\"__\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newPrediction = _useState2[0],\n      setNewPrediction = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  var _useState5 = useState(\"__\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPercentage = _useState6[0],\n      setNewPercentage = _useState6[1];\n\n  var _useState7 = useState('__'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newRate = _useState8[0],\n      setNewRate = _useState8[1];\n\n  var onSubmit = function onSubmit(data) {\n    var json, restaurant, distance, pay, drive, response, prediction, message, rate;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            restaurant = json[\"restaurant\"];\n            distance = json[\"distance\"];\n            pay = json[\"pay\"];\n            drive = {\n              restaurant: restaurant,\n              distance: distance,\n              pay: pay\n            };\n            console.log(drive);\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_recommendation\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(drive)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 8:\n            response = _context.sent;\n            prediction = response.message.prediction;\n            message = response.message.message;\n            rate = response.message.rate;\n            console.log(\"message: \" + message + \", prediction: \" + prediction + \", rate: \" + rate);\n            setNewPrediction(Math.round(prediction * 100) / 100);\n            setNewMessage(message);\n            setNewRate(Math.round(rate * 100) / 100);\n            setNewPercentage(Math.round(prediction / rate * 100 * 10) / 10);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onAccept = function onAccept(data) {\n    return _regeneratorRuntime.async(function onAccept$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"Drive sent\");\n            navigation.navigate('RecordDrive');\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function refresh() {\n    navigation.navigate('Main');\n    navigation.navigate('Recommendations');\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Get Recommendation!\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Restaurant\"), React.createElement(Controller, {\n    name: \"restaurant\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: restaurantInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Distance\"), React.createElement(Controller, {\n    name: \"distance\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: distanceInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Pay\"), React.createElement(Controller, {\n    name: \"pay\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: payInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(onSubmit),\n    style: styles.buttonSpecial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Get Recommendation\"))), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"Prediction: $\" + newPrediction + \"/hour\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"(\" + newPercentage + \"% of your average rate $\" + newRate + \")\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"\" + newMessage), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(onAccept),\n    style: {\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      color: 'black',\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Accept Drive\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return refresh();\n    },\n    style: {\n      backgroundColor: 'rgba(150,150,150,.5)',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20,\n      borderColor: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      color: 'black',\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"  Clear Form\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  buttonSpecial: {\n    backgroundColor: 'white',\n    color: 'white',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 15,\n    borderColor: 'black',\n    borderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 40,\n    width: 200,\n    marginTop: 10,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 5,\n    alignContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/RecommendScreen.js"],"names":["useForm","Controller","StatusBar","React","useEffect","useState","Component","RecommendScreen","navigation","control","handleSubmit","errors","restaurantInputRef","useRef","distanceInputRef","payInputRef","newPrediction","setNewPrediction","newMessage","setNewMessage","newPercentage","setNewPercentage","newRate","setNewRate","onSubmit","data","json","JSON","parse","stringify","restaurant","distance","pay","drive","console","log","fetch","method","headers","body","then","response","prediction","message","rate","Math","round","onAccept","navigate","refresh","styles","container","title","label","required","props","textbox","value","onChange","buttonSpecial","button","text","backgroundColor","marginHorizontal","marginVertical","paddingHorizontal","borderWidth","borderRadius","fontSize","color","borderColor","StyleSheet","create","flex","alignItems","justifyContent","height","width","marginTop","marginBottom","padding","margin","alignContent"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Alert, TextInput, TouchableOpacity, FlatList} from 'react-native'\n\n//GetRecommendations screen\nexport function RecommendScreen({ navigation }) {\n    const { control, handleSubmit, errors } = useForm();\n    const restaurantInputRef = React.useRef()\n    const distanceInputRef = React.useRef()\n    const payInputRef = React.useRef()\n  \n    //Variables to print prediction and message\n    const [newPrediction, setNewPrediction] = useState(`__`);\n    const [newMessage, setNewMessage] = useState(``);\n    const [newPercentage, setNewPercentage] = useState(`__`);\n    const [newRate, setNewRate] = useState('__')\n    \n    const onSubmit = async (data) => { \n      // Once handleSubmit validates the inputs in onPress in button, this code is executed\n      const json = JSON.parse(JSON.stringify(data))\n      const restaurant = json[\"restaurant\"]\n      const distance = json[\"distance\"]\n      const pay = json[\"pay\"]\n      const drive = {restaurant, distance, pay}\n      console.log(drive)\n      const response = await fetch(\"http://localhost:5000/get_recommendation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(drive)\n      }).then((response) => response.json())\n      .then(data => {\n          return data;\n      });\n      \n      const prediction = response.message.prediction\n      const message = response.message.message\n      const rate = response.message.rate\n      console.log(\"message: \" + message+ \", prediction: \" + prediction + \", rate: \" + rate)\n  \n      //Set variables for later printing\n      setNewPrediction(Math.round(prediction * 100) / 100)\n      setNewMessage(message)\n      setNewRate((Math.round(rate * 100) / 100))\n      setNewPercentage(Math.round((((prediction / rate) * 100) * 10)) / 10)\n    }\n\n    const onAccept = async (data) => {\n      // Once handleSubmit validates the inputs in onPress in button, this code is executed\n      /**\n      const json = JSON.parse(JSON.stringify(data))\n      const restaurant = json[\"restaurant\"]\n      const distance = json[\"distance\"]\n      const pay = json[\"pay\"]\n      const drive = {restaurant, distance, pay}\n      console.log(drive)\n      const response = await fetch(\"http://localhost:5000/accept_drive\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(drive)\n      })\n      */\n      console.log(\"Drive sent\")\n      navigation.navigate('RecordDrive')\n    }\n  \n    function refresh() {\n      navigation.navigate('Main')\n      navigation.navigate('Recommendations')\n    }\n  \n    return (\n  \n      <View style={styles.container}>\n        \n        <Text style={styles.title}>Get Recommendation!</Text>\n        \n        <View>\n          <Text style={styles.label}>Restaurant</Text>\n          <Controller \n            name=\"restaurant\" \n            control={control} \n            rules= {{required: 'This is required'}}\n            defaultValue=''\n            render={(props) => \n              <TextInput {...props} \n                \n                style={styles.textbox}\n                onChangeText={(value) => {\n                  props.onChange(value)\n                }} \n                ref={restaurantInputRef}\n              />\n            }\n          />\n        </View>\n  \n        <View>\n          <Text style={styles.label}>Distance</Text>\n          <Controller \n            name=\"distance\" \n            control={control} \n            rules= {{required: 'This is required'}}\n            defaultValue=''\n            render={(props) => \n              <TextInput {...props} \n                \n                style={styles.textbox}\n                onChangeText={(value) => {\n                  props.onChange(value)\n                }} \n                ref={distanceInputRef}\n              />\n            }\n          />\n        </View>\n  \n        <View>\n          <Text style={styles.label}>Pay</Text>\n          <Controller \n            name=\"pay\" \n            control={control} \n            rules= {{required: 'This is required'}}\n            defaultValue=''\n            render={(props) => \n              <TextInput {...props} \n                \n                style={styles.textbox}\n                onChangeText={(value) => {\n                  props.onChange(value)\n                }} \n                ref={payInputRef}\n              />\n            }\n          />\n        </View>\n        <View>\n          <TouchableOpacity\n            // handleSubmit validates inputs before calling onSubmit\n            onPress={handleSubmit(onSubmit)}\n            style={styles.buttonSpecial}>\n          <Text style={ styles.button}>Get Recommendation</Text>\n        </TouchableOpacity>\n        </View>\n     \n        <Text style={styles.text}>{`Prediction: $${newPrediction}/hour`}</Text>\n        <Text style={styles.label}>{`(${newPercentage}% of your average rate $${newRate})`}</Text>\n        <Text style={styles.label}>{`${newMessage}`}</Text>\n  \n        <View>\n        <TouchableOpacity onPress={handleSubmit(onAccept)}\n            style={{backgroundColor: 'white',\n            marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5,\n            borderWidth: 1, borderRadius: 20}}>\n            <Text style={{fontSize: 17, color: 'black', marginHorizontal: 10, \n            marginVertical: 10, paddingHorizontal: 5}}>Accept Drive</Text>    \n        </TouchableOpacity>\n  \n        <TouchableOpacity onPress={() => refresh()}\n            style={{backgroundColor: 'rgba(150,150,150,.5)',\n            marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5,\n            borderWidth: 1, borderRadius: 20, borderColor: 'black'}}>\n            <Text style={{fontSize: 17, color: 'black', marginHorizontal: 10, \n            marginVertical: 10, paddingHorizontal: 5}} >  Clear Form</Text>\n        </TouchableOpacity>\n        </View>\n    \n      </View>\n      \n    )\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#66cc99',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n        color: 'black',\n        fontSize: 20,\n        marginHorizontal: 10,\n        marginVertical: 10,\n        borderRadius: 10\n    },\n    buttonSpecial: {\n      //backgroundColor: '#8ebce7',\n      //backgroundColor: '#94bfe7',\n      //backgroundColor: '#072A42',\n      backgroundColor: 'white',\n      color: 'white',\n      fontSize: 20,\n      marginHorizontal: 10,\n      marginVertical: 15,\n      borderColor: 'black',\n        borderWidth: 1,\n      paddingHorizontal: 5,\n      borderRadius: 7\n  },\n    textbox: {\n        backgroundColor: 'rgba(255,255,255,.5)',\n          height: 40,\n          width: 200,\n          marginTop: 10,\n          marginBottom: 20,\n          borderRadius: 5,\n          borderColor: 'white',\n          borderWidth: 1,\n          padding: 5\n    },\n    title: {\n        color: 'black',\n        fontSize: 30,\n        // backgroundColor: 'white',\n        marginHorizontal: 15,\n        marginVertical: 15,\n        padding: 7,\n        paddingHorizontal: 20,\n        borderRadius: 5\n    },\n    text: {\n      fontSize: 20,\n      color: 'black',\n      margin: 5,\n      alignContent: 'center'\n    },\n})"]},"metadata":{},"sourceType":"module"}