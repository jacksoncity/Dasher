{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/susannahbennett/node_modules/react-native-simple-table/src/Table.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nvar DEFAULT_HEIGHT = 240;\nvar DEFAULT_COLUMN_WIDTH = 60;\n\nvar Table = function (_Component) {\n  _inherits(Table, _Component);\n\n  var _super = _createSuper(Table);\n\n  function Table() {\n    _classCallCheck(this, Table);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Table, [{\n    key: \"_renderCell\",\n    value: function _renderCell(cellData, col) {\n      var style = {\n        width: col.width || this.props.columnWidth || DEFAULT_COLUMN_WIDTH\n      };\n      return React.createElement(View, {\n        key: col.dataIndex,\n        style: [styles.cell, style],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, cellData));\n    }\n  }, {\n    key: \"_renderHeader\",\n    value: function _renderHeader() {\n      var _this = this;\n\n      var _this$props = this.props,\n          columns = _this$props.columns,\n          columnWidth = _this$props.columnWidth;\n      return columns.map(function (col, index) {\n        var style = {\n          width: col.width || columnWidth || DEFAULT_COLUMN_WIDTH\n        };\n        return React.createElement(View, {\n          key: index,\n          style: [styles.headerItem, style],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, col.title));\n      });\n    }\n  }, {\n    key: \"_renderRow\",\n    value: function _renderRow(rowData, index) {\n      var _this$props2 = this.props,\n          columns = _this$props2.columns,\n          renderCell = _this$props2.renderCell;\n\n      if (!renderCell) {\n        renderCell = this._renderCell.bind(this);\n      }\n\n      return React.createElement(View, {\n        key: index,\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, columns.map(function (col) {\n        return renderCell(rowData[col.dataIndex], col);\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          dataSource = _this$props3.dataSource,\n          height = _this$props3.height;\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        contentContainerStyle: [styles.contentContainer, {\n          height: height\n        }],\n        horizontal: true,\n        bounces: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, this._renderHeader()), React.createElement(ScrollView, {\n        style: styles.dataView,\n        contentContainerStyle: styles.dataViewContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, dataSource.map(function (rowData, index) {\n        return _this2._renderRow(rowData, index);\n      }))));\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nTable.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    dataIndex: PropTypes.string.isRequired,\n    width: PropTypes.number\n  })).isRequired,\n  columnWidth: PropTypes.number,\n  height: PropTypes.number,\n  dataSource: PropTypes.array.isRequired,\n  renderCell: PropTypes.func\n};\nTable.defaultProps = {\n  columns: [],\n  dataSource: [],\n  columnWidth: DEFAULT_COLUMN_WIDTH,\n  height: DEFAULT_HEIGHT,\n  renderCell: undefined\n};\nvar styles = StyleSheet.create({\n  container: {},\n  contentContainer: {\n    height: 240\n  },\n  header: {\n    flexDirection: 'row'\n  },\n  headerItem: {\n    minHeight: 30,\n    width: DEFAULT_COLUMN_WIDTH,\n    backgroundColor: '#efefef',\n    borderRightWidth: 1,\n    borderRightColor: '#dfdfdf',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  dataView: {\n    flexGrow: 1\n  },\n  dataViewContent: {},\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#fbfbfb',\n    borderBottomWidth: 1,\n    borderBottomColor: '#dfdfdf'\n  },\n  cell: {\n    minHeight: 25,\n    width: DEFAULT_COLUMN_WIDTH,\n    backgroundColor: 'transparent',\n    borderRightWidth: 1,\n    borderRightColor: '#dfdfdf',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Table;","map":{"version":3,"sources":["/Users/susannahbennett/node_modules/react-native-simple-table/src/Table.js"],"names":["React","Component","PropTypes","DEFAULT_HEIGHT","DEFAULT_COLUMN_WIDTH","Table","cellData","col","style","width","props","columnWidth","dataIndex","styles","cell","columns","map","index","headerItem","title","rowData","renderCell","_renderCell","bind","row","dataSource","height","container","contentContainer","header","_renderHeader","dataView","dataViewContent","_renderRow","propTypes","arrayOf","shape","string","isRequired","number","array","func","defaultProps","undefined","StyleSheet","create","flexDirection","minHeight","backgroundColor","borderRightWidth","borderRightColor","alignItems","justifyContent","flexGrow","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["/**\n * Created by Jeepeng on 2016/11/20.\n */\n\nimport React, { Component } from 'react'\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  Text\n} from 'react-native'\nimport PropTypes from 'prop-types'\n\nconst DEFAULT_HEIGHT = 240;\nconst DEFAULT_COLUMN_WIDTH = 60;\n\nclass Table extends Component {\n\n  static propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      dataIndex: PropTypes.string.isRequired,\n      width: PropTypes.number\n    })).isRequired,\n    columnWidth: PropTypes.number,\n    height: PropTypes.number,\n    dataSource: PropTypes.array.isRequired,\n    renderCell: PropTypes.func,\n  };\n\n  static defaultProps = {\n    columns: [],\n    dataSource: [],\n    columnWidth: DEFAULT_COLUMN_WIDTH,\n    height: DEFAULT_HEIGHT,\n    renderCell: undefined\n  };\n\n  _renderCell(cellData, col) {\n    let style = {width: col.width || this.props.columnWidth || DEFAULT_COLUMN_WIDTH};\n    return (\n      <View key={col.dataIndex} style={[styles.cell, style]}>\n        <Text>{cellData}</Text>\n      </View>\n    )\n  }\n\n  _renderHeader() {\n    let { columns, columnWidth } = this.props;\n    return columns.map((col, index) => {\n      let style = {width: col.width || columnWidth || DEFAULT_COLUMN_WIDTH};\n      return (\n        <View key={index} style={[styles.headerItem, style]}>\n          <Text>{col.title}</Text>\n        </View>\n      )\n    })\n  }\n\n  _renderRow(rowData, index) {\n    let { columns, renderCell } = this.props;\n    if(!renderCell) {\n      renderCell = this._renderCell.bind(this, );\n    }\n    return (\n      <View key={index} style={styles.row}>\n        {\n          columns.map(col => renderCell(rowData[col.dataIndex], col))\n        }\n      </View>\n    );\n  }\n\n  render() {\n    let { dataSource, height } = this.props;\n    return (\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={[styles.contentContainer , { height }]}\n        horizontal={true}\n        bounces={false} >\n        <View>\n          <View style={styles.header}>\n            { this._renderHeader() }\n          </View>\n          <ScrollView\n            style={styles.dataView}\n            contentContainerStyle={styles.dataViewContent} >\n            { dataSource.map((rowData, index) => this._renderRow(rowData, index)) }\n          </ScrollView>\n        </View>\n      </ScrollView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  },\n  contentContainer: {\n    height: 240\n  },\n  header: {\n    flexDirection: 'row',\n  },\n  headerItem: {\n    minHeight: 30,\n    width: DEFAULT_COLUMN_WIDTH,\n    backgroundColor: '#efefef',\n    borderRightWidth: 1,\n    borderRightColor: '#dfdfdf',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  dataView: {\n    flexGrow: 1,\n  },\n  dataViewContent: {\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#fbfbfb',\n    borderBottomWidth: 1,\n    borderBottomColor: '#dfdfdf',\n  },\n  cell: {\n    minHeight: 25,\n    width: DEFAULT_COLUMN_WIDTH,\n    backgroundColor: 'transparent',\n    borderRightWidth: 1,\n    borderRightColor: '#dfdfdf',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nexport default Table\n"]},"metadata":{},"sourceType":"module"}