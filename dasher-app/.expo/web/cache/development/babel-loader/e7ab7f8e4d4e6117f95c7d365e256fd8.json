{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RecommendForm } from \"./RecommendForm\";\nimport ReactDOM from 'react-dom';\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 2\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recommendations\",\n    component: RecommendScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecordDrive\",\n    component: RecordDriveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Statistics\",\n    component: StatisticsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n}\nvar Stack = createStackNavigator();\n\nfunction LoginScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var usernameInputRef = React.useRef();\n  var passwordInputRef = React.useRef();\n  useEffect(function () {\n    function fetchData() {\n      var result;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:5000/login\"));\n\n            case 2:\n              result = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, []);\n\n  var onSubmit = function onSubmit(d) {\n    console.log(d);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Username\"), React.createElement(Controller, {\n    name: \"username\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.input,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: usernameInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    name: \"password\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.input,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: usernameInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"black\",\n    title: \"Log In\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction MainScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"Main Menu\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Recommendations');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Get recommendation\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \"Record a new drive\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Statistics');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"View statistics\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"View/edit past drives\")));\n}\n\nfunction RecommendScreen(_ref3) {\n  var _this2 = this;\n\n  var navigation = _ref3.navigation;\n\n  var _useForm2 = useForm(),\n      control = _useForm2.control,\n      handleSubmit = _useForm2.handleSubmit,\n      errors = _useForm2.errors;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"Restaurant\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref4) {\n      var onChange = _ref4.onChange,\n          onBlur = _ref4.onBlur,\n          value = _ref4.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"restaurant\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }), errors.restaurant && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, \"This is required.\"), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, \"Distance\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref5) {\n      var onChange = _ref5.onChange,\n          onBlur = _ref5.onBlur,\n          value = _ref5.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"distance\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }), errors.distance && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 27\n    }\n  }, \"This is required.\"), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, \"Pay\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref6) {\n      var onChange = _ref6.onChange,\n          onBlur = _ref6.onBlur,\n          value = _ref6.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"pay\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }), errors.pay && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 22\n    }\n  }, \"This is required.\"), React.createElement(Button, {\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RecordDriveScreen(_ref7) {\n  var navigation = _ref7.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, \"Record Drive\"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, \"Time\"), React.createElement(Text, {\n    style: styles.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, \"00:00:00\"), React.createElement(Image, {\n    source: {\n      uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/1D_line.svg/2000px-1D_line.svg.png'\n    },\n    style: {\n      width: 400,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, \"Press the record button to start your drive!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, \"Start Recording\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, \"Save Drive\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, \"Delete Drive\")));\n}\n\nfunction StatisticsScreen(_ref8) {\n  var navigation = _ref8.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, \"Statistics\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    height: 40,\n    width: 200,\n    marginTop: 0,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/App.js"],"names":["useForm","Controller","StatusBar","React","useEffect","useState","NavigationContainer","createStackNavigator","RecommendForm","ReactDOM","App","LoginScreen","MainScreen","RecommendScreen","RecordDriveScreen","StatisticsScreen","Stack","navigation","control","handleSubmit","errors","usernameInputRef","useRef","passwordInputRef","fetchData","fetch","result","onSubmit","d","console","log","styles","container","label","required","props","input","value","onChange","title","navigate","backgroundColor","button","data","onBlur","restaurant","distance","pay","text","time","uri","width","height","StyleSheet","create","flex","alignItems","justifyContent","color","fontSize","marginHorizontal","marginVertical","padding","paddingHorizontal","borderRadius","textbox","marginTop","marginBottom","borderColor","borderWidth","margin","alignContent","fontWeight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState } from 'react'\nimport { StyleSheet, Button, Text, View, Image, Alert, SafeAreaView, TextInput, TouchableOpacity } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport { RecommendForm } from './RecommendForm'\nimport ReactDOM from 'react-dom'\n\nexport default function App () {\n  return (\n\t<NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Main\" component={MainScreen} />\n        <Stack.Screen name=\"Recommendations\" component={RecommendScreen} />\n        <Stack.Screen name=\"RecordDrive\" component={RecordDriveScreen} />\n        <Stack.Screen name=\"Statistics\" component={StatisticsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst Stack = createStackNavigator()\n\n// Login screen\nfunction LoginScreen ({ navigation }) {\n  // useState initializes username and returns array, reactive variable\n  // const [username, setUsername] = useState([])\n\n  // useForm allows us to validate inputs and build forms\n  const {control, handleSubmit, errors} = useForm()\n  const usernameInputRef = React.useRef()\n  const passwordInputRef = React.useRef()\n\n  useEffect(() =>{\n    async function fetchData () {\n      const result = await fetch(\n        \"http://127.0.0.1:5000/login\"\n      )\n    }\n    // fetchData()\n  }, [])\n\n  const onSubmit = (d) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    console.log(d)\n    // navigation.navigate('Main')\n    // const obj = JSON.parse(d)\n    //console.log(JSON.parse(d).username)\n    //console.log(JSON.parse(d).password)\n    // make sure to reset values\n  }\n\n  \n/**\n  useEffect(() => {\n    async function fetchData() {\n      // mode: no cors is because fetch was blocked\n      const response = await fetch(\"http://127.0.0.1:5000/login\", \n        {\n          method: 'POST',\n          mode: 'no-cors'\n        })\n        .catch(err => console.error(err))\n      const p = await response.json()\n      // .then(response => response.json())\n      // .then(console.log(response))\n      console.log(response)\n      console.log(p)\n      reset(response)\n    }\n    }\n  )\n  */\n\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.label}>Username</Text>\n        <Controller \n          name=\"username\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.input}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={usernameInputRef}\n            />\n          }\n          \n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Password</Text>\n        <Controller \n          name=\"password\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.input}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={usernameInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Button color=\"black\" title=\"Log In\" \n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit)} \n          // onPress={() => navigation.navigate('Main')}\n          />\n      </View>\n    </View>\n  )\n}\n\n// Main menu screen\nfunction MainScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Main Menu</Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Get recommendation</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('RecordDrive')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Record a new drive</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Statistics')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View statistics</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        // onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View/edit past drives</Text>\n      </TouchableOpacity>\n\n    </View>\n  )\n}\n\n//GetRecommendations screen\nfunction RecommendScreen({ navigation }) {\n  const { control, handleSubmit, errors } = useForm();\n  const onSubmit = data => console.log(data);\n\n  return (\n    \n    <View style={styles.container}>\n      <Text style={styles.title}>Restaurant</Text>\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <TextInput\n            style={styles.input}\n            onBlur={onBlur}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"restaurant\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      {errors.restaurant && <Text>This is required.</Text>}\n\n      <Text style={styles.title}>Distance</Text>\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <TextInput\n            style={styles.input}\n            onBlur={onBlur}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"distance\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      {errors.distance && <Text>This is required.</Text>}\n\n      <Text style={styles.title}>Pay</Text>\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <TextInput\n            style={styles.input}\n            onBlur={onBlur}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"pay\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      {errors.pay && <Text>This is required.</Text>}\n\n      <Button title=\"Submit\" onPress={handleSubmit(onSubmit)} />\n    </View>\n    \n  );\n}\n\n// RecordDrive screen\nfunction RecordDriveScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Record Drive</Text>\n\n      <Text style = {styles.text}>Time</Text>\n      <Text style = {styles.time}>00:00:00</Text>\n      <Image source={{ uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/1D_line.svg/2000px-1D_line.svg.png' }}\n        style={{ width: 400, height: 30 }} />\n      <Text style = { styles.text }>Press the record button to start your drive!</Text>\n      <StatusBar style=\"auto\" />\n\n      <TouchableOpacity style = {styles.button}\n        // onPress={startButton}\n        style={{ backgroundColor: 'white' }}>\n        <Text style={ styles.button}>Start Recording</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style = {styles.button}\n        // onPress={saveDrive}\n        style={{ backgroundColor: 'white' }}>\n        <Text style={ styles.button}>Save Drive</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style = {styles.button}\n        // onPress={deleteDrive}\n        style={{ backgroundColor: 'white' }}>\n        <Text style={ styles.button}>Delete Drive</Text>\n      </TouchableOpacity>\n\n    </View>\n  )\n}\n\n// Statistics screen\nfunction StatisticsScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Statistics</Text>\n\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    // backgroundColor: 'white',\n    marginHorizontal: 15,\n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n  \tbackgroundColor: 'rgba(0,0,0,0.1)',\n  \theight: 40,\n  \twidth: 200,\n  \tmarginTop: 0,\n  \tmarginBottom: 20,\n  \tborderRadius: 5,\n  \tborderColor: 'white',\n  \tborderWidth: 1,\n  \tpadding: 5\n  },\n\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center',\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4,\n  }\n});\n\n    /**\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Welcome to Dasher!</Text>\n\n      <TextInput\n      style={styles.textbox}\n      placeholder = \"Username\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      onChangeText = {(text) => setUsername(text)}\n      />\n\n      <TextInput\n      secureTextEntry={true}\n      style={styles.textbox}\n      placeholder = \"Password\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      />\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Main')\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Login</Text>\n        \n      </TouchableOpacity>\n\n      <StatusBar style=\"auto\" />\n    </View>\n    */"]},"metadata":{},"sourceType":"module"}