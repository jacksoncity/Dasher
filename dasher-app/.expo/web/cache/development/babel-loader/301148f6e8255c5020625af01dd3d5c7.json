{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/ianrose/code/csci335/Dasher/dasher-app/App.js\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RecommendForm } from \"./RecommendForm\";\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 2\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recommendations\",\n    component: RecommendScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecordDrive\",\n    component: RecordDriveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Statistics\",\n    component: StatisticsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n}\nvar Stack = createStackNavigator();\n\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Welcome to Dasher!\"), React.createElement(TextInput, {\n    style: styles.textbox,\n    placeholder: \"Username\",\n    placeholderTextColor: \"rgba(0,0,0,0.5)\",\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.textbox,\n    placeholder: \"Password\",\n    placeholderTextColor: \"rgba(0,0,0,0.5)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Main');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Login\")), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MainScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Main Menu\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Recommendations');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Get recommendation\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Record a new drive\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Statistics');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"View statistics\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"View/edit past drives\")));\n}\n\nfunction RecommendScreen(_ref3) {\n  var _this = this;\n\n  var navigation = _ref3.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  console.log(errors);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Restaurant\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref4) {\n      var onChange = _ref4.onChange,\n          onBlur = _ref4.onBlur,\n          value = _ref4.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"Restaurant\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), errors.restaurant && React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"This is required.\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Distance\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref5) {\n      var onChange = _ref5.onChange,\n          onBlur = _ref5.onBlur,\n          value = _ref5.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"Distance\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"Pay\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref6) {\n      var onChange = _ref6.onChange,\n          onBlur = _ref6.onBlur,\n          value = _ref6.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"Pay\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction RecordDriveScreen(_ref7) {\n  var navigation = _ref7.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, \"Record Drive\"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, \"Time\"), React.createElement(Text, {\n    style: styles.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"00:00:00\"), React.createElement(Image, {\n    source: {\n      uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/1D_line.svg/2000px-1D_line.svg.png'\n    },\n    style: {\n      width: 400,\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"Press the record button to start your drive!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"Start Recording\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \"Save Drive\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, \"Delete Drive\")));\n}\n\nfunction StatisticsScreen(_ref8) {\n  var navigation = _ref8.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"Statistics\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    height: 40,\n    width: 200,\n    marginTop: 0,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center'\n  },\n  input: {\n    backgroundColor: 'grey',\n    height: 40,\n    width: 100,\n    padding: 10,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["/Users/ianrose/code/csci335/Dasher/dasher-app/App.js"],"names":["useForm","Controller","StatusBar","React","useEffect","useState","NavigationContainer","createStackNavigator","RecommendForm","App","LoginScreen","MainScreen","RecommendScreen","RecordDriveScreen","StatisticsScreen","Stack","navigation","username","setUsername","styles","container","title","textbox","text","navigate","backgroundColor","button","control","handleSubmit","errors","onSubmit","data","console","log","onChange","onBlur","value","input","required","restaurant","time","uri","width","height","StyleSheet","create","flex","alignItems","justifyContent","color","fontSize","marginHorizontal","marginVertical","padding","paddingHorizontal","borderRadius","marginTop","marginBottom","borderColor","borderWidth","margin","alignContent","fontWeight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState } from 'react'\nimport { StyleSheet, Button, Text, View, Image, Alert, SafeAreaView, TextInput, TouchableOpacity, AppRegistry } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { RecommendForm } from './RecommendForm'\n\nexport default function App () {\n  return (\n\t<NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Main\" component={MainScreen} />\n        <Stack.Screen name=\"Recommendations\" component={RecommendScreen} />\n        <Stack.Screen name=\"RecordDrive\" component={RecordDriveScreen} />\n        <Stack.Screen name=\"Statistics\" component={StatisticsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst Stack = createStackNavigator()\n\n// Login screen\nfunction LoginScreen ({ navigation }) {\n  const [username, setUsername] = useState([])\n\n  \n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Welcome to Dasher!</Text>\n\n      <TextInput\n      style={styles.textbox}\n      placeholder = \"Username\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      onChangeText = {(text) => setUsername(text)}\n      />\n\n      <TextInput\n      secureTextEntry={true}\n      style={styles.textbox}\n      placeholder = \"Password\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      />\n\n      <TouchableOpacity\n        // onPress={() => alert(`You are logged in as ${username}`)}\n        onPress={() => navigation.navigate('Main')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Login</Text>\n      </TouchableOpacity>\n\n      <StatusBar style=\"auto\" />\n    </View>\n\n  )\n}\n\n// Main menu screen\nfunction MainScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text>\n      Main Menu</Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Get recommendation</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('RecordDrive')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Record a new drive</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Statistics')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View statistics</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        // onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View/edit past drives</Text>\n      </TouchableOpacity>\n\n    </View>\n  )\n}\n\n// GetRecommendations screen\nfunction RecommendScreen ({ navigation }) {\n  const { control, handleSubmit, errors } = useForm();\n  const onSubmit = data => console.log(data);\n\n  console.log(errors)\n\n  return (\n    <View>\n      <Text>Restaurant</Text>\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <TextInput\n            style={styles.input}\n            onBlur={onBlur}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"Restaurant\"\n        rules={{ required: true }}\n        defaultValue=\"\"\n      />\n      {errors.restaurant && <Text>This is required.</Text>}\n      <Text>Distance</Text>\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <TextInput\n            style={styles.input}\n            onBlur={onBlur}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"Distance\"\n        defaultValue=\"\"\n      />\n      <Text>Pay</Text>\n      <Controller\n        control={control}\n        render={({ onChange, onBlur, value }) => (\n          <TextInput\n            style={styles.input}\n            onBlur={onBlur}\n            onChangeText={value => onChange(value)}\n            value={value}\n          />\n        )}\n        name=\"Pay\"\n        defaultValue=\"\"\n      />\n\n      <Button title=\"Submit\" onPress={handleSubmit(onSubmit)} />\n    </View>\n  );\n}\n\n// RecordDrive screen\nfunction RecordDriveScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Record Drive</Text>\n\n      <Text style = {styles.text}>Time</Text>\n      <Text style = {styles.time}>00:00:00</Text>\n      <Image source={{ uri: 'https://upload.wikimedia.org/wikipedia/commons/thumb/b/b4/1D_line.svg/2000px-1D_line.svg.png' }}\n        style={{ width: 400, height: 30 }} />\n      <Text style = { styles.text }>Press the record button to start your drive!</Text>\n      <StatusBar style=\"auto\" />\n\n      <TouchableOpacity style = {styles.button}\n        // onPress={startButton}\n        style={{ backgroundColor: 'white' }}>\n        <Text style={ styles.button}>Start Recording</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style = {styles.button}\n        // onPress={saveDrive}\n        style={{ backgroundColor: 'white' }}>\n        <Text style={ styles.button}>Save Drive</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity style = {styles.button}\n        // onPress={deleteDrive}\n        style={{ backgroundColor: 'white' }}>\n        <Text style={ styles.button}>Delete Drive</Text>\n      </TouchableOpacity>\n\n    </View>\n  )\n}\n\n// Statistics screen\nfunction StatisticsScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Statistics</Text>\n\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    // backgroundColor: 'white',\n    marginHorizontal: 15,\n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n  \tbackgroundColor: 'rgba(0,0,0,0.1)',\n  \theight: 40,\n  \twidth: 200,\n  \tmarginTop: 0,\n  \tmarginBottom: 20,\n  \tborderRadius: 5,\n  \tborderColor: 'white',\n  \tborderWidth: 1,\n  \tpadding: 5\n  },\n\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center'\n  },\n  input: {\n    backgroundColor: 'grey',\n    height: 40,\n    width: 100,\n    padding: 10,\n    borderRadius: 4,\n  }\n})\n\n\n// 1ddf6e - traffic light green\n// 21a35e - spinach green\n// 3fb659 - grass green\n\n// <Button\n// title=\"Go to Main... again\"\n// onPress={() => navigation.navigate('Main')}\n/// >"]},"metadata":{},"sourceType":"module"}