{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/RecordDriveScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport function RecordDriveScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var formatNumber = function formatNumber(number) {\n    return (\"0\" + number).slice(-2);\n  };\n\n  var getRemaining = function getRemaining(time) {\n    var mins = Math.floor(time / 60);\n    var secs = time - mins * 60;\n    return {\n      mins: formatNumber(mins),\n      secs: formatNumber(secs)\n    };\n  };\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      remainingSecs = _useState2[0],\n      setRemainingSecs = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isActive = _useState4[0],\n      setIsActive = _useState4[1];\n\n  var _getRemaining = getRemaining(remainingSecs),\n      mins = _getRemaining.mins,\n      secs = _getRemaining.secs;\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      laps = _useState6[0],\n      setLaps = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      index = _useState8[0],\n      setIndex = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      start = _useState10[0],\n      setStart = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      arrive = _useState12[0],\n      setArrive = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      depart = _useState14[0],\n      setDepart = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      end = _useState16[0],\n      setEnd = _useState16[1];\n\n  var takeLap = function takeLap() {\n    laps.push(Date(Date.now()));\n    var m = mins;\n    var s = secs;\n\n    if (index === 0) {\n      setIsActive(!isActive);\n      start.push(m + \":\" + s);\n      console.log(\"index = 0\");\n    } else if (index === 1) {\n      arrive.push(m + \":\" + s);\n      console.log(\"index = 1\");\n    } else if (index === 2) {\n      depart.push(m + \":\" + s);\n      console.log(\"index = 2\");\n    } else if (index === 3) {\n      end.push(m + \":\" + s);\n      console.log(\"index = 3\");\n    } else {\n      alert(\"No more splits to take!\");\n    }\n\n    setIndex(index + 1);\n    console.log(index);\n  };\n\n  var reset = function reset() {\n    setRemainingSecs(0);\n    setIsActive(false);\n    setLaps([]);\n    setStart([]);\n    setArrive([]);\n    setDepart([]);\n    setEnd([]);\n    setIndex(0);\n  };\n\n  var saveDrive = function saveDrive() {\n    return _regeneratorRuntime.async(function saveDrive$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            alert('Recording successfully saved!');\n            navigation.navigate('SaveDrive');\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var interval = null;\n\n    if (isActive) {\n      interval = setInterval(function () {\n        setRemainingSecs(function (remainingSecs) {\n          return remainingSecs + 1;\n        });\n      }, 1000);\n    } else if (!isActive && remainingSecs !== 0) {\n      clearInterval(interval);\n    }\n\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isActive, remainingSecs]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.timerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, mins + \":\" + secs), React.createElement(View, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: takeLap,\n    style: {\n      backgroundColor: '#A9A9A9',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      marginHorizontal: 60,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, index === 1 ? 'At Restaurant' : index === 2 ? 'Left Restaurant' : index === 3 ? 'End Drive' : 'Start')))), React.createElement(View, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: reset,\n    style: {\n      textAlign: 'center',\n      backgroundColor: 'black',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      marginHorizontal: 60,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Reset\")), React.createElement(TouchableOpacity, {\n    onPress: saveDrive,\n    style: {\n      textAlign: 'center',\n      backgroundColor: 'rgba(255,255,255,.5)',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20,\n      borderColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      marginHorizontal: 60,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Save\")), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.55)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, start[0]), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.75)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, index < 1 ? '--' : start[1]), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.55)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, arrive[0]), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.75)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, index < 2 ? '--' : arrive[1]), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.55)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, depart[0]), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.75)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, index < 3 ? '--' : depart[1]), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.55)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, end[0]), React.createElement(Text, {\n    style: {\n      backgroundColor: 'rgba(255,255,255,.75)',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, index < 4 ? '--' : end[1])));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  timerText: {\n    fontSize: 70,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/RecordDriveScreen.js"],"names":["StatusBar","React","useEffect","useState","Component","RecordDriveScreen","navigation","formatNumber","number","slice","getRemaining","time","mins","Math","floor","secs","remainingSecs","setRemainingSecs","isActive","setIsActive","laps","setLaps","index","setIndex","start","setStart","arrive","setArrive","depart","setDepart","end","setEnd","takeLap","push","Date","now","m","s","console","log","alert","reset","saveDrive","navigate","interval","setInterval","clearInterval","styles","container","timerText","textAlign","flexDirection","justifyContent","backgroundColor","marginHorizontal","marginVertical","paddingHorizontal","borderWidth","borderRadius","fontSize","color","borderColor","StyleSheet","create","flex","alignItems"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, TouchableOpacity } from 'react-native'\n\n// RecordDrive screen\nexport function RecordDriveScreen ({ navigation }) {\n    // For formatting the time, ensuring the zeros in front of the time\n    // Slice -2 means selecting from the end of the array\n    const formatNumber = number => `0${number}`.slice(-2);\n  \n      // For getting minutes and seconds from a time passed\n    const getRemaining = (time) => {\n      const mins = Math.floor(time / 60);\n      const secs = time - mins * 60;\n      return { mins: formatNumber(mins), secs: formatNumber(secs) };\n    }\n    // Storing a variable remainingSecs\n    const [remainingSecs, setRemainingSecs] = useState(0);\n    // Storing a variable isActive\n    const [isActive, setIsActive] = useState(false);\n    // Calling getRemaining to get time passed\n    const { mins, secs } = getRemaining(remainingSecs);\n  \n    const [laps, setLaps] = useState([]);\n    // let [index, setIndex] = useState(0);\n  \n    const [index, setIndex] = useState(0);\n    const [start, setStart] = useState([]);\n    const [arrive, setArrive] = useState([]);\n    const [depart, setDepart] = useState([]);\n    const [end, setEnd] = useState([]);\n  \n    const takeLap = () => {\n      // setting start position\n      laps.push(Date(Date.now()));\n  \n      const m = mins;\n      const s = secs;\n       \n      if (index === 0) {\n        setIsActive(!isActive);\n        start.push(`${m}:${s}`);\n        console.log (\"index = 0\")\n      } else if (index === 1) {\n        arrive.push(`${m}:${s}`);\n        console.log (\"index = 1\")\n      } else if (index === 2) {\n        depart.push(`${m}:${s}`);\n        console.log (\"index = 2\")\n      } else if (index === 3) {\n        end.push(`${m}:${s}`);\n        console.log (\"index = 3\")\n      } else {\n        alert(\"No more splits to take!\")\n      }\n      setIndex(index + 1);\n      console.log(index)\n    }\n    // Resets the time back to initial state\n    const reset = () => {\n      setRemainingSecs(0);\n      setIsActive(false);\n      \n      setLaps([])\n      setStart([])\n      setArrive([])\n      setDepart([])\n      setEnd([])\n      setIndex(0)\n    }\n  \n    const saveDrive = async () => {\n      /**\n      const end = laps.pop();\n      const restaurant_leave = laps.pop();\n      const restaurant_arrival = laps.pop();\n      const start = laps.pop();\n      \n      const drive = {\"start\": start, \"restaurant_arrival\": restaurant_arrival, \"restaurant_leave\": restaurant_leave, \"end\": end}\n      console.log(drive)\n      const response = await fetch(\"http://localhost:5000/record_drive\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(drive)\n      })\n      console.log(response);\n      */\n      \n      alert('Recording successfully saved!')\n      navigation.navigate('SaveDrive')\n    }\n    \n    useEffect(() => {\n      let interval = null;\n      if (isActive) {\n        interval = setInterval(() => {\n          setRemainingSecs(remainingSecs => remainingSecs + 1);\n        }, 1000);\n      } else if (!isActive && remainingSecs !== 0) {\n        clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }, [isActive, remainingSecs]);\n  \n  \n    return (\n      <View style={styles.container}>\n        <StatusBar barStyle=\"light-content\" />\n        <Text style={styles.timerText}>{`${mins}:${secs}`}</Text>\n        <View style={{textAlign: 'center'}}>\n        <View style= {{flexDirection: 'row', textAlign: 'center', justifyContent: 'center'}}>\n          <TouchableOpacity onPress={takeLap} style={ {backgroundColor: '#A9A9A9', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20}}>\n            <Text style={{fontSize: 15, marginHorizontal: 60, marginVertical: 10, paddingHorizontal: 5, color: 'black'}}>\n              { (index === 1) ? 'At Restaurant' : (index === 2) ? 'Left Restaurant' : (index === 3) ? 'End Drive' : 'Start'}\n              </Text>\n          </TouchableOpacity>\n          </View>\n          </View>\n          <View style={{textAlign: 'center'}}>\n          <TouchableOpacity onPress={reset} style={{textAlign: 'center', backgroundColor: 'black', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20}}>\n            <Text style={{fontSize: 15, marginHorizontal: 60, marginVertical: 10, paddingHorizontal: 5, color: 'white'}}>Reset</Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={saveDrive} style={{textAlign: 'center', backgroundColor: 'rgba(255,255,255,.5)', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20, borderColor: 'white'}}>\n            <Text style={{fontSize: 15, marginHorizontal: 60, marginVertical: 10, paddingHorizontal: 5, color: 'black'}}>Save</Text>\n          </TouchableOpacity>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.55)', textAlign: 'center'}}>{ start[0]}</Text>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.75)', textAlign: 'center'}}>{ (index < 1) ? '--' : start[1]}</Text>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.55)', textAlign: 'center'}}>{arrive[0]}</Text>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.75)', textAlign: 'center'}}>{ (index < 2) ? '--' : arrive[1]}</Text>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.55)', textAlign: 'center'}}>{depart[0]}</Text>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.75)', textAlign: 'center'}}>{ (index < 3) ? '--' : depart[1]}</Text>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.55)', textAlign: 'center'}}>{end[0]}</Text>\n            <Text style={{backgroundColor: 'rgba(255,255,255,.75)', textAlign: 'center'}}>{ (index < 4) ? '--' : end[1]}</Text>\n      </View>\n    </View>\n    );\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#66cc99',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    timerText: {\n      fontSize: 70,\n      color: 'white',\n    },\n  });"]},"metadata":{},"sourceType":"module"}