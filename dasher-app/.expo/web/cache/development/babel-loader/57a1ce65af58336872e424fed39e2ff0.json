{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer, ThemeProvider } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RecommendForm } from \"./RecommendForm\";\nimport ReactDOM from 'react-dom';\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 2\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recommendations\",\n    component: RecommendScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecordDrive\",\n    component: RecordDriveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Statistics\",\n    component: StatisticsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n}\nvar Stack = createStackNavigator();\n\nfunction LoginScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm({\n    criteriaMode: 'all'\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var usernameInputRef = React.useRef();\n  var passwordInputRef = React.useRef();\n\n  var onSubmit = function onSubmit(data) {\n    var json, username, password, user, response;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            username = json[\"username\"];\n            password = json[\"password\"];\n            user = {\n              username: username,\n              password: password\n            };\n            console.log(JSON.stringify(user));\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:5000/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(user)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 7:\n            response = _context.sent;\n\n            if (response.message == \"login successfull\") {\n              navigation.navigate('Main');\n            } else {}\n\n            console.log(response);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onError = function onError(errors, e) {\n    return console.log(errors, e);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Welcome!\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Username\"), React.createElement(Controller, {\n    name: \"username\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: usernameInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    name: \"password\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        secureTextEntry: true,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: passwordInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"black\",\n    title: \"Log In\",\n    onPress: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction MainScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Main Menu\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Recommendations');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Get recommendation\")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"Record a new drive\")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Statistics');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"View statistics\")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"View/edit past drives\")));\n}\n\nfunction RecommendScreen(_ref3) {\n  var _this2 = this;\n\n  var navigation = _ref3.navigation;\n\n  var _useForm2 = useForm(),\n      control = _useForm2.control,\n      handleSubmit = _useForm2.handleSubmit,\n      errors = _useForm2.errors;\n\n  var restaurantInputRef = React.useRef();\n  var distanceInputRef = React.useRef();\n  var payInputRef = React.useRef();\n\n  var onSubmit = function onSubmit(data) {\n    var json, restaurant, distance, pay, drive, response, prediction, message;\n    return _regeneratorRuntime.async(function onSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            restaurant = json[\"restaurant\"];\n            distance = json[\"distance\"];\n            pay = json[\"pay\"];\n            drive = {\n              restaurant: restaurant,\n              distance: distance,\n              pay: pay\n            };\n            console.log(drive);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:5000/get_recommendation\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(drive)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 8:\n            response = _context2.sent;\n            prediction = response.message.prediction;\n            message = response.message.message;\n            console.log(\"message: \" + message + \", prediction: \" + prediction);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"Get Recommendation!\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"Restaurant\"), React.createElement(Controller, {\n    name: \"restaurant\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: restaurantInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, \"Distance\"), React.createElement(Controller, {\n    name: \"distance\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: distanceInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, \"Pay\"), React.createElement(Controller, {\n    name: \"pay\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: payInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"black\",\n    title: \"Get Recommendation\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction RecordDriveScreen(_ref4) {\n  var navigation = _ref4.navigation;\n  var laps = [{\n    name: 'Lap 1',\n    value: '00.00.01'\n  }, {\n    name: 'Lap 2',\n    value: '00.00.02'\n  }, {\n    name: 'Lap 3',\n    value: '00.00.03'\n  }, {\n    name: 'Lap 4',\n    value: '00.00.04'\n  }, {\n    name: 'Lap 5',\n    value: '00.00.05'\n  }];\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.title2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, \"Stopwatch\")), React.createElement(View, {\n    style: styles.timerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.lapTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, \"00:00.95\"), React.createElement(Text, {\n    style: styles.mainTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, \"00:02.95\"))), React.createElement(View, {\n    style: styles.bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 10\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: \"#777\",\n    style: styles.button2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, \"Lap\")), React.createElement(TouchableHighlight, {\n    underlayColor: \"#777\",\n    style: styles.button2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, \"Start\")), React.createElement(FlatList, {\n    data: laps,\n    renderItem: React.createElement(Text, {\n      style: style.lapRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 25\n      }\n    }, data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction StatisticsScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, \"Statistics\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n    backgroundColor: 'white',\n    height: 40,\n    width: 200,\n    marginTop: 0,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4\n  },\n  header: {\n    borderBottomWidth: 0.5,\n    paddingTop: 20,\n    paddingBottom: 10,\n    backgroundColor: '#F9F9F9'\n  },\n  title2: {\n    alignSelf: 'center',\n    fontWeight: '600'\n  },\n  timerWrapper: {\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    flex: 1\n  },\n  top: {\n    flex: 1\n  },\n  bottom: {\n    flex: 2,\n    backgroundColor: '#F0EFF5'\n  },\n  mainTimer: {\n    fontSize: 60,\n    fontWeight: '100',\n    alignSelf: 'flex-end'\n  },\n  lapTimer: {\n    fontSize: 18,\n    alignSelf: 'flex-end'\n  },\n  buttonWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingTop: 15,\n    paddingBottom: 30\n  },\n  button2: {\n    height: 80,\n    width: 80,\n    borderRadius: 40,\n    backgroundColor: '#FFF',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  lapRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    height: 40,\n    paddingTop: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#ddd'\n  },\n  lapNumber: {\n    fontSize: 16,\n    color: '#777'\n  },\n  lapTime: {\n    color: '#000',\n    fontSize: 20,\n    fontWeight: '300'\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/App.js"],"names":["useForm","Controller","StatusBar","React","useEffect","useState","Component","NavigationContainer","ThemeProvider","createStackNavigator","RecommendForm","ReactDOM","App","LoginScreen","MainScreen","RecommendScreen","RecordDriveScreen","StatisticsScreen","Stack","navigation","criteriaMode","control","handleSubmit","setError","errors","usernameInputRef","useRef","passwordInputRef","onSubmit","data","json","JSON","parse","stringify","username","password","user","console","log","fetch","method","headers","body","then","response","message","navigate","onError","e","styles","container","title","label","required","props","textbox","value","onChange","backgroundColor","button","text","restaurantInputRef","distanceInputRef","payInputRef","restaurant","distance","pay","drive","prediction","laps","name","top","header","title2","timerWrapper","lapTimer","mainTimer","bottom","buttonWrapper","button2","style","lapRow","StyleSheet","create","flex","alignItems","justifyContent","color","fontSize","marginHorizontal","marginVertical","padding","paddingHorizontal","borderRadius","height","width","marginTop","marginBottom","borderColor","borderWidth","margin","alignContent","time","fontWeight","input","borderBottomWidth","paddingTop","paddingBottom","alignSelf","flexDirection","borderBottomColor","lapNumber","lapTime"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Image, Alert, TextInput, TouchableOpacity, TouchableHighlight, FlatList } from 'react-native'\nimport { NavigationContainer, ThemeProvider } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport { RecommendForm } from './RecommendForm'\nimport ReactDOM from 'react-dom'\n\nexport default function App () {\n  return (\n\t<NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Main\" component={MainScreen} />\n        <Stack.Screen name=\"Recommendations\" component={RecommendScreen} />\n        <Stack.Screen name=\"RecordDrive\" component={RecordDriveScreen} />\n        <Stack.Screen name=\"Statistics\" component={StatisticsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst Stack = createStackNavigator()\n\n// Login screen\nfunction LoginScreen ({ navigation }) {\n\n  // useForm allows us to validate inputs and build forms\n  const {control, handleSubmit, setError, errors} = useForm( { criteriaMode: 'all' })\n  const usernameInputRef = React.useRef()\n  const passwordInputRef = React.useRef()\n\n  const onSubmit = async (data) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    const json = JSON.parse(JSON.stringify(data))\n    const username = json[\"username\"]\n    const password = json[\"password\"]\n    const user = {username, password}\n    console.log(JSON.stringify(user))\n    const response = await fetch(\"http://127.0.0.1:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then((response) => response.json())\n    .then(data => {\n        return data;\n    });\n    if (response.message == \"login successfull\") {\n      navigation.navigate('Main');\n    } else {\n      //clear the input fields and display message\n    }\n    console.log(response)\n    \n  }\n\n  const onError = (errors, e) => console.log(errors, e)\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.title}>Welcome!</Text>\n        <Text style={styles.label}>Username</Text>\n        <Controller \n          name=\"username\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={usernameInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Password</Text>\n        <Controller \n          name=\"password\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              secureTextEntry={true}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={passwordInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Button color=\"black\" title=\"Log In\" \n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit, onError)} \n          // onPress={() => navigation.navigate('Main')}\n          />\n      </View>\n    </View>\n  )\n}\n\n// Main menu screen\nfunction MainScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Main Menu</Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Get recommendation</Text>\n      </TouchableOpacity>\n\n      <Text style={styles.text}>\n        </Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('RecordDrive')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Record a new drive</Text>\n      </TouchableOpacity>\n\n      <Text style={styles.text}>\n        </Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Statistics')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View statistics</Text>\n      </TouchableOpacity>\n\n      <Text style={styles.text}>\n        </Text>\n\n      <TouchableOpacity\n        // onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View/edit past drives</Text>\n      </TouchableOpacity>\n\n    </View>\n  )\n}\n\n//GetRecommendations screen\nfunction RecommendScreen({ navigation }) {\n  const { control, handleSubmit, errors } = useForm();\n  const restaurantInputRef = React.useRef()\n  const distanceInputRef = React.useRef()\n  const payInputRef = React.useRef()\n  \n  \n  const onSubmit = async (data) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    const json = JSON.parse(JSON.stringify(data))\n    const restaurant = json[\"restaurant\"]\n    const distance = json[\"distance\"]\n    const pay = json[\"pay\"]\n    const drive = {restaurant, distance, pay}\n    console.log(drive)\n    const response = await fetch(\"http://127.0.0.1:5000/get_recommendation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(drive)\n    }).then((response) => response.json())\n    .then(data => {\n        return data;\n    });\n    const prediction = response.message.prediction\n    const message = response.message.message\n    console.log(\"message: \" + message+ \", prediction: \" + prediction)\n  }\n\n\n  return (\n\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.title}>Get Recommendation!</Text>\n        <Text style={styles.label}>Restaurant</Text>\n        <Controller \n          name=\"restaurant\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={restaurantInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Distance</Text>\n        <Controller \n          name=\"distance\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={distanceInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Pay</Text>\n        <Controller \n          name=\"pay\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={payInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Button color=\"black\" title=\"Get Recommendation\" \n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit)} \n          // onPress={() => navigation.navigate('Main')}\n          />\n      </View>\n    </View>\n    \n  )\n}\n\n// RecordDrive screen\nfunction RecordDriveScreen ({ navigation }) {\n  /**\n  const stopwatch = () => {\n    const [isTimerStart, setIsTimerStart] = useState(false);\n    const [isStopwatchStart, setIsStopwatchStart] = useState(false);\n    const [timerDuration, setTimerDuration] = useState(90000);\n    const [resetTimer, setResetTimer] = useState(false);\n    const [resetStopwatch, setResetStopwatch] = useState(false);\n  }\n  */\n\n  let laps = [\n    { name: 'Lap 1', value: '00.00.01'},\n    { name: 'Lap 2', value: '00.00.02'},\n    { name: 'Lap 3', value: '00.00.03'},\n    { name: 'Lap 4', value: '00.00.04'},\n    { name: 'Lap 5', value: '00.00.05'},\n  ];\n  /**\n  const ds = new FlatList.DataSource({\n    rowHasChanged: (row1, row2) => row1 !== row2,\n  });\n  */\n\n/**\n  this.state = {\n    // dataSource: ds.cloneWithRows(laps)\n    isLoading: false,\n  } */\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.top}>\n        {<View style={styles.header}>\n          <Text style={styles.title2}>Stopwatch</Text>\n          </View>\n          }\n        {<View style={styles.timerWrapper}>\n          <Text style={styles.lapTimer}>00:00.95</Text>\n          <Text style={styles.mainTimer}>00:02.95</Text> \n          </View>}\n      </View>\n      <View style={styles.bottom}>\n        {<View style={styles.buttonWrapper}>\n          <TouchableHighlight underlayColor='#777' style={styles.button2}>\n            <Text>Lap</Text>\n          </TouchableHighlight>\n          <TouchableHighlight underlayColor='#777' style={styles.button2}>\n            <Text>Start</Text>\n          </TouchableHighlight>\n          <FlatList\n            data = {laps}\n            renderItem={<Text style={style.lapRow}>{data}</Text>}\n          />\n          </View>}\n      </View>\n    </View>\n  )\n  \n}\n\n// Statistics screen\nfunction StatisticsScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Statistics</Text>\n\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1ddf6e',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    // backgroundColor: 'white',\n    marginHorizontal: 15,\n    marginVertical: 20,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n    // backgroundColor: 'rgba(0,0,0,0.1)',\n    backgroundColor: 'white',\n  \theight: 40,\n  \twidth: 200,\n  \tmarginTop: 0,\n  \tmarginBottom: 20,\n  \tborderRadius: 5,\n  \tborderColor: 'white',\n  \tborderWidth: 1,\n  \tpadding: 5\n  },\n\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center',\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4,\n  },\n  header: {\n    borderBottomWidth: 0.5,\n    paddingTop: 20,\n    paddingBottom: 10,\n    backgroundColor: '#F9F9F9'\n  },\n  title2: {\n    alignSelf: 'center',\n    fontWeight: '600',\n  },\n  timerWrapper: {\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  top: {\n    flex: 1,\n  },\n  bottom: {\n    flex: 2,\n    backgroundColor: '#F0EFF5'\n  },\n  mainTimer: {\n    fontSize: 60,\n    fontWeight: '100',\n    // borderWidth: 0.5,\n    alignSelf: 'flex-end',\n  },\n  lapTimer: {\n    fontSize: 18,\n    // borderWidth: 0.5,\n    alignSelf: 'flex-end'\n  },\n  buttonWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingTop: 15,\n    paddingBottom: 30,\n  },\n  button2: {\n    height: 80,\n    width: 80,\n    borderRadius: 40,\n    backgroundColor: '#FFF',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  lapRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    height: 40,\n    paddingTop: 10,\n    borderBottomWidth: 0.5,\n    borderBottomColor: '#ddd'\n  },\n  lapNumber: {\n    fontSize: 16, \n    color: '#777'\n  },\n  lapTime: {\n    color: '#000',\n    fontSize: 20,\n    fontWeight: '300'\n  },\n});\n\n    /**\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Welcome to Dasher!</Text>\n\n      <TextInput\n      style={styles.textbox}\n      placeholder = \"Username\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      onChangeText = {(text) => setUsername(text)}\n      />\n\n      <TextInput\n      secureTextEntry={true}\n      style={styles.textbox}\n      placeholder = \"Password\" placeholderTextColor = 'rgba(0,0,0,0.5)'\n      />\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Main')\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Login</Text>\n        \n      </TouchableOpacity>\n\n      <StatusBar style=\"auto\" />\n    </View>\n    */"]},"metadata":{},"sourceType":"module"}