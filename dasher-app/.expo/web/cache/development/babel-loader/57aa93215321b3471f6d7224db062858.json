{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/CommentsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Trash2 } from 'react-feather';\nexport function CommentsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrollList = _useState2[0],\n      setScrollList = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response, list;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_comments\", {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (response) {\n                return response.json();\n              }));\n\n            case 2:\n              response = _context.sent;\n              list = response.comments;\n              console.log(list);\n              setScrollList(list);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n\n  var deleteItem = function deleteItem(id) {\n    console.log(id);\n    console.log(scrollList.filter(function (item) {\n      return item.comment_id == id;\n    }).map(function (_ref2) {\n      var comment = _ref2.comment,\n          comment_id = _ref2.comment_id,\n          restaurant = _ref2.restaurant;\n      return {\n        comment: comment,\n        comment_id: comment_id,\n        restaurant: restaurant\n      };\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.comment_id.toString();\n    },\n    data: scrollList,\n    renderItem: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.textbox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.restaurant,\n        onPress: function onPress() {\n          return navigation.navigate('Main');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, item.item.restaurant_name), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return deleteItem(item.comment_id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, React.createElement(Trash2, {\n        name: \"trash-2\",\n        color: \"black\",\n        size: 15,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      }))), React.createElement(Text, {\n        style: styles.comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, item.item.comment));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SaveDrive');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Add comment\")));\n}\nvar styles = StyleSheet.create({\n  button: {\n    height: 40,\n    width: 150,\n    marginTop: 10,\n    marginBottom: 5,\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    fontSize: 20,\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 60,\n    width: 250,\n    marginTop: 10,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  restaurant: {\n    fontSize: 14,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  comment: {\n    fontSize: 12,\n    color: 'black'\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/CommentsScreen.js"],"names":["useForm","Controller","React","useEffect","useState","Component","Trash2","CommentsScreen","navigation","scrollList","setScrollList","fetchData","fetch","method","headers","then","response","json","list","comments","console","log","deleteItem","id","filter","item","comment_id","map","comment","restaurant","styles","container","toString","textbox","flexDirection","justifyContent","navigate","restaurant_name","button","StyleSheet","create","height","width","marginTop","marginBottom","backgroundColor","color","borderRadius","borderColor","borderWidth","padding","fontSize","textAlign","flex","alignItems","scrollView","marginHorizontal","title","marginVertical","paddingHorizontal","fontWeight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Alert, TextInput, TouchableOpacity, FlatList} from 'react-native'\nimport { Trash2 } from 'react-feather';\n\nexport function CommentsScreen ({ navigation }) {\n  const [scrollList, setScrollList] = useState({})\n\n    useEffect ( () => {\n      async function fetchData() {\n        const response = await fetch(\"http://localhost:5000/get_comments\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then((response) => response.json())\n        const list = response.comments // an array of comments (restaurant name and comment)\n        console.log(list)\n\n        setScrollList(list)\n      }\n      fetchData();\n    }, [])\n    // if the text is longer than what can be displayed, cut it short with ...\n    const deleteItem = (id) => {\n      // send back the whole item and it will delete that comment\n      // const [toDelete, changeToDelete] = useState({})\n      // console.log(scrollList.filter(scrollList, { comment_id: id}))\n      console.log(id)\n      console.log(scrollList.filter(function(item){\n        return item.comment_id == id;\n      }).map(function({comment, comment_id, restaurant}){\n         return {comment, comment_id, restaurant};\n      }))\n      /**\n      const response = await fetch(\"http://localhost:5000/get_comments\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then((response) => response.json())\n      const list = response.comments // an array of comments (restaurant name and comment)\n      console.log(list)\n      */\n    }\n\n    return (\n      <View style={styles.container}>\n      <FlatList\n          keyExtractor = {item => item.comment_id.toString()}  \n          data={scrollList}\n          renderItem = {item => (\n            <TouchableOpacity \n              style={styles.textbox} >\n              <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\n                <Text style={styles.restaurant} onPress={() => navigation.navigate('Main')}>{item.item.restaurant_name}</Text>\n                <TouchableOpacity onPress={() => deleteItem(item.comment_id)}>\n                  <Trash2\n                    name=\"trash-2\"\n                    color='black'\n                    size={15}\n                  />\n                </TouchableOpacity>\n              </View>\n              <Text style={styles.comment}>{item.item.comment}</Text>\n            </TouchableOpacity>\n            )} />\n      <TouchableOpacity\n       onPress={() => navigation.navigate('SaveDrive')} \n      >\n        <Text style={styles.button}>\n          Add comment\n        </Text>\n      </TouchableOpacity>\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 40,\n    width: 150,\n    marginTop: 10,\n    marginBottom: 5,\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    fontSize: 20,\n    textAlign: 'center',\n    // alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20,\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n      height: 60,\n      width: 250,\n      marginTop: 10,\n      // marginBottom: 5,\n      borderRadius: 5,\n      borderColor: 'white',\n      borderWidth: 1,\n      padding: 5\n  },\n  title: {\n      color: 'black',\n      fontSize: 30,\n      // backgroundColor: 'white',\n      marginHorizontal: 15,\n      marginVertical: 15,\n      padding: 7,\n      paddingHorizontal: 20,\n      borderRadius: 5\n  },\n  restaurant: {\n    fontSize: 14,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  comment: {\n    fontSize: 12,\n    color: 'black'\n  }\n})"]},"metadata":{},"sourceType":"module"}