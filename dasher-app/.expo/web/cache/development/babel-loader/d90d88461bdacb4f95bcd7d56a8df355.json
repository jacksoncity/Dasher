{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/ViewDrivesScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Trash2 } from 'react-feather';\nexport function ViewDrivesScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrollList = _useState2[0],\n      setScrollList = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response, list;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_drives\", {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (response) {\n                return response.json();\n              }));\n\n            case 2:\n              response = _context.sent;\n              list = response.drives;\n              console.log(list);\n              setScrollList(list);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalTime = _useState4[0],\n      setTT = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    data: scrollList,\n    renderItem: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.textbox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.driveTitle,\n        onPress: function onPress() {\n          return navigation.navigate('Main');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, item.item.restaurant_name, \" - \", item.item.start.substr(8, 3), \" \", item.item.start.substr(5, 2), \", \", item.item.start.substr(12, 4))), React.createElement(Text, {\n        style: styles.comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, \"Overall Time: \", Math.abs(item.item.end.substr(17, 2) - item.item.start.substr(17, 2)), \":\", Math.abs(item.item.end.substr(20, 2) - item.item.start.substr(20, 2)), \":\", Math.abs(item.item.end.substr(23, 2) - item.item.start.substr(23, 2))), React.createElement(Text, {\n        style: styles.comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, \"Pay: $\", item.item.pay));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  button: {\n    height: 40,\n    width: 150,\n    marginTop: 10,\n    marginBottom: 5,\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    fontSize: 20,\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 80,\n    width: 350,\n    marginTop: 10,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  driveTitle: {\n    fontSize: 14,\n    color: 'black',\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginTop: 5\n  },\n  comment: {\n    fontSize: 12,\n    color: 'black',\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/ViewDrivesScreen.js"],"names":["React","useEffect","useState","Component","Trash2","ViewDrivesScreen","navigation","scrollList","setScrollList","fetchData","fetch","method","headers","then","response","json","list","drives","console","log","totalTime","setTT","styles","container","item","id","toString","textbox","flexDirection","justifyContent","driveTitle","navigate","restaurant_name","start","substr","comment","Math","abs","end","pay","StyleSheet","create","button","height","width","marginTop","marginBottom","backgroundColor","color","borderRadius","borderColor","borderWidth","padding","fontSize","textAlign","flex","alignItems","scrollView","marginHorizontal","title","marginVertical","paddingHorizontal","fontWeight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Alert, TextInput, TouchableOpacity, FlatList} from 'react-native'\nimport { Trash2 } from 'react-feather';\n\nexport function ViewDrivesScreen ({ navigation }) {\n  const [scrollList, setScrollList] = useState({})\n\n    useEffect ( () => {\n      async function fetchData() {\n        const response = await fetch(\"http://localhost:5000/get_drives\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then((response) => response.json())\n        const list = response.drives // an array of comments (restaurant name and comment)\n        console.log(list)\n\n        setScrollList(list)\n      }\n      fetchData();\n    }, [])\n\n    const [totalTime, setTT] = useState()\n\n    return (\n      <View style={styles.container}>\n      <FlatList\n          keyExtractor = {item => item.id.toString()}  \n          data={scrollList}\n          renderItem = {item => (\n            <TouchableOpacity \n              style={styles.textbox} >\n              <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\n                <Text style={styles.driveTitle} onPress={() => navigation.navigate('Main')}>{item.item.restaurant_name} - {item.item.start.substr(8, 3)} {item.item.start.substr(5, 2)}, {item.item.start.substr(12, 4)}</Text>\n              </View>\n              <Text style={styles.comment}>Overall Time: {(Math.abs(item.item.end.substr(17, 2)-item.item.start.substr(17,2)))}:{(Math.abs(item.item.end.substr(20, 2)-item.item.start.substr(20,2)))}:{(Math.abs(item.item.end.substr(23, 2) - item.item.start.substr(23, 2)))}</Text>\n              <Text style={styles.comment}>Pay: ${item.item.pay}</Text>\n            </TouchableOpacity>\n            )} />\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 40,\n    width: 150,\n    marginTop: 10,\n    marginBottom: 5,\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    fontSize: 20,\n    textAlign: 'center',\n    // alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20,\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n      height: 80,\n      width: 350,\n      marginTop: 10,\n      // marginBottom: 5,\n      borderRadius: 5,\n      borderColor: 'white',\n      borderWidth: 1,\n      padding: 5\n  },\n  title: {\n      color: 'black',\n      fontSize: 30,\n      // backgroundColor: 'white',\n      marginHorizontal: 15,\n      marginVertical: 15,\n      padding: 7,\n      paddingHorizontal: 20,\n      borderRadius: 5\n  },\n  driveTitle: {\n    fontSize: 14,\n    color: 'black',\n    fontWeight: 'bold',\n    marginBottom: 5,\n    marginTop: 5\n  },\n  comment: {\n    fontSize: 12,\n    color: 'black',\n    marginBottom: 5\n  }\n})"]},"metadata":{},"sourceType":"module"}