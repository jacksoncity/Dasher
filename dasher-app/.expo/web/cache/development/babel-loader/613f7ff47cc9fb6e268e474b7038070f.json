{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer, ThemeProvider } from '@react-navigation/native';\nimport { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport { RecommendForm } from \"./RecommendForm\";\nimport ReactDOM from 'react-dom';\nimport { State } from 'react-native-gesture-handler';\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 2\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Signup\",\n    component: SignupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    options: {\n      headerLeft: null,\n      headerBackTitle: 'Log out'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recommendations\",\n    component: RecommendScreen,\n    options: {\n      title: 'Get Recommendation'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecordDrive\",\n    component: RecordDriveScreen,\n    options: {\n      title: 'Record Drive'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SaveDrive\",\n    component: SaveDriveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Statistics\",\n    component: StatisticsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n}\nvar Stack = createStackNavigator();\n\nfunction LoginScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm({\n    criteriaMode: 'all'\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var usernameInputRef = React.useRef();\n  var passwordInputRef = React.useRef();\n\n  var onSubmit = function onSubmit(data) {\n    var json, username, password, user, response;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            username = json[\"username\"];\n            password = json[\"password\"];\n            user = {\n              username: username,\n              password: password\n            };\n            console.log(JSON.stringify(user));\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"accepts\": \"application/json\"\n              },\n              body: JSON.stringify(user)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 7:\n            response = _context.sent;\n            console.log(response.message);\n\n            if (response.message == \"login successful\") {\n              navigation.navigate('Main');\n            } else {\n              alert(\"Login invalid\");\n            }\n\n            console.log(response);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signup = function signup() {\n    navigation.navigate('Signup');\n  };\n\n  var onError = function onError(errors, e) {\n    return console.log(errors, e);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Welcome!\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Username\"), React.createElement(Controller, {\n    name: \"username\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        autoCapitalize: false,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: usernameInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    name: \"password\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        secureTextEntry: true,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: passwordInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(onSubmit, onError),\n    style: styles.buttonSpecial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Log In\"))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \" \"), React.createElement(TouchableOpacity, {\n    onPress: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonWhiteText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"New to Dasher? Create an account\"))));\n}\n\nfunction SignupScreen(_ref2) {\n  var _this2 = this;\n\n  var navigation = _ref2.navigation;\n\n  var _useForm2 = useForm({\n    criteriaMode: 'all'\n  }),\n      control = _useForm2.control,\n      handleSubmit = _useForm2.handleSubmit,\n      setError = _useForm2.setError,\n      errors = _useForm2.errors;\n\n  var usernameInputRef = React.useRef();\n  var passwordInputRef = React.useRef();\n  var emailInputRef = React.useRef();\n\n  var onSubmit = function onSubmit(data) {\n    var json, username, password, email, newUser, response;\n    return _regeneratorRuntime.async(function onSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            username = json[\"username\"];\n            password = json[\"password\"];\n            email = json[\"email\"];\n            newUser = {\n              username: username,\n              password: password,\n              email: email\n            };\n            console.log(JSON.stringify(newUser));\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/signup\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(newUser)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 8:\n            response = _context2.sent;\n\n            if (response.message == \"user created\") {\n              navigation.navigate('Login');\n              alert(\"Account created! Please sign in\");\n            } else {\n              alert(\"A problem occurred. Please try again\");\n            }\n\n            console.log(response);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onError = function onError(errors, e) {\n    return console.log(errors, e);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, \"Create Account\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Username\"), React.createElement(Controller, {\n    name: \"username\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        autoCapitalize: false,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: usernameInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    name: \"password\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        secureTextEntry: true,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: passwordInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, \"Email\"), React.createElement(Controller, {\n    name: \"email\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        autoCapitalize: false,\n        secureTextEntry: false,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: emailInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(onSubmit, onError),\n    style: styles.buttonSpecial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\n\nfunction MainScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, \"Main Menu\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Recommendations');\n    },\n    style: styles.buttonBasic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, \"Get recommendation\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: styles.buttonBasic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, \"  Record a new drive  \")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Statistics');\n    },\n    style: styles.buttonBasic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, \"      View statistics      \")), React.createElement(TouchableOpacity, {\n    style: styles.buttonBasic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, \"View/edit past drives\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    style: styles.buttonLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, \"Log out\")));\n}\n\nfunction RecommendScreen(_ref4) {\n  var _this3 = this;\n\n  var navigation = _ref4.navigation;\n\n  var _useForm3 = useForm(),\n      control = _useForm3.control,\n      handleSubmit = _useForm3.handleSubmit,\n      errors = _useForm3.errors;\n\n  var restaurantInputRef = React.useRef();\n  var distanceInputRef = React.useRef();\n  var payInputRef = React.useRef();\n\n  var _useState = useState(\"__\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newPrediction = _useState2[0],\n      setNewPrediction = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  var onSubmit = function onSubmit(data) {\n    var json, restaurant, distance, pay, drive, response, prediction, message;\n    return _regeneratorRuntime.async(function onSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            restaurant = json[\"restaurant\"];\n            distance = json[\"distance\"];\n            pay = json[\"pay\"];\n            drive = {\n              restaurant: restaurant,\n              distance: distance,\n              pay: pay\n            };\n            console.log(drive);\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_recommendation\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(drive)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 8:\n            response = _context3.sent;\n            prediction = response.message.prediction;\n            message = response.message.message;\n            console.log(\"message: \" + message + \", prediction: \" + prediction);\n            setNewPrediction(Math.round(prediction * 100) / 100);\n            setNewMessage(message);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function refresh() {\n    navigation.navigate('Main');\n    navigation.navigate('Recommendations');\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, \"Get Recommendation!\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, \"Restaurant\"), React.createElement(Controller, {\n    name: \"restaurant\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: restaurantInputRef,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }\n  }, \"Distance\"), React.createElement(Controller, {\n    name: \"distance\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: distanceInputRef,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }, \"Pay\"), React.createElement(Controller, {\n    name: \"pay\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: payInputRef,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(onSubmit),\n    style: styles.buttonSpecial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, \"Get Recommendation\"))), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }\n  }, \"Prediction: $\" + newPrediction + \"/hour\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }\n  }, \"Notes: \" + newMessage), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }\n  }, \"  \"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      color: 'black',\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 11\n    }\n  }, \"Accept Drive\")), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: 'gray',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      color: 'black',\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, \"Reject Drive\"))));\n}\n\nfunction RecordDriveScreen(_ref5) {\n  var _this4 = this;\n\n  var navigation = _ref5.navigation;\n\n  var formatNumber = function formatNumber(number) {\n    return (\"0\" + number).slice(-2);\n  };\n\n  var getRemaining = function getRemaining(time) {\n    var mins = Math.floor(time / 60);\n    var secs = time - mins * 60;\n    return {\n      mins: formatNumber(mins),\n      secs: formatNumber(secs)\n    };\n  };\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      remainingSecs = _useState6[0],\n      setRemainingSecs = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isActive = _useState8[0],\n      setIsActive = _useState8[1];\n\n  var _getRemaining = getRemaining(remainingSecs),\n      mins = _getRemaining.mins,\n      secs = _getRemaining.secs;\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      laps = _useState10[0],\n      setLaps = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      index = _useState12[0],\n      setIndex = _useState12[1];\n\n  var toggle = function toggle() {\n    setIsActive(!isActive);\n    takeLap();\n  };\n\n  var takeLap = function takeLap() {\n    laps.push(Date(Date.now()));\n    var splits = splits.map(function (split) {\n      var properties = {\n        \"Increment\": split.Increment,\n        \"Time\": Date(Date.now()).toString()\n      };\n    });\n  };\n\n  var reset = function reset() {\n    setRemainingSecs(0);\n    setIsActive(false);\n    var laps = [];\n  };\n\n  var saveDrive = function saveDrive() {\n    var end, restaurant_leave, restaurant_arrival, start, drive, response;\n    return _regeneratorRuntime.async(function saveDrive$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            end = laps.pop();\n            restaurant_leave = laps.pop();\n            restaurant_arrival = laps.pop();\n            start = laps.pop();\n            drive = {\n              \"start\": start,\n              \"restaurant_arrival\": restaurant_arrival,\n              \"restaurant_leave\": restaurant_leave,\n              \"end\": end\n            };\n            console.log(drive);\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/record_drive\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(drive)\n            }));\n\n          case 8:\n            response = _context4.sent;\n            console.log(response);\n            navigation.navigate('SaveDrive');\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var interval = null;\n\n    if (isActive) {\n      interval = setInterval(function () {\n        setRemainingSecs(function (remainingSecs) {\n          return remainingSecs + 1;\n        });\n      }, 1000);\n    } else if (!isActive && remainingSecs !== 0) {\n      clearInterval(interval);\n    }\n\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isActive, remainingSecs]);\n\n  var _useState13 = useState([{\n    Increment: \"Start\",\n    Time: \"--\"\n  }, {\n    Increment: \"Arrived\",\n    Time: \"--\"\n  }, {\n    Increment: \"Departed\",\n    Time: \"--\"\n  }, {\n    Increment: \"End\",\n    Time: \"--\"\n  }]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      splits = _useState14[0],\n      setSplits = _useState14[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.timerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }\n  }, mins + \":\" + secs), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: toggle,\n    style: {\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 11\n    }\n  }, isActive ? 'Pause' : 'Start')), React.createElement(TouchableOpacity, {\n    onPress: takeLap,\n    style: {\n      backgroundColor: '#A9A9A9',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 11\n    }\n  }, index == 1 ? 'Arrived' : index == 2 ? 'Left' : index == 3 ? 'End' : 'Lap'))), React.createElement(TouchableOpacity, {\n    onPress: reset,\n    style: {\n      backgroundColor: 'black',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 9\n    }\n  }, \"Reset\")), React.createElement(TouchableOpacity, {\n    onPress: saveDrive,\n    style: {\n      backgroundColor: 'rgba(255,255,255,.5)',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20,\n      borderColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 9\n    }\n  }, \"Save\")), React.createElement(View, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: splits,\n    style: {\n      width: \"15%\"\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index + \"\";\n    },\n    renderItem: function renderItem(_ref6) {\n      var item = _ref6.item,\n          index = _ref6.index;\n      return React.createElement(View, {\n        style: {\n          backgroundColor: index % 2 == 1 ? 'rgba(255,255,255,.55)' : 'rgba(255,255,255,.75)'\n        },\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 15\n        }\n      }, item.Increment), React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: _this4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 15\n        }\n      }, item.Time));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction SaveDriveScreen(_ref7) {\n  var navigation = _ref7.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }\n  }, \"Drive saved!\"), React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }\n  }, \"Add any comments to your drive?\"), React.createElement(TextInput, {\n    style: styles.commentsBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: navigation.navigate('Main'),\n    style: {\n      backgroundColor: 'gray',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20,\n      borderColor: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\nfunction StatisticsScreen(_ref8) {\n  var navigation = _ref8.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }\n  }, \"Statistics\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  buttonWhiteText: {\n    color: 'white',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  buttonBasic: {\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 15,\n    borderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  buttonLogout: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 25,\n    borderColor: 'white',\n    borderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  buttonSpecial: {\n    backgroundColor: 'white',\n    color: 'white',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 15,\n    borderColor: 'black',\n    borderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  buttonSmall: {\n    fontSize: 17,\n    marginHorizontal: 5,\n    marginVertical: 10,\n    paddingHorizontal: 5,\n    borderRadius: 2\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 40,\n    width: 200,\n    marginTop: 10,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4\n  },\n  buttonText: {\n    fontSize: 30,\n    color: 'black'\n  },\n  buttonTextReset: {\n    fontSize: 30,\n    color: '#808080'\n  },\n  timerText: {\n    fontSize: 70,\n    color: 'white'\n  },\n  commentsBox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 100,\n    width: 200,\n    marginTop: 10,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/App.js"],"names":["useForm","Controller","StatusBar","React","useEffect","useState","Component","NavigationContainer","ThemeProvider","CardStyleInterpolators","createStackNavigator","RecommendForm","ReactDOM","State","App","LoginScreen","SignupScreen","MainScreen","headerLeft","headerBackTitle","RecommendScreen","title","RecordDriveScreen","SaveDriveScreen","StatisticsScreen","Stack","navigation","criteriaMode","control","handleSubmit","setError","errors","usernameInputRef","useRef","passwordInputRef","onSubmit","data","json","JSON","parse","stringify","username","password","user","console","log","fetch","method","headers","body","then","response","message","navigate","alert","signup","onError","e","styles","container","label","required","props","textbox","value","onChange","buttonSpecial","button","buttonWhiteText","emailInputRef","email","newUser","buttonBasic","buttonLogout","restaurantInputRef","distanceInputRef","payInputRef","newPrediction","setNewPrediction","newMessage","setNewMessage","restaurant","distance","pay","drive","prediction","Math","round","refresh","text","backgroundColor","marginHorizontal","marginVertical","paddingHorizontal","borderWidth","borderRadius","fontSize","color","formatNumber","number","slice","getRemaining","time","mins","floor","secs","remainingSecs","setRemainingSecs","isActive","setIsActive","laps","setLaps","index","setIndex","toggle","takeLap","push","Date","now","splits","map","split","properties","Increment","toString","reset","saveDrive","end","pop","restaurant_leave","restaurant_arrival","start","interval","setInterval","clearInterval","Time","setSplits","timerText","flexDirection","borderColor","width","item","textAlign","commentsBox","StyleSheet","create","flex","alignItems","justifyContent","padding","buttonSmall","height","marginTop","marginBottom","margin","alignContent","fontWeight","input","buttonText","buttonTextReset"],"mappings":";;;;AAAA,OAAO,8BAAP;AACA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;;;;;;;;;AAEA,SAASC,mBAAT,EAA8BC,aAA9B,QAAmD,0BAAnD;AACA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,yBAA7D;AAEA,SAASC,aAAT;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AAEA,eAAe,SAASC,GAAT,GAAgB;AAC7B,SACD,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAEC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEC,UAArC;AAEE,IAAA,OAAO,EAAE;AAACC,MAAAA,UAAU,EAAE,IAAb;AAAmBC,MAAAA,eAAe,EAAE;AAApC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAME,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,iBAAnB;AAAqC,IAAA,SAAS,EAAEC,eAAhD;AACE,IAAA,OAAO,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAQE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEC,iBAA5C;AACE,IAAA,OAAO,EAAE;AAACD,MAAAA,KAAK,EAAE;AAAR,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAUE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAEE,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AAAgC,IAAA,SAAS,EAAEC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADL,CADC;AAiBD;AAED,IAAMC,KAAK,GAAGf,oBAAoB,EAAlC;;AAGA,SAASK,WAAT,OAAsC;AAAA;;AAAA,MAAdW,UAAc,QAAdA,UAAc;;AAAA,iBAGc1B,OAAO,CAAE;AAAE2B,IAAAA,YAAY,EAAE;AAAhB,GAAF,CAHrB;AAAA,MAG7BC,OAH6B,YAG7BA,OAH6B;AAAA,MAGpBC,YAHoB,YAGpBA,YAHoB;AAAA,MAGNC,QAHM,YAGNA,QAHM;AAAA,MAGIC,MAHJ,YAGIA,MAHJ;;AAIpC,MAAMC,gBAAgB,GAAG7B,KAAK,CAAC8B,MAAN,EAAzB;AACA,MAAMC,gBAAgB,GAAG/B,KAAK,CAAC8B,MAAN,EAAzB;;AAEA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,IAFS,GAEFC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAFE;AAGTK,YAAAA,QAHS,GAGEJ,IAAI,CAAC,UAAD,CAHN;AAITK,YAAAA,QAJS,GAIEL,IAAI,CAAC,UAAD,CAJN;AAKTM,YAAAA,IALS,GAKF;AAACF,cAAAA,QAAQ,EAARA,QAAD;AAAWC,cAAAA,QAAQ,EAARA;AAAX,aALE;AAMfE,YAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACE,SAAL,CAAeG,IAAf,CAAZ;AANe;AAAA,6CAOQG,KAAK,CAAC,6BAAD,EAAgC;AAC1DC,cAAAA,MAAM,EAAE,MADkD;AAE1DC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT;AAEP,2BAAU;AAFH,eAFiD;AAM1DC,cAAAA,IAAI,EAAEX,IAAI,CAACE,SAAL,CAAeG,IAAf;AANoD,aAAhC,CAAL,CAOpBO,IAPoB,CAOf,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACd,IAAT,EAAd;AAAA,aAPe,EAQtBa,IARsB,CAQjB,UAAAd,IAAI,EAAI;AACV,qBAAOA,IAAP;AACH,aAVsB,CAPR;;AAAA;AAOTe,YAAAA,QAPS;AAkBfP,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACC,OAArB;;AACA,gBAAID,QAAQ,CAACC,OAAT,IAAoB,kBAAxB,EAA4C;AAC1C1B,cAAAA,UAAU,CAAC2B,QAAX,CAAoB,MAApB;AACD,aAFD,MAEO;AAELC,cAAAA,KAAK,iBAAL;AACD;;AACDV,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;AAzBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AA4BA,MAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB7B,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,QAApB;AACD,GAFD;;AAIA,MAAMG,OAAO,GAAG,SAAVA,OAAU,CAACzB,MAAD,EAAS0B,CAAT;AAAA,WAAeb,OAAO,CAACC,GAAR,CAAYd,MAAZ,EAAoB0B,CAApB,CAAf;AAAA,GAAhB;;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACrC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqC,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AAGE,QAAA,cAAc,EAAE,KAHlB;AAIE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAJhB;AAKE,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SAPH;AAQE,QAAA,GAAG,EAAEhC,gBARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAuBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AACE,QAAA,eAAe,EAAE,IADnB;AAEE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAFhB;AAGE,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SALH;AAME,QAAA,GAAG,EAAE9B,gBANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAvBF,EA0CE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAEE,IAAA,OAAO,EAAEL,YAAY,CAACM,QAAD,EAAWqB,OAAX,CAFvB;AAIE,IAAA,KAAK,EAAEE,MAAM,CAACQ,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CA1CF,EAmDE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEL,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACU,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CAFF,CAnDF,CADF;AA4DD;;AAGD,SAASpD,YAAT,QAAuC;AAAA;;AAAA,MAAdU,UAAc,SAAdA,UAAc;;AAAA,kBAGa1B,OAAO,CAAE;AAAE2B,IAAAA,YAAY,EAAE;AAAhB,GAAF,CAHpB;AAAA,MAG9BC,OAH8B,aAG9BA,OAH8B;AAAA,MAGrBC,YAHqB,aAGrBA,YAHqB;AAAA,MAGPC,QAHO,aAGPA,QAHO;AAAA,MAGGC,MAHH,aAGGA,MAHH;;AAIrC,MAAMC,gBAAgB,GAAG7B,KAAK,CAAC8B,MAAN,EAAzB;AACA,MAAMC,gBAAgB,GAAG/B,KAAK,CAAC8B,MAAN,EAAzB;AACA,MAAMoC,aAAa,GAAGlE,KAAK,CAAC8B,MAAN,EAAtB;;AAEA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,IAFS,GAEFC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAFE;AAGTK,YAAAA,QAHS,GAGEJ,IAAI,CAAC,UAAD,CAHN;AAITK,YAAAA,QAJS,GAIEL,IAAI,CAAC,UAAD,CAJN;AAKTiC,YAAAA,KALS,GAKDjC,IAAI,CAAC,OAAD,CALH;AAMTkC,YAAAA,OANS,GAMC;AAAC9B,cAAAA,QAAQ,EAARA,QAAD;AAAWC,cAAAA,QAAQ,EAARA,QAAX;AAAqB4B,cAAAA,KAAK,EAALA;AAArB,aAND;AAOf1B,YAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACE,SAAL,CAAe+B,OAAf,CAAZ;AAPe;AAAA,6CAQQzB,KAAK,CAAC,8BAAD,EAAiC;AAC7DC,cAAAA,MAAM,EAAE,MADqD;AAE7DC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFoD;AAK7DC,cAAAA,IAAI,EAAEX,IAAI,CAACE,SAAL,CAAe+B,OAAf;AALuD,aAAjC,CAAL,CAMtBrB,IANsB,CAMjB,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACd,IAAT,EAAd;AAAA,aANiB,EAOxBa,IAPwB,CAOnB,UAAAd,IAAI,EAAI;AACV,qBAAOA,IAAP;AACH,aATwB,CARR;;AAAA;AAQTe,YAAAA,QARS;;AAkBjB,gBAAIA,QAAQ,CAACC,OAAT,IAAoB,cAAxB,EAAwC;AACtC1B,cAAAA,UAAU,CAAC2B,QAAX,CAAoB,OAApB;AACAC,cAAAA,KAAK,mCAAL;AAED,aAJD,MAIO;AACLA,cAAAA,KAAK,wCAAL;AACD;;AACDV,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;;AAzBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AA6BF,MAAMK,OAAO,GAAG,SAAVA,OAAU,CAACzB,MAAD,EAAS0B,CAAT;AAAA,WAAeb,OAAO,CAACC,GAAR,CAAYd,MAAZ,EAAoB0B,CAApB,CAAf;AAAA,GAAhB;;AAEE,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACrC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqC,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AAGE,QAAA,cAAc,EAAE,KAHlB;AAIE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAJhB;AAKE,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SAPH;AAQE,QAAA,GAAG,EAAEhC,gBARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAwBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AACE,QAAA,eAAe,EAAE,IADnB;AAEE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAFhB;AAGE,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SALH;AAME,QAAA,GAAG,EAAE9B,gBANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAxBF,EA2CE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AAGE,QAAA,cAAc,EAAE,KAHlB;AAIE,QAAA,eAAe,EAAE,KAJnB;AAKE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OALhB;AAME,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SARH;AASE,QAAA,GAAG,EAAEK,aATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA3CF,EAiEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAEE,IAAA,OAAO,EAAExC,YAAY,CAACM,QAAD,EAAWqB,OAAX,CAFvB;AAIE,IAAA,KAAK,EAAEE,MAAM,CAACQ,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CADF,CAjEF,CADF;AA6ED;;AAGD,SAASlD,UAAT,QAAqC;AAAA,MAAdS,UAAc,SAAdA,UAAc;AACnC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACrC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMK,UAAU,CAAC2B,QAAX,CAAoB,iBAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAEK,MAAM,CAACc,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,CAJF,EAUE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMzC,UAAU,CAAC2B,QAAX,CAAoB,aAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAEK,MAAM,CAACc,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHF,CAVF,EAgBE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMzC,UAAU,CAAC2B,QAAX,CAAoB,YAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAEK,MAAM,CAACc,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,CAhBF,EAsBE,oBAAC,gBAAD;AAEE,IAAA,KAAK,EAAET,MAAM,CAACc,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,CAtBF,EA4BE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMzC,UAAU,CAAC2B,QAAX,CAAoB,OAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAEK,MAAM,CAACe,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CA5BF,CADF;AAoCD;;AAGD,SAAS/C,eAAT,QAAyC;AAAA;;AAAA,MAAdM,UAAc,SAAdA,UAAc;;AAAA,kBACG1B,OAAO,EADV;AAAA,MAC/B4B,OAD+B,aAC/BA,OAD+B;AAAA,MACtBC,YADsB,aACtBA,YADsB;AAAA,MACRE,MADQ,aACRA,MADQ;;AAEvC,MAAM2C,kBAAkB,GAAGvE,KAAK,CAAC8B,MAAN,EAA3B;AACA,MAAM0C,gBAAgB,GAAGxE,KAAK,CAAC8B,MAAN,EAAzB;AACA,MAAM2C,WAAW,GAAGzE,KAAK,CAAC8B,MAAN,EAApB;;AAJuC,kBAOG5B,QAAQ,MAPX;AAAA;AAAA,MAOhCwE,aAPgC;AAAA,MAOjBC,gBAPiB;;AAAA,mBAQHzE,QAAQ,IARL;AAAA;AAAA,MAQhC0E,UARgC;AAAA,MAQpBC,aARoB;;AAUvC,MAAM7C,QAAQ,GAAG,SAAXA,QAAW,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,IAFS,GAEFC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAFE;AAGT6C,YAAAA,UAHS,GAGI5C,IAAI,CAAC,YAAD,CAHR;AAIT6C,YAAAA,QAJS,GAIE7C,IAAI,CAAC,UAAD,CAJN;AAKT8C,YAAAA,GALS,GAKH9C,IAAI,CAAC,KAAD,CALD;AAMT+C,YAAAA,KANS,GAMD;AAACH,cAAAA,UAAU,EAAVA,UAAD;AAAaC,cAAAA,QAAQ,EAARA,QAAb;AAAuBC,cAAAA,GAAG,EAAHA;AAAvB,aANC;AAOfvC,YAAAA,OAAO,CAACC,GAAR,CAAYuC,KAAZ;AAPe;AAAA,6CAQQtC,KAAK,CAAC,0CAAD,EAA6C;AACvEC,cAAAA,MAAM,EAAE,MAD+D;AAEvEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAF8D;AAKvEC,cAAAA,IAAI,EAAEX,IAAI,CAACE,SAAL,CAAe4C,KAAf;AALiE,aAA7C,CAAL,CAMpBlC,IANoB,CAMf,UAACC,QAAD;AAAA,qBAAcA,QAAQ,CAACd,IAAT,EAAd;AAAA,aANe,EAOtBa,IAPsB,CAOjB,UAAAd,IAAI,EAAI;AACV,qBAAOA,IAAP;AACH,aATsB,CARR;;AAAA;AAQTe,YAAAA,QARS;AAmBTkC,YAAAA,UAnBS,GAmBIlC,QAAQ,CAACC,OAAT,CAAiBiC,UAnBrB;AAoBTjC,YAAAA,OApBS,GAoBCD,QAAQ,CAACC,OAAT,CAAiBA,OApBlB;AAqBfR,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAcO,OAAd,GAAuB,gBAAvB,GAA0CiC,UAAtD;AAGAP,YAAAA,gBAAgB,CAACQ,IAAI,CAACC,KAAL,CAAWF,UAAU,GAAG,GAAxB,IAA+B,GAAhC,CAAhB;AACAL,YAAAA,aAAa,CAAC5B,OAAD,CAAb;;AAzBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AA4BA,WAASoC,OAAT,GAAmB;AACjB9D,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,MAApB;AACA3B,IAAAA,UAAU,CAAC2B,QAAX,CAAoB,iBAApB;AACD;;AAED,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACrC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEqC,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AAEE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAFhB;AAGE,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SALH;AAME,QAAA,GAAG,EAAEU,kBANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,EAwBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AAEE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAFhB;AAGE,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SALH;AAME,QAAA,GAAG,EAAEW,gBANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAxBF,EA4CE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,OAAO,EAAEhC,OAFX;AAGE,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAHV;AAIE,IAAA,YAAY,EAAC,EAJf;AAKE,IAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,aACN,oBAAC,SAAD,eAAeA,KAAf;AAEE,QAAA,KAAK,EAAEJ,MAAM,CAACK,OAFhB;AAGE,QAAA,YAAY,EAAE,sBAACC,KAAD,EAAW;AACvBF,UAAAA,KAAK,CAACG,QAAN,CAAeD,KAAf;AACD,SALH;AAME,QAAA,GAAG,EAAEY,WANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADM;AAAA,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA5CF,EA+DE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAEE,IAAA,OAAO,EAAE/C,YAAY,CAACM,QAAD,CAFvB;AAME,IAAA,KAAK,EAAEuB,MAAM,CAACQ,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGR,MAAM,CAACS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPA,CADF,CA/DF,EA2EE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAAC+B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA2CZ,aAA3C,WA3EF,EA4EE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsCmB,UAAtC,CA5EF,EA6EE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA7EF,EA+EE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMlC,UAAU,CAAC2B,QAAX,CAAoB,aAApB,CAAN;AAAA,KAA3B;AACI,IAAA,KAAK,EAAE;AAACqC,MAAAA,eAAe,EAAE,OAAlB;AACPC,MAAAA,gBAAgB,EAAE,CADX;AACcC,MAAAA,cAAc,EAAE,EAD9B;AACkCC,MAAAA,iBAAiB,EAAE,CADrD;AAEPC,MAAAA,WAAW,EAAE,CAFN;AAESC,MAAAA,YAAY,EAAE;AAFvB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE,OAAtB;AAA+BN,MAAAA,gBAAgB,EAAE,EAAjD;AACbC,MAAAA,cAAc,EAAE,EADH;AACOC,MAAAA,iBAAiB,EAAE;AAD1B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADA,EASA,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE;AAACH,MAAAA,eAAe,EAAE,MAAlB;AACPC,MAAAA,gBAAgB,EAAE,CADX;AACcC,MAAAA,cAAc,EAAE,EAD9B;AACkCC,MAAAA,iBAAiB,EAAE,CADrD;AAEPC,MAAAA,WAAW,EAAE,CAFN;AAESC,MAAAA,YAAY,EAAE;AAFvB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE,OAAtB;AAA+BN,MAAAA,gBAAgB,EAAE,EAAjD;AACbC,MAAAA,cAAc,EAAE,EADH;AACOC,MAAAA,iBAAiB,EAAE;AAD1B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CATA,CA/EF,CAFF;AAsGD;;AAID,SAASvE,iBAAT,QAA4C;AAAA;;AAAA,MAAdI,UAAc,SAAdA,UAAc;;AAG1C,MAAMwE,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM;AAAA,WAAI,OAAIA,MAAJ,EAAaC,KAAb,CAAmB,CAAC,CAApB,CAAJ;AAAA,GAA3B;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,QAAMC,IAAI,GAAGjB,IAAI,CAACkB,KAAL,CAAWF,IAAI,GAAG,EAAlB,CAAb;AACA,QAAMG,IAAI,GAAGH,IAAI,GAAGC,IAAI,GAAG,EAA3B;AACA,WAAO;AAAEA,MAAAA,IAAI,EAAEL,YAAY,CAACK,IAAD,CAApB;AAA4BE,MAAAA,IAAI,EAAEP,YAAY,CAACO,IAAD;AAA9C,KAAP;AACD,GAJD;;AAN0C,mBAYApG,QAAQ,CAAC,CAAD,CAZR;AAAA;AAAA,MAYnCqG,aAZmC;AAAA,MAYpBC,gBAZoB;;AAAA,mBAcVtG,QAAQ,CAAC,KAAD,CAdE;AAAA;AAAA,MAcnCuG,QAdmC;AAAA,MAczBC,WAdyB;;AAAA,sBAgBnBR,YAAY,CAACK,aAAD,CAhBO;AAAA,MAgBlCH,IAhBkC,iBAgBlCA,IAhBkC;AAAA,MAgB5BE,IAhB4B,iBAgB5BA,IAhB4B;;AAAA,mBAkBlBpG,QAAQ,CAAC,EAAD,CAlBU;AAAA;AAAA,MAkBnCyG,IAlBmC;AAAA,MAkB7BC,OAlB6B;;AAAA,oBAmBlB1G,QAAQ,CAAC,CAAD,CAnBU;AAAA;AAAA,MAmBrC2G,KAnBqC;AAAA,MAmB9BC,QAnB8B;;AAsB1C,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBL,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAO,IAAAA,OAAO;AACR,GAHD;;AAKA,MAAMA,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpBL,IAAAA,IAAI,CAACM,IAAL,CAAUC,IAAI,CAACA,IAAI,CAACC,GAAL,EAAD,CAAd;AAEA,QAAMC,MAAM,GAAGA,MAAM,CAACC,GAAP,CAAW,UAAAC,KAAK,EAAI;AACjC,UAAIC,UAAU,GAAG;AACf,qBAAaD,KAAK,CAACE,SADJ;AAEf,gBAAQN,IAAI,CAACA,IAAI,CAACC,GAAL,EAAD,CAAJ,CAAiBM,QAAjB;AAFO,OAAjB;AAKD,KANc,CAAf;AAOD,GAXD;;AAaA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBlB,IAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,QAAMC,IAAI,GAAG,EAAb;AACD,GAJD;;AAMA,MAAMgB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,GACJjB,IAAI,CAACkB,GAAL,EADI;AAEVC,YAAAA,gBAFU,GAESnB,IAAI,CAACkB,GAAL,EAFT;AAGVE,YAAAA,kBAHU,GAGWpB,IAAI,CAACkB,GAAL,EAHX;AAIVG,YAAAA,KAJU,GAIFrB,IAAI,CAACkB,GAAL,EAJE;AAMV5C,YAAAA,KANU,GAMF;AAAC,uBAAS+C,KAAV;AAAiB,oCAAsBD,kBAAvC;AAA2D,kCAAoBD,gBAA/E;AAAiG,qBAAOF;AAAxG,aANE;AAOhBnF,YAAAA,OAAO,CAACC,GAAR,CAAYuC,KAAZ;AAPgB;AAAA,6CAQOtC,KAAK,CAAC,oCAAD,EAAuC;AACjEC,cAAAA,MAAM,EAAE,MADyD;AAEjEC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFwD;AAKjEC,cAAAA,IAAI,EAAEX,IAAI,CAACE,SAAL,CAAe4C,KAAf;AAL2D,aAAvC,CARZ;;AAAA;AAQVjC,YAAAA,QARU;AAehBP,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAzB,YAAAA,UAAU,CAAC2B,QAAX,CAAoB,WAApB;;AAhBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAmBAjD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgI,QAAQ,GAAG,IAAf;;AACA,QAAIxB,QAAJ,EAAc;AACZwB,MAAAA,QAAQ,GAAGC,WAAW,CAAC,YAAM;AAC3B1B,QAAAA,gBAAgB,CAAC,UAAAD,aAAa;AAAA,iBAAIA,aAAa,GAAG,CAApB;AAAA,SAAd,CAAhB;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACE,QAAD,IAAaF,aAAa,KAAK,CAAnC,EAAsC;AAC3C4B,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,WAAO;AAAA,aAAME,aAAa,CAACF,QAAD,CAAnB;AAAA,KAAP;AACD,GAVQ,EAUN,CAACxB,QAAD,EAAWF,aAAX,CAVM,CAAT;;AAjE0C,oBA8EZrG,QAAQ,CAAC,CACrC;AACEsH,IAAAA,SAAS,EAAE,OADb;AAEEY,IAAAA,IAAI,EAAE;AAFR,GADqC,EAKrC;AACEZ,IAAAA,SAAS,EAAE,SADb;AAEEY,IAAAA,IAAI,EAAE;AAFR,GALqC,EASrC;AACEZ,IAAAA,SAAS,EAAE,UADb;AAEEY,IAAAA,IAAI,EAAE;AAFR,GATqC,EAarC;AACEZ,IAAAA,SAAS,EAAE,KADb;AAEEY,IAAAA,IAAI,EAAE;AAFR,GAbqC,CAAD,CA9EI;AAAA;AAAA,MA8ElChB,MA9EkC;AAAA,MA8E1BiB,SA9E0B;;AAiG1C,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9E,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAAC+E,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmClC,IAAnC,SAA2CE,IAA3C,CAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAG;AAACiC,MAAAA,aAAa,EAAE;AAAhB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAExB,MAA3B;AAAmC,IAAA,KAAK,EAAG;AAACxB,MAAAA,eAAe,EAAE,OAAlB;AAA2BC,MAAAA,gBAAgB,EAAE,CAA7C;AAAgDC,MAAAA,cAAc,EAAE,EAAhE;AAAoEC,MAAAA,iBAAiB,EAAE,CAAvF;AAA0FC,MAAAA,WAAW,EAAE,CAAvG;AAA0GC,MAAAA,YAAY,EAAE;AAAxH,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeL,MAAAA,gBAAgB,EAAE,EAAjC;AAAqCC,MAAAA,cAAc,EAAE,EAArD;AAAyDC,MAAAA,iBAAiB,EAAE,CAA5E;AAA+EI,MAAAA,KAAK,EAAE;AAAtF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIW,QAAQ,GAAG,OAAH,GAAa,OADzB,CADF,CADF,EAME,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEO,OAA3B;AAAoC,IAAA,KAAK,EAAG;AAACzB,MAAAA,eAAe,EAAE,SAAlB;AAA6BC,MAAAA,gBAAgB,EAAE,CAA/C;AAAkDC,MAAAA,cAAc,EAAE,EAAlE;AAAsEC,MAAAA,iBAAiB,EAAE,CAAzF;AAA4FC,MAAAA,WAAW,EAAE,CAAzG;AAA4GC,MAAAA,YAAY,EAAE;AAA1H,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeL,MAAAA,gBAAgB,EAAE,EAAjC;AAAqCC,MAAAA,cAAc,EAAE,EAArD;AAAyDC,MAAAA,iBAAiB,EAAE,CAA5E;AAA+EI,MAAAA,KAAK,EAAE;AAAtF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKe,KAAK,IAAI,CAAV,GAAe,SAAf,GAA4BA,KAAK,IAAI,CAAV,GAAe,MAAf,GAAyBA,KAAK,IAAI,CAAV,GAAe,KAAf,GAAuB,KAD9E,CADF,CANF,CAHF,EAeE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEa,KAA3B;AAAkC,IAAA,KAAK,EAAE;AAACnC,MAAAA,eAAe,EAAE,OAAlB;AAA2BC,MAAAA,gBAAgB,EAAE,CAA7C;AAAgDC,MAAAA,cAAc,EAAE,EAAhE;AAAoEC,MAAAA,iBAAiB,EAAE,CAAvF;AAA0FC,MAAAA,WAAW,EAAE,CAAvG;AAA0GC,MAAAA,YAAY,EAAE;AAAxH,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,EAAX;AAAeL,MAAAA,gBAAgB,EAAE,EAAjC;AAAqCC,MAAAA,cAAc,EAAE,EAArD;AAAyDC,MAAAA,iBAAiB,EAAE,CAA5E;AAA+EI,MAAAA,KAAK,EAAE;AAAtF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAfF,EAkBE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE6B,SAA3B;AAAsC,IAAA,KAAK,EAAE;AAACpC,MAAAA,eAAe,EAAE,sBAAlB;AAA0CC,MAAAA,gBAAgB,EAAE,CAA5D;AAA+DC,MAAAA,cAAc,EAAE,EAA/E;AAAmFC,MAAAA,iBAAiB,EAAE,CAAtG;AAAyGC,MAAAA,WAAW,EAAE,CAAtH;AAAyHC,MAAAA,YAAY,EAAE,EAAvI;AAA2I4C,MAAAA,WAAW,EAAE;AAAxJ,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC3C,MAAAA,QAAQ,EAAE,EAAX;AAAeL,MAAAA,gBAAgB,EAAE,EAAjC;AAAqCC,MAAAA,cAAc,EAAE,EAArD;AAAyDC,MAAAA,iBAAiB,EAAE,CAA5E;AAA+EI,MAAAA,KAAK,EAAE;AAAtF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAlBF,EAqBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEsB,MADR;AAEE,IAAA,KAAK,EAAE;AAACqB,MAAAA,KAAK,EAAC;AAAP,KAFT;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAO7B,KAAP;AAAA,aAAiBA,KAAK,GAAC,EAAvB;AAAA,KAHhB;AAME,IAAA,UAAU,EAAE,2BAAkB;AAAA,UAAhB6B,IAAgB,SAAhBA,IAAgB;AAAA,UAAV7B,KAAU,SAAVA,KAAU;AAC5B,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACtB,UAAAA,eAAe,EAAEsB,KAAK,GAAG,CAAR,IAAa,CAAb,GAAiB,uBAAjB,GAA2C;AAA7D,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC8B,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCD,IAAI,CAAClB,SAA1C,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACmB,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCD,IAAI,CAACN,IAA1C,CAFF,CADF;AAMD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CArBF,CADF;AAyCD;;AAED,SAAShH,eAAT,QAA0C;AAAA,MAAdG,UAAc,SAAdA,UAAc;AAQxC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACrC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC2E,MAAAA,QAAQ,EAAE,EAAX;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHF,EAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEvC,MAAM,CAACqF,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAErH,UAAU,CAAC2B,QAAX,CAAoB,MAApB,CAA3B;AAAwD,IAAA,KAAK,EAAE;AAACqC,MAAAA,eAAe,EAAE,MAAlB;AAA0BC,MAAAA,gBAAgB,EAAE,CAA5C;AAA+CC,MAAAA,cAAc,EAAE,EAA/D;AAAmEC,MAAAA,iBAAiB,EAAE,CAAtF;AAAyFC,MAAAA,WAAW,EAAE,CAAtG;AAAyGC,MAAAA,YAAY,EAAE,EAAvH;AAA2H4C,MAAAA,WAAW,EAAE;AAAxI,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC3C,MAAAA,QAAQ,EAAE,EAAX;AAAeL,MAAAA,gBAAgB,EAAE,EAAjC;AAAqCC,MAAAA,cAAc,EAAE,EAArD;AAAyDC,MAAAA,iBAAiB,EAAE,CAA5E;AAA+EI,MAAAA,KAAK,EAAE;AAAtF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CALF,CADF;AAWD;;AAGD,SAASzE,gBAAT,QAA2C;AAAA,MAAdE,UAAc,SAAdA,UAAc;AACzC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACrC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAMD;;AAED,IAAMqC,MAAM,GAAGsF,UAAU,CAACC,MAAX,CAAkB;AAC/BtF,EAAAA,SAAS,EAAE;AACTuF,IAAAA,IAAI,EAAE,CADG;AAETxD,IAAAA,eAAe,EAAE,SAFR;AAGTyD,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/B/H,EAAAA,KAAK,EAAE;AACL4E,IAAAA,KAAK,EAAE,OADF;AAELD,IAAAA,QAAQ,EAAE,EAFL;AAILL,IAAAA,gBAAgB,EAAE,EAJb;AAKLC,IAAAA,cAAc,EAAE,EALX;AAMLyD,IAAAA,OAAO,EAAE,CANJ;AAOLxD,IAAAA,iBAAiB,EAAE,EAPd;AAQLE,IAAAA,YAAY,EAAE;AART,GAPwB;AAiB/B5B,EAAAA,MAAM,EAAE;AACN8B,IAAAA,KAAK,EAAE,OADD;AAEND,IAAAA,QAAQ,EAAE,EAFJ;AAGNL,IAAAA,gBAAgB,EAAE,EAHZ;AAINC,IAAAA,cAAc,EAAE,EAJV;AAKNG,IAAAA,YAAY,EAAE;AALR,GAjBuB;AAwB/B3B,EAAAA,eAAe,EAAE;AACf6B,IAAAA,KAAK,EAAE,OADQ;AAEfD,IAAAA,QAAQ,EAAE,EAFK;AAGfL,IAAAA,gBAAgB,EAAE,EAHH;AAIfC,IAAAA,cAAc,EAAE,EAJD;AAKfG,IAAAA,YAAY,EAAE;AALC,GAxBc;AA+B/BvB,EAAAA,WAAW,EAAE;AACXkB,IAAAA,eAAe,EAAE,OADN;AAEXO,IAAAA,KAAK,EAAE,OAFI;AAGXD,IAAAA,QAAQ,EAAE,EAHC;AAIXL,IAAAA,gBAAgB,EAAE,EAJP;AAKXC,IAAAA,cAAc,EAAE,EALL;AAOZE,IAAAA,WAAW,EAAE,CAPD;AAQXD,IAAAA,iBAAiB,EAAE,CARR;AASXE,IAAAA,YAAY,EAAE;AATH,GA/BkB;AA0C/BtB,EAAAA,YAAY,EAAE;AACZiB,IAAAA,eAAe,EAAE,sBADL;AAEZO,IAAAA,KAAK,EAAE,OAFK;AAGZD,IAAAA,QAAQ,EAAE,EAHE;AAIZL,IAAAA,gBAAgB,EAAE,EAJN;AAKZC,IAAAA,cAAc,EAAE,EALJ;AAMZ+C,IAAAA,WAAW,EAAE,OAND;AAOb7C,IAAAA,WAAW,EAAE,CAPA;AAQZD,IAAAA,iBAAiB,EAAE,CARP;AASZE,IAAAA,YAAY,EAAE;AATF,GA1CiB;AAqD/B7B,EAAAA,aAAa,EAAE;AAIbwB,IAAAA,eAAe,EAAE,OAJJ;AAKbO,IAAAA,KAAK,EAAE,OALM;AAMbD,IAAAA,QAAQ,EAAE,EANG;AAObL,IAAAA,gBAAgB,EAAE,EAPL;AAQbC,IAAAA,cAAc,EAAE,EARH;AASb+C,IAAAA,WAAW,EAAE,OATA;AAUd7C,IAAAA,WAAW,EAAE,CAVC;AAWbD,IAAAA,iBAAiB,EAAE,CAXN;AAYbE,IAAAA,YAAY,EAAE;AAZD,GArDgB;AAmE/BuD,EAAAA,WAAW,EAAE;AACXtD,IAAAA,QAAQ,EAAE,EADC;AAEXL,IAAAA,gBAAgB,EAAE,CAFP;AAGXC,IAAAA,cAAc,EAAE,EAHL;AAMXC,IAAAA,iBAAiB,EAAE,CANR;AAOXE,IAAAA,YAAY,EAAE;AAPH,GAnEkB;AA4E/BhC,EAAAA,OAAO,EAAE;AACP2B,IAAAA,eAAe,EAAE,sBADV;AAER6D,IAAAA,MAAM,EAAE,EAFA;AAGRX,IAAAA,KAAK,EAAE,GAHC;AAIRY,IAAAA,SAAS,EAAE,EAJH;AAKRC,IAAAA,YAAY,EAAE,EALN;AAMR1D,IAAAA,YAAY,EAAE,CANN;AAOR4C,IAAAA,WAAW,EAAE,OAPL;AAQR7C,IAAAA,WAAW,EAAE,CARL;AASRuD,IAAAA,OAAO,EAAE;AATD,GA5EsB;AAuF/B5D,EAAAA,IAAI,EAAE;AACJO,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJyD,IAAAA,MAAM,EAAE,EAHJ;AAIJC,IAAAA,YAAY,EAAE;AAJV,GAvFyB;AA6F/BrD,EAAAA,IAAI,EAAE;AACJsD,IAAAA,UAAU,EAAE,MADR;AAEJ5D,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,KAAK,EAAE,MAHH;AAIJ0D,IAAAA,YAAY,EAAE;AAJV,GA7FyB;AAmG/BE,EAAAA,KAAK,EAAE;AACLnE,IAAAA,eAAe,EAAE,OADZ;AAEL6D,IAAAA,MAAM,EAAE,EAFH;AAGLF,IAAAA,OAAO,EAAE,EAHJ;AAILT,IAAAA,KAAK,EAAE,GAJF;AAKL7C,IAAAA,YAAY,EAAE;AALT,GAnGwB;AA0G/B+D,EAAAA,UAAU,EAAE;AACV9D,IAAAA,QAAQ,EAAE,EADA;AAGVC,IAAAA,KAAK,EAAE;AAHG,GA1GmB;AA+G/B8D,EAAAA,eAAe,EAAE;AACf/D,IAAAA,QAAQ,EAAE,EADK;AAEfC,IAAAA,KAAK,EAAE;AAFQ,GA/Gc;AAmH/BwC,EAAAA,SAAS,EAAE;AACTzC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE;AAFE,GAnHoB;AAuH/B8C,EAAAA,WAAW,EAAE;AACTrD,IAAAA,eAAe,EAAE,sBADR;AAET6D,IAAAA,MAAM,EAAE,GAFC;AAGTX,IAAAA,KAAK,EAAE,GAHE;AAITY,IAAAA,SAAS,EAAE,EAJF;AAKTC,IAAAA,YAAY,EAAE,EALL;AAMT1D,IAAAA,YAAY,EAAE,CANL;AAOT4C,IAAAA,WAAW,EAAE,OAPJ;AAQT7C,IAAAA,WAAW,EAAE,CARJ;AASTuD,IAAAA,OAAO,EAAE;AATA;AAvHkB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Alert, TextInput, TouchableOpacity, FlatList} from 'react-native'\nimport { NavigationContainer, ThemeProvider } from '@react-navigation/native'\nimport { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack'\n\nimport { RecommendForm } from './RecommendForm'\nimport ReactDOM from 'react-dom'\nimport { State } from 'react-native-gesture-handler'\n\nexport default function App () {\n  return (\n\t<NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Signup\" component={SignupScreen} />\n        <Stack.Screen name=\"Main\" component={MainScreen} \n          //Nulling headerLeft removes navigation back to login screen\n          options={{headerLeft: null, headerBackTitle: 'Log out'}}/>\n        <Stack.Screen name=\"Recommendations\" component={RecommendScreen} \n          options={{title: 'Get Recommendation'}}/>\n        <Stack.Screen name=\"RecordDrive\" component={RecordDriveScreen} \n          options={{title: 'Record Drive'}}/>\n        <Stack.Screen name=\"SaveDrive\" component={SaveDriveScreen} />\n        <Stack.Screen name=\"Statistics\" component={StatisticsScreen} />\n      </Stack.Navigator>\n  </NavigationContainer>\n  )\n}\n\nconst Stack = createStackNavigator()\n\n// Login screen\nfunction LoginScreen ({ navigation }) {\n\n  // useForm allows us to validate inputs and build forms\n  const {control, handleSubmit, setError, errors} = useForm( { criteriaMode: 'all' })\n  const usernameInputRef = React.useRef()\n  const passwordInputRef = React.useRef()\n\n  const onSubmit = async (data) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    const json = JSON.parse(JSON.stringify(data))\n    const username = json[\"username\"]\n    const password = json[\"password\"]\n    const user = {username, password}\n    console.log(JSON.stringify(user))\n    const response = await fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"accepts\":\"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then((response) => response.json())\n    .then(data => {\n        return data;\n    });\n    console.log(response.message)\n    if (response.message == \"login successful\") {\n      navigation.navigate('Main');\n    } else {\n      //Display message\n      alert(`Login invalid`)\n    }\n    console.log(response)\n    \n  }\n  const signup = () => {\n    navigation.navigate('Signup');\n  }\n\n  const onError = (errors, e) => console.log(errors, e)\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.title}>Welcome!</Text>\n        <Text style={styles.label}>Username</Text>\n        <Controller \n          name=\"username\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n            //I know the following line sometimes gives a warning.\n              //Please leave it in place, otherwise the forms are hard to work with\n              autoCapitalize={false}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={usernameInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Password</Text>\n        <Controller \n          name=\"password\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              secureTextEntry={true}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={passwordInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <TouchableOpacity \n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit, onError)}\n          // onPress={() => navigation.navigate('Main')}\n          style={styles.buttonSpecial}>\n          <Text style={styles.button}>Log In</Text>    \n        </TouchableOpacity>\n      </View>\n      <View>\n        <Text style={styles.label}> </Text>\n        <TouchableOpacity onPress={signup}>\n          <Text style={styles.buttonWhiteText}>New to Dasher? Create an account</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\n//Signup screen\nfunction SignupScreen ({ navigation }) {\n\n  // useForm allows us to validate inputs and build forms\n  const {control, handleSubmit, setError, errors} = useForm( { criteriaMode: 'all' })\n  const usernameInputRef = React.useRef()\n  const passwordInputRef = React.useRef()\n  const emailInputRef = React.useRef()\n  \n  const onSubmit = async (data) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    const json = JSON.parse(JSON.stringify(data))\n    const username = json[\"username\"]\n    const password = json[\"password\"]\n    const email = json[\"email\"]\n    const newUser = {username, password, email}\n    console.log(JSON.stringify(newUser))\n    const response = await fetch(\"http://localhost:5000/signup\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newUser)\n  }).then((response) => response.json())\n  .then(data => {\n      return data;\n  });\n  if (response.message == \"user created\") {\n    navigation.navigate('Login');\n    alert(`Account created! Please sign in`)\n    //navigation.navigate('Main');\n  } else {\n    alert(`A problem occurred. Please try again`)\n  }\n  console.log(response)\n  \n}\n\nconst onError = (errors, e) => console.log(errors, e)\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Create Account</Text>\n\n      <View>\n        <Text style={styles.label}>Username</Text>\n        <Controller \n          name=\"username\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              //I know the following line sometimes gives a warning.\n              //Please leave it in place, otherwise the forms are hard to work with\n              autoCapitalize={false}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={usernameInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Password</Text>\n        <Controller \n          name=\"password\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              secureTextEntry={true}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={passwordInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Email</Text>\n        <Controller \n          name=\"email\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              //I know the following line sometimes gives a warning.\n              //Please leave it in place, otherwise the forms are hard to work with\n              autoCapitalize={false}\n              secureTextEntry={false}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={emailInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <TouchableOpacity \n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit, onError)}\n          // onPress={() => navigation.navigate('Main')}\n          style={styles.buttonSpecial}>\n          <Text style={styles.button}>Sign up</Text>    \n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\n// Main menu screen\nfunction MainScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Main Menu</Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Recommendations')}\n        style={styles.buttonBasic}>\n        <Text style={styles.button}>Get recommendation</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('RecordDrive')}\n        style={styles.buttonBasic}>\n        <Text style={styles.button}>  Record a new drive  </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Statistics')}\n        style={styles.buttonBasic}>\n        <Text style={styles.button}>      View statistics      </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        // onPress={() => navigation.navigate('Recommendations')}\n        style={styles.buttonBasic}>\n        <Text style={styles.button}>View/edit past drives</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Login')}\n        style={styles.buttonLogout}>\n        <Text style={styles.button}>Log out</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\n//GetRecommendations screen\nfunction RecommendScreen({ navigation }) {\n  const { control, handleSubmit, errors } = useForm();\n  const restaurantInputRef = React.useRef()\n  const distanceInputRef = React.useRef()\n  const payInputRef = React.useRef()\n\n  //Variables to print prediction and message\n  const [newPrediction, setNewPrediction] = useState(`__`);\n  const [newMessage, setNewMessage] = useState(``);\n  \n  const onSubmit = async (data) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    const json = JSON.parse(JSON.stringify(data))\n    const restaurant = json[\"restaurant\"]\n    const distance = json[\"distance\"]\n    const pay = json[\"pay\"]\n    const drive = {restaurant, distance, pay}\n    console.log(drive)\n    const response = await fetch(\"http://localhost:5000/get_recommendation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(drive)\n    }).then((response) => response.json())\n    .then(data => {\n        return data;\n    });\n    \n    const prediction = response.message.prediction\n    const message = response.message.message\n    console.log(\"message: \" + message+ \", prediction: \" + prediction)\n\n    //Set variables for later printing\n    setNewPrediction(Math.round(prediction * 100) / 100)\n    setNewMessage(message)\n  }\n\n  function refresh() {\n    navigation.navigate('Main')\n    navigation.navigate('Recommendations')\n  }\n\n  return (\n\n    <View style={styles.container}>\n      \n      <Text style={styles.title}>Get Recommendation!</Text>\n      \n      <View>\n        <Text style={styles.label}>Restaurant</Text>\n        <Controller \n          name=\"restaurant\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={restaurantInputRef}\n            />\n          }\n        />\n      </View>\n\n      <View>\n        <Text style={styles.label}>Distance</Text>\n        <Controller \n          name=\"distance\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={distanceInputRef}\n            />\n          }\n        />\n      </View>\n\n      <View>\n        <Text style={styles.label}>Pay</Text>\n        <Controller \n          name=\"pay\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={payInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <TouchableOpacity\n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit)}\n\n          //TO DO: OnPress will also enable the accept and reject drive buttons\n\n          style={styles.buttonSpecial}>\n        <Text style={ styles.button}>Get Recommendation</Text>\n      </TouchableOpacity>\n      </View>\n   \n      <Text style={styles.text}>{`Prediction: $${newPrediction}/hour`}</Text>\n      <Text style={styles.label}>{`Notes: ${newMessage}`}</Text>\n      <Text style={styles.label}>  </Text>\n\n      <View>\n      <TouchableOpacity onPress={() => navigation.navigate('RecordDrive')}\n          style={{backgroundColor: 'white',\n          marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5,\n          borderWidth: 1, borderRadius: 20}}>\n          <Text style={{fontSize: 17, color: 'black', marginHorizontal: 10, \n          marginVertical: 10, paddingHorizontal: 5}}>Accept Drive</Text>    \n      </TouchableOpacity>\n\n      <TouchableOpacity //onPress={() => refresh()}\n          style={{backgroundColor: 'gray',\n          marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5,\n          borderWidth: 1, borderRadius: 20}}>\n          <Text style={{fontSize: 17, color: 'black', marginHorizontal: 10, \n          marginVertical: 10, paddingHorizontal: 5}} >Reject Drive</Text>\n      </TouchableOpacity>\n      </View>\n  \n    </View>\n    \n  )\n}\n\n\n// RecordDrive screen\nfunction RecordDriveScreen ({ navigation }) {\n  // For formatting the time, ensuring the zeros in front of the time\n  // Slice -2 means selecting from the end of the array\n  const formatNumber = number => `0${number}`.slice(-2);\n\n    // For getting minutes and seconds from a time passed\n  const getRemaining = (time) => {\n    const mins = Math.floor(time / 60);\n    const secs = time - mins * 60;\n    return { mins: formatNumber(mins), secs: formatNumber(secs) };\n  }\n  // Storing a variable remainingSecs\n  const [remainingSecs, setRemainingSecs] = useState(0);\n  // Storing a variable isActive\n  const [isActive, setIsActive] = useState(false);\n  // Calling getRemaining to get time passed\n  const { mins, secs } = getRemaining(remainingSecs);\n\n  const [laps, setLaps] = useState([]);\n  let [index, setIndex] = useState(0);\n\n  // Called when pressing start/pause button\n  const toggle = () => {\n    setIsActive(!isActive);\n    takeLap();\n  }\n\n  const takeLap = () => {\n    // setting start position\n    laps.push(Date(Date.now()));\n    // update table!\n    const splits = splits.map(split => {\n      let properties = {\n        \"Increment\": split.Increment,\n        \"Time\": Date(Date.now()).toString(),\n      }\n\n    })\n  }\n  // Resets the time back to initial state\n  const reset = () => {\n    setRemainingSecs(0);\n    setIsActive(false);\n    const laps = [];\n  }\n\n  const saveDrive = async () => {\n    const end = laps.pop();\n    const restaurant_leave = laps.pop();\n    const restaurant_arrival = laps.pop();\n    const start = laps.pop();\n    \n    const drive = {\"start\": start, \"restaurant_arrival\": restaurant_arrival, \"restaurant_leave\": restaurant_leave, \"end\": end}\n    console.log(drive)\n    const response = await fetch(\"http://localhost:5000/record_drive\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(drive)\n    })\n    console.log(response);\n    navigation.navigate('SaveDrive');\n  }\n  \n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setRemainingSecs(remainingSecs => remainingSecs + 1);\n      }, 1000);\n    } else if (!isActive && remainingSecs !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, remainingSecs]);\n\n  // array of objects\n  const [ splits, setSplits ] = useState([\n    {\n      Increment: \"Start\",\n      Time: \"--\",\n    },\n    {\n      Increment: \"Arrived\",\n      Time: \"--\",\n    },\n    {\n      Increment: \"Departed\",\n      Time: \"--\",\n    },\n    {\n      Increment: \"End\",\n      Time: \"--\",\n    }\n  ])\n\n  return (\n    <View style={styles.container}>\n      <StatusBar barStyle=\"light-content\" />\n      <Text style={styles.timerText}>{`${mins}:${secs}`}</Text>\n      <View style= {{flexDirection: 'row'}} >\n        <TouchableOpacity onPress={toggle} style={ {backgroundColor: 'white', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20}}>\n          <Text style={{fontSize: 15, marginHorizontal: 10, marginVertical: 10, paddingHorizontal: 5, color: 'black'}}>\n            { isActive ? 'Pause' : 'Start' }\n            </Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={takeLap} style={ {backgroundColor: '#A9A9A9', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20}}>\n          <Text style={{fontSize: 15, marginHorizontal: 10, marginVertical: 10, paddingHorizontal: 5, color: 'black'}}>\n            { (index == 1) ? 'Arrived' : (index == 2) ? 'Left' : (index == 3) ? 'End' : 'Lap'}\n            </Text>\n        </TouchableOpacity>\n      </View>\n      <TouchableOpacity onPress={reset} style={{backgroundColor: 'black', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20}}>\n        <Text style={{fontSize: 15, marginHorizontal: 10, marginVertical: 10, paddingHorizontal: 5, color: 'white'}}>Reset</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={saveDrive} style={{backgroundColor: 'rgba(255,255,255,.5)', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20, borderColor: 'white'}}>\n        <Text style={{fontSize: 15, marginHorizontal: 10, marginVertical: 10, paddingHorizontal: 5, color: 'black'}}>Save</Text>\n      </TouchableOpacity> \n      <View style={{}}>\n      <FlatList \n        data={splits}\n        style={{width:\"15%\"}}\n        keyExtractor={(item, index) => index+\"\"}\n        // ListHeaderComponent={tableHeader}\n        // stickyHeaderIndices={[0]}\n        renderItem={({item, index})=> {\n          return (\n            <View style={{backgroundColor: index % 2 == 1 ? 'rgba(255,255,255,.55)' : 'rgba(255,255,255,.75)'}}>\n              <Text style={{textAlign: 'center'}}>{item.Increment}</Text>\n              <Text style={{textAlign: 'center'}}>{item.Time}</Text>\n            </View>\n          )\n        }}\n      />\n      </View>\n  </View>\n  );\n}\n\nfunction SaveDriveScreen ({ navigation }) {\n  /**\n  const end = drive.pop();\n  const leave = drive.pop();\n  const arrival = drive.pop();\n  const start = drive.pop();\n  */\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Drive saved!</Text>\n\n      <Text style={{fontSize: 15, color: 'white'}}>Add any comments to your drive?</Text>\n      <TextInput style={styles.commentsBox}></TextInput>\n      <TouchableOpacity onPress={navigation.navigate('Main')} style={{backgroundColor: 'gray', marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5, borderWidth: 1, borderRadius: 20, borderColor: 'white'}}>\n        <Text style={{fontSize: 20, marginHorizontal: 10, marginVertical: 10, paddingHorizontal: 5, color: 'white'}}>Submit</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\n// Statistics screen\nfunction StatisticsScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Statistics</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    // backgroundColor: 'white',\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  buttonWhiteText: {\n    color: 'white',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  buttonBasic: {\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 15,\n    //borderColor: 'gray',\n  \tborderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  buttonLogout: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 25,\n    borderColor: 'white',\n  \tborderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  buttonSpecial: { //Currently identical to buttonBasic\n    //backgroundColor: '#8ebce7',\n    //backgroundColor: '#94bfe7',\n    //backgroundColor: '#072A42',\n    backgroundColor: 'white',\n    color: 'white',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 15,\n    borderColor: 'black',\n  \tborderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  buttonSmall: {\n    fontSize: 17,\n    marginHorizontal: 5,\n    marginVertical: 10,\n    //borderColor: 'gray',\n  \t//borderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 2\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n  \theight: 40,\n  \twidth: 200,\n  \tmarginTop: 10,\n  \tmarginBottom: 20,\n  \tborderRadius: 5,\n  \tborderColor: 'white',\n  \tborderWidth: 1,\n  \tpadding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center',\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4,\n  },\n  buttonText: {\n    fontSize: 30,\n    // color: '#B9AAFF'\n    color: 'black',\n  },\n  buttonTextReset: {\n    fontSize: 30,\n    color: '#808080',\n  },\n  timerText: {\n    fontSize: 70,\n    color: 'white',\n  },\n  commentsBox: {\n      backgroundColor: 'rgba(255,255,255,.5)',\n      height: 100,\n      width: 200,\n      marginTop: 10,\n      marginBottom: 20,\n      borderRadius: 5,\n      borderColor: 'white',\n      borderWidth: 1,\n      padding: 5\n  },\n});\n\n/*Colors!\nOld background green: '#1ddf6e'\nNew background green: '#66cc99'\nButton blue: '#80add6'\nTextbox half-opacity white: 'rgba(255,255,255,.5)'\nOld reject-drive red: `rgba(203, 59, 59, 1)`\n*/\n"]},"metadata":{},"sourceType":"module"}