{"ast":null,"code":"var isHidden = function isHidden(screenSize, props) {\n  switch (screenSize) {\n    case 'small':\n      return props.smHidden ? true : false;\n\n    case 'medium':\n      return props.mdHidden ? true : false;\n\n    case 'large':\n      return props.lgHidden ? true : false;\n\n    default:\n      return false;\n  }\n};\n\nvar toPercent = function toPercent(num) {\n  return num * 100 + '%';\n};\n\nvar getComponentWidth = function getComponentWidth(screenSize, props) {\n  switch (screenSize) {\n    case 'small':\n      if (props.sm) {\n        return toPercent(props.sm / props.rowSize);\n      } else {\n        return props.parentWidth;\n      }\n\n      break;\n\n    case 'medium':\n      if (props.md) {\n        return toPercent(props.md / props.rowSize);\n      } else if (props.sm) {\n        return toPercent(props.sm / props.rowSize);\n      } else {\n        return props.parentWidth;\n      }\n\n      break;\n\n    case 'large':\n      if (props.lg) {\n        return toPercent(props.lg / props.rowSize);\n      } else if (props.md) {\n        return toPercent(props.md / props.rowSize);\n      } else if (props.sm) {\n        return toPercent(props.sm / props.rowSize);\n      } else {\n        return props.parentWidth;\n      }\n\n      break;\n\n    default:\n      return props.parentWidth;\n  }\n};\n\nvar getComponentOffset = function getComponentOffset(screenSize, props) {\n  switch (screenSize) {\n    case 'small':\n      if (props.smOffset) {\n        return toPercent(props.smOffset / props.rowSize);\n      } else {\n        return 0;\n      }\n\n      break;\n\n    case 'medium':\n      if (props.mdOffset) {\n        return toPercent(props.mdOffset / props.rowSize);\n      } else if (props.smOffset) {\n        return toPercent(props.smOffset / props.rowSize);\n      } else {\n        return 0;\n      }\n\n      break;\n\n    case 'large':\n      if (props.lgOffset) {\n        return toPercent(props.lgOffset / props.rowSize);\n      } else if (props.mdOffset) {\n        return toPercent(props.mdOffset / props.rowSize);\n      } else if (props.smOffset) {\n        return toPercent(props.smOffset / props.rowSize);\n      } else {\n        return 0;\n      }\n\n      break;\n\n    default:\n      return 0;\n  }\n};\n\nmodule.exports = {\n  isHidden: isHidden,\n  getComponentWidth: getComponentWidth,\n  getComponentOffset: getComponentOffset\n};","map":{"version":3,"sources":["/Users/susannahbennett/node_modules/react-native-flexbox-grid/src/lib/helpers.js"],"names":["isHidden","screenSize","props","smHidden","mdHidden","lgHidden","toPercent","num","getComponentWidth","sm","rowSize","parentWidth","md","lg","getComponentOffset","smOffset","mdOffset","lgOffset","module","exports"],"mappings":"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","sourcesContent":["const isHidden = (screenSize, props) => {\n  switch(screenSize) {\n    case 'small':\n      return props.smHidden ? true : false;\n    case 'medium':\n      return props.mdHidden ? true : false;\n    case 'large':\n      return props.lgHidden ? true : false;\n    default:\n      return false;\n  }\n};\n\nconst toPercent = (num) => (num * 100) + '%';\n\nconst getComponentWidth = (screenSize, props) => {\n  switch(screenSize) {\n    case 'small':\n      if(props.sm){\n        return toPercent(props.sm/props.rowSize);\n      } else {\n        return props.parentWidth;\n      }\n      break;\n    case 'medium':\n      if(props.md){\n        return toPercent(props.md/props.rowSize);\n      } else if(props.sm){\n        return toPercent(props.sm/props.rowSize);\n      } else {\n        return props.parentWidth;\n      }\n      break;\n    case 'large':\n      if(props.lg){\n        return toPercent(props.lg/props.rowSize);\n      } else if(props.md){\n        return toPercent(props.md/props.rowSize);\n      } else if(props.sm){\n        return toPercent(props.sm/props.rowSize);\n      } else {\n        return props.parentWidth;\n      }\n      break;\n    default:\n      return props.parentWidth;\n  }\n};\n\nconst getComponentOffset = (screenSize, props) => {\n  switch(screenSize) {\n    case 'small':\n      if(props.smOffset){\n        return toPercent(props.smOffset/props.rowSize);\n      } else {\n        return 0;\n      }\n      break;\n    case 'medium':\n      if(props.mdOffset){\n        return toPercent(props.mdOffset/props.rowSize);\n      } else if(props.smOffset){\n        return toPercent(props.smOffset/props.rowSize);\n      } else {\n        return 0;\n      }\n      break;\n    case 'large':\n      if(props.lgOffset){\n        return toPercent(props.lgOffset/props.rowSize);\n      } else if(props.mdOffset){\n        return toPercent(props.mdOffset/props.rowSize);\n      } else if(props.smOffset){\n        return toPercent(props.smOffset/props.rowSize);\n      } else {\n        return 0;\n      }\n      break;\n    default:\n      return 0;\n  }\n};\n\nmodule.exports = {isHidden, getComponentWidth, getComponentOffset}"]},"metadata":{},"sourceType":"script"}