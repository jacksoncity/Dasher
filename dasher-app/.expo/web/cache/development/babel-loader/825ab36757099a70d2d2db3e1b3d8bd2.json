{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/CommentsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nexport function CommentsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      exampleState = _useState2[0],\n      setExampleState = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response, list;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_comments\", {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (response) {\n                return response.json();\n              }));\n\n            case 2:\n              response = _context.sent;\n              list = response.comments;\n              console.log(list);\n              setExampleState(list);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n\n  var addElement = function addElement() {};\n\n  React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: 'white',\n      marginHorizontal: 5,\n      marginVertical: 10,\n      paddingHorizontal: 5,\n      borderWidth: 1,\n      borderRadius: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      color: 'black',\n      marginHorizontal: 10,\n      marginVertical: 10,\n      paddingHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Accept Drive\"));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.comment_id.toString();\n    },\n    data: exampleState,\n    renderItem: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('MainMenu');\n        },\n        style: {\n          backgroundColor: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, item.item.restaurant_name));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Add element\",\n    onPress: addElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 40,\n    width: 200,\n    marginTop: 10,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/CommentsScreen.js"],"names":["useForm","Controller","React","useEffect","useState","Component","CommentsScreen","navigation","exampleState","setExampleState","fetchData","fetch","method","headers","then","response","json","list","comments","console","log","addElement","navigate","backgroundColor","marginHorizontal","marginVertical","paddingHorizontal","borderWidth","borderRadius","fontSize","color","styles","container","item","comment_id","toString","restaurant_name","StyleSheet","create","flex","alignItems","justifyContent","scrollView","textbox","height","width","marginTop","marginBottom","borderColor","padding","title"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Alert, TextInput, TouchableOpacity, FlatList} from 'react-native'\n\nexport function CommentsScreen ({ navigation }) {\n  const [exampleState, setExampleState] = useState({})\n\n    useEffect ( () => {\n      async function fetchData() {\n        const response = await fetch(\"http://localhost:5000/get_comments\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then((response) => response.json())\n        const list = response.comments // an array of comments (restaurant name and comment)\n        console.log(list)\n\n        setExampleState(list)\n      }\n      fetchData();\n    }, [])\n\n    const addElement = () => {\n      // var newArray = [...list];\n      // setExampleState(newArray);\n    }\n\n    <TouchableOpacity onPress={() => navigation.navigate('RecordDrive')}\n    style={{backgroundColor: 'white',\n    marginHorizontal: 5, marginVertical: 10, paddingHorizontal: 5,\n    borderWidth: 1, borderRadius: 20}}>\n    <Text style={{fontSize: 17, color: 'black', marginHorizontal: 10, \n    marginVertical: 10, paddingHorizontal: 5}}>Accept Drive</Text>    \n</TouchableOpacity>\n    \n    return (\n      <View style={styles.container}>\n      <FlatList\n          keyExtractor = {item => item.comment_id.toString()}  \n          data={exampleState}\n          renderItem = {item => (\n            <TouchableOpacity \n              onPress={() => navigation.navigate('MainMenu')}\n              style={{backgroundColor: 'white'}}\n            >\n              <Text>{item.item.restaurant_name}</Text>\n            </TouchableOpacity>\n            )} />\n      <Button\n        title=\"Add element\"\n        onPress={addElement} />\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20,\n  },\n  textbox: {\n      backgroundColor: 'rgba(255,255,255,.5)',\n        height: 40,\n        width: 200,\n        marginTop: 10,\n        marginBottom: 20,\n        borderRadius: 5,\n        borderColor: 'white',\n        borderWidth: 1,\n        padding: 5\n  },\n  title: {\n      color: 'black',\n      fontSize: 30,\n      // backgroundColor: 'white',\n      marginHorizontal: 15,\n      marginVertical: 15,\n      padding: 7,\n      paddingHorizontal: 20,\n      borderRadius: 5\n  },\n})"]},"metadata":{},"sourceType":"module"}