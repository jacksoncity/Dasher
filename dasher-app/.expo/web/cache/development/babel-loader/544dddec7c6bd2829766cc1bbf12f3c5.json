{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andreatyson/compsci/csci335/Dasher/dasher-app/src/StatisticsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport function StatisticsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"__\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newPay = _useState2[0],\n      setNewPay = _useState2[1];\n\n  var _useState3 = useState(\"__\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newDistance = _useState4[0],\n      setNewDistance = _useState4[1];\n\n  var _useState5 = useState(\"__\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newTrips = _useState6[0],\n      setNewTrips = _useState6[1];\n\n  var _useState7 = useState(\"__\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newAvgTime = _useState8[0],\n      setNewAvgTime = _useState8[1];\n\n  var _useState9 = useState(\"__\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newAvgRate = _useState10[0],\n      setNewAvgRate = _useState10[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response, pay, distance, trips, avgTime, avgRate;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_statistics\").then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data;\n              }));\n\n            case 2:\n              response = _context.sent;\n              console.log(response);\n              pay = response.message.pay;\n              distance = response.message.distance;\n              trips = response.message.trips;\n              avgTime = response.message.avgTime;\n              avgRate = response.message.avgRate;\n              console.log(\"Statistics received\");\n              setNewPay(pay);\n              setNewDistance(distance);\n              setNewTrips(trips);\n              setNewAvgTime(avgTime);\n              setNewAvgRate(avgRate);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Driver Statistics\"), React.createElement(Text, {\n    style: styles.chartDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Money Earned: $\" + newPay), React.createElement(Text, {\n    style: styles.chartLight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Distance Driven: \" + newDistance + \" miles\"), React.createElement(Text, {\n    style: styles.chartDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Trips Completed: \" + newTrips), React.createElement(Text, {\n    style: styles.chartLight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Avg. Delivery Time: \" + newAvgTime + \" min\"), React.createElement(Text, {\n    style: styles.chartDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Avg. Hourly Rate: $\" + newAvgRate)), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ViewDrives');\n    },\n    style: styles.buttonBasic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"View/edit past drives\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  buttonBasic: {\n    backgroundColor: 'white',\n    marginVertical: 15,\n    marginTop: 30,\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    borderRadius: 7\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 5,\n    alignContent: 'center'\n  },\n  chartDark: {\n    backgroundColor: 'rgba(255,255,255,.55)',\n    fontSize: 20,\n    color: 'black',\n    margin: 0,\n    alignContent: 'center',\n    textAlign: 'center',\n    padding: 7,\n    borderWidth: 1,\n    borderColor: 'black'\n  },\n  chartLight: {\n    backgroundColor: 'rgba(255,255,255,.75)',\n    fontSize: 20,\n    color: 'black',\n    margin: 0,\n    alignContent: 'center',\n    textAlign: 'center',\n    padding: 7,\n    borderWidth: 1,\n    borderColor: 'black'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 10,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["/Users/andreatyson/compsci/csci335/Dasher/dasher-app/src/StatisticsScreen.js"],"names":["StatusBar","React","useEffect","useState","Component","StatisticsScreen","navigation","newPay","setNewPay","newDistance","setNewDistance","newTrips","setNewTrips","newAvgTime","setNewAvgTime","newAvgRate","setNewAvgRate","fetchData","fetch","then","response","json","data","console","log","pay","message","distance","trips","avgTime","avgRate","styles","container","title","chartDark","chartLight","navigate","buttonBasic","button","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","marginHorizontal","marginVertical","borderRadius","marginTop","borderWidth","paddingHorizontal","text","margin","alignContent","textAlign","padding","borderColor"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, TouchableOpacity } from 'react-native'\n\n// Statistics screen\nexport function StatisticsScreen ({ navigation }) {\n    //const { control, handleSubmit, errors } = useForm();\n    const [newPay, setNewPay] = useState(`__`);\n    const [newDistance, setNewDistance] = useState(`__`);\n    const [newTrips, setNewTrips] = useState(`__`);\n    const [newAvgTime, setNewAvgTime] = useState(`__`);\n    const [newAvgRate, setNewAvgRate] = useState(`__`);\n  \n    useEffect ( () => {\n      async function fetchData() {\n        const response = await fetch(\"http://localhost:5000/get_statistics\")\n        .then((response) => response.json())\n        .then(data => {\n            return data;\n        });\n        console.log(response)\n\n        const pay = response.message.pay\n        const distance = response.message.distance\n        const trips = response.message.trips\n        const avgTime = response.message.avgTime\n        const avgRate = response.message.avgRate\n        console.log(\"Statistics received\")\n    \n        //Set variables for later printing\n        setNewPay(pay)\n        setNewDistance(distance)\n        setNewTrips(trips)\n        setNewAvgTime(avgTime)\n        setNewAvgRate(avgRate)\n      }\n      fetchData();\n    }, [])\n    \n    return (\n      <View style={styles.container}>\n\n      <View>\n        <Text style={styles.title}>Driver Statistics</Text>\n        <Text style={styles.chartDark}>{`Money Earned: $${newPay}`}</Text>\n        <Text style={styles.chartLight}>{`Distance Driven: ${newDistance} miles`}</Text>\n        <Text style={styles.chartDark}>{`Trips Completed: ${newTrips}`}</Text>\n        <Text style={styles.chartLight}>{`Avg. Delivery Time: ${newAvgTime} min`}</Text>\n        <Text style={styles.chartDark}>{`Avg. Hourly Rate: $${newAvgRate}`}</Text>\n      </View>\n\n        <View>\n        <TouchableOpacity\n          onPress={ () => navigation.navigate('ViewDrives')}\n          style={styles.buttonBasic}>\n          <Text style={styles.button}>View/edit past drives</Text>\n        </TouchableOpacity>\n        </View>\n        \n      </View>\n    )\n  }\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#66cc99',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n        color: 'black',\n        fontSize: 20,\n        marginHorizontal: 10,\n        marginVertical: 10,\n        borderRadius: 10\n    },\n    buttonBasic: {\n      backgroundColor: 'white',\n      // marginHorizontal: 10,\n      marginVertical: 15,\n      marginTop: 30,\n      //borderColor: 'gray',\n        borderWidth: 1,\n      paddingHorizontal: 10,\n      borderRadius: 7,\n    },\n    text: {\n        fontSize: 20,\n        color: 'black',\n        margin: 5,\n        alignContent: 'center'\n    },\n    chartDark: {\n      backgroundColor: 'rgba(255,255,255,.55)',\n      fontSize: 20,\n      color: 'black',\n      margin: 0,\n      alignContent: 'center',\n      textAlign: 'center',\n      padding: 7,\n      borderWidth: 1,\n      borderColor: 'black'\n    },\n    chartLight: {\n      backgroundColor: 'rgba(255,255,255,.75)',\n      fontSize: 20,\n      color: 'black',\n      margin: 0,\n      alignContent: 'center',\n      textAlign: 'center',\n      padding: 7,     \n      borderWidth: 1,\n      borderColor: 'black'\n    },\n    title: {\n        color: 'black',\n        fontSize: 30,\n        // backgroundColor: 'white',\n        marginHorizontal: 15,\n        marginVertical: 10,\n        padding: 7,\n        paddingHorizontal: 20,\n        borderRadius: 5\n    },\n})"]},"metadata":{},"sourceType":"module"}