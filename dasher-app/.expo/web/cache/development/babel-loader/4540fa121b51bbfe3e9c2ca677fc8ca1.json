{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/ViewDrivesScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Trash2 } from 'react-feather';\nexport function ViewDrivesScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrollList = _useState2[0],\n      setScrollList = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response, list;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_drives\", {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (response) {\n                return response.json();\n              }));\n\n            case 2:\n              response = _context.sent;\n              list = response.comments;\n              console.log(list);\n              setScrollList(list);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    data: scrollList,\n    renderItem: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.textbox,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.driveTitle,\n        onPress: function onPress() {\n          return navigation.navigate('Main');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, item.item.restaurant_name)), React.createElement(Text, {\n        style: styles.comment,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, \"Pay\", item.item.pay));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  button: {\n    height: 40,\n    width: 150,\n    marginTop: 10,\n    marginBottom: 5,\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    fontSize: 20,\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n    height: 60,\n    width: 250,\n    marginTop: 10,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  driveTitle: {\n    fontSize: 14,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  comment: {\n    fontSize: 12,\n    color: 'black'\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/ViewDrivesScreen.js"],"names":["React","useEffect","useState","Component","Trash2","ViewDrivesScreen","navigation","scrollList","setScrollList","fetchData","fetch","method","headers","then","response","json","list","comments","console","log","styles","container","item","id","toString","textbox","flexDirection","justifyContent","driveTitle","navigate","restaurant_name","comment","pay","StyleSheet","create","button","height","width","marginTop","marginBottom","backgroundColor","color","borderRadius","borderColor","borderWidth","padding","fontSize","textAlign","flex","alignItems","scrollView","marginHorizontal","title","marginVertical","paddingHorizontal","fontWeight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Alert, TextInput, TouchableOpacity, FlatList} from 'react-native'\nimport { Trash2 } from 'react-feather';\n\nexport function ViewDrivesScreen ({ navigation }) {\n  const [scrollList, setScrollList] = useState({})\n\n    useEffect ( () => {\n      async function fetchData() {\n        const response = await fetch(\"http://localhost:5000/get_drives\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then((response) => response.json())\n        const list = response.comments // an array of comments (restaurant name and comment)\n        console.log(list)\n\n        setScrollList(list)\n      }\n      fetchData();\n    }, [])\n    // if the text is longer than what can be displayed, cut it short with ...\n    /** \n    const deleteItem = async (id) => {\n      // send back the whole item and it will delete that comment\n      const toDelete = (scrollList.filter(function(item){\n        return item.comment_id == id;\n      }).map(function({comment, comment_id, restaurant_name}){\n         return {comment, comment_id, restaurant_name};\n      })).pop()\n\n      const response = await fetch(\"http://localhost:5000/delete_comment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(toDelete)\n      }).then((response) => response.json())\n      if (response.message == \"comment deleted\") {\n        alert(\"Comment successfully deleted\")\n        setScrollList(scrollList.filter(function(item){\n          return item.comment_id != id;\n        }).map(function({comment, comment_id, restaurant_name}){\n          return {comment, comment_id, restaurant_name};\n        }))\n      } else {\n        alert(\"Failed to delete comment\")\n      }\n    }\n    */\n\n    return (\n      <View style={styles.container}>\n      <FlatList\n          keyExtractor = {item => item.id.toString()}  \n          data={scrollList}\n          renderItem = {item => (\n            <TouchableOpacity \n              style={styles.textbox} >\n              <View style={{flexDirection: 'row', justifyContent: 'space-between'}}>\n                <Text style={styles.driveTitle} onPress={() => navigation.navigate('Main')}>{item.item.restaurant_name}</Text>\n              </View>\n              <Text style={styles.comment}>Pay{item.item.pay}</Text>\n            </TouchableOpacity>\n            )} />\n      </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 40,\n    width: 150,\n    marginTop: 10,\n    marginBottom: 5,\n    backgroundColor: 'white',\n    color: 'black',\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    fontSize: 20,\n    textAlign: 'center',\n    // alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  scrollView: {\n    backgroundColor: 'white',\n    marginHorizontal: 20,\n  },\n  textbox: {\n    backgroundColor: 'rgba(255,255,255,.5)',\n      height: 60,\n      width: 250,\n      marginTop: 10,\n      // marginBottom: 5,\n      borderRadius: 5,\n      borderColor: 'white',\n      borderWidth: 1,\n      padding: 5\n  },\n  title: {\n      color: 'black',\n      fontSize: 30,\n      // backgroundColor: 'white',\n      marginHorizontal: 15,\n      marginVertical: 15,\n      padding: 7,\n      paddingHorizontal: 20,\n      borderRadius: 5\n  },\n  driveTitle: {\n    fontSize: 14,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  comment: {\n    fontSize: 12,\n    color: 'black'\n  }\n})"]},"metadata":{},"sourceType":"module"}