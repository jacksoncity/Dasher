{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/src/StatisticsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport function StatisticsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"__\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newStatistics = _useState2[0],\n      setNewStatistics = _useState2[1];\n\n  var onSubmit = function onSubmit(data) {\n    var response, statistics;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/get_statistics\").then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 2:\n            response = _context.sent;\n            console.log(response);\n            statistics = response;\n            setNewStatistics(statistics);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Statistics\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onSubmit,\n    style: styles.buttonSpecial,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Get Statistics\"))), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"\" + newStatistics));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 10\n  },\n  buttonSpecial: {\n    backgroundColor: 'white',\n    color: 'white',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 15,\n    borderColor: 'black',\n    borderWidth: 1,\n    paddingHorizontal: 5,\n    borderRadius: 7\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/src/StatisticsScreen.js"],"names":["StatusBar","React","useEffect","useState","Component","StatisticsScreen","navigation","newStatistics","setNewStatistics","onSubmit","data","fetch","then","response","json","console","log","statistics","styles","container","title","buttonSpecial","button","text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize","marginHorizontal","marginVertical","borderRadius","borderColor","borderWidth","paddingHorizontal","margin","alignContent","padding"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, TouchableOpacity } from 'react-native'\n\n// Statistics screen\nexport function StatisticsScreen ({ navigation }) {\n    //const { control, handleSubmit, errors } = useForm();\n    const [newStatistics, setNewStatistics] = useState(`__`);\n  \n    /*async function fetchMovies() {\n    const response = await fetch('/movies');\n    // waits until the request completes...\n    console.log(response);\n  }*/\n  \n    const onSubmit = async (data) => { \n      const response = await fetch(\"http://localhost:5000/get_statistics\")\n      .then((response) => response.json())\n      .then(data => {\n          return data;\n      });\n      console.log(response)\n  \n      //const statistics = response.statistics\n      const statistics = response\n      // console.log(\"statistics: \" + statistics)\n  \n      //Set variables for later printing\n      setNewStatistics(statistics)\n    }\n    \n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Statistics</Text>\n        <View>\n          <TouchableOpacity\n            // handleSubmit validates inputs before calling onSubmit\n            //onPress={handleSubmit(onSubmit)}\n            onPress={onSubmit}\n            style={styles.buttonSpecial}>\n          <Text style={ styles.button}>Get Statistics</Text>\n        </TouchableOpacity>\n        </View>\n        <Text style={styles.text}>{`${newStatistics}`}</Text>\n      </View>\n    )\n  }\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#66cc99',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    button: {\n        color: 'black',\n        fontSize: 20,\n        marginHorizontal: 10,\n        marginVertical: 10,\n        borderRadius: 10\n    },\n    buttonSpecial: { //Currently identical to buttonBasic\n        //backgroundColor: '#8ebce7',\n        //backgroundColor: '#94bfe7',\n        //backgroundColor: '#072A42',\n        backgroundColor: 'white',\n        color: 'white',\n        fontSize: 20,\n        marginHorizontal: 10,\n        marginVertical: 15,\n        borderColor: 'black',\n          borderWidth: 1,\n        paddingHorizontal: 5,\n        borderRadius: 7\n    },\n    text: {\n        fontSize: 20,\n        color: 'black',\n        margin: 10,\n        alignContent: 'center'\n    },\n    title: {\n        color: 'black',\n        fontSize: 30,\n        // backgroundColor: 'white',\n        marginHorizontal: 15,\n        marginVertical: 15,\n        padding: 7,\n        paddingHorizontal: 20,\n        borderRadius: 5\n    },\n})"]},"metadata":{},"sourceType":"module"}