{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/susannahbennett/node_modules/react-native-flexbox-grid/src/components/Column.js\";\n\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { screenSize } from \"../lib/ScreenSize\";\nimport { isHidden, getComponentWidth, getComponentOffset } from \"../lib/helpers\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Column = function Column(props) {\n  var sm = props.sm,\n      smOffset = props.smOffset,\n      smHidden = props.smHidden,\n      md = props.md,\n      mdOffset = props.mdOffset,\n      mdHidden = props.mdHidden,\n      lg = props.lg,\n      lgOffset = props.lgOffset,\n      lgHidden = props.lgHidden,\n      rowSize = props.rowSize,\n      rest = _objectWithoutProperties(props, [\"sm\", \"smOffset\", \"smHidden\", \"md\", \"mdOffset\", \"mdHidden\", \"lg\", \"lgOffset\", \"lgHidden\", \"rowSize\"]);\n\n  var gridProps = {\n    sm: sm,\n    smOffset: smOffset,\n    smHidden: smHidden,\n    md: md,\n    mdOffset: mdOffset,\n    mdHidden: mdHidden,\n    lg: lg,\n    lgOffset: lgOffset,\n    lgHidden: lgHidden,\n    rowSize: rowSize\n  };\n\n  if (isHidden(screenSize, gridProps)) {\n    return null;\n  } else {\n    return React.createElement(View, _extends({}, rest, {\n      style: [props.style, {\n        width: getComponentWidth(screenSize, gridProps),\n        flexDirection: 'column',\n        marginLeft: getComponentOffset(screenSize, gridProps)\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), rest.children);\n  }\n};\n\nColumn.propTypes = {\n  sm: PropTypes.number,\n  smOffset: PropTypes.number,\n  smHidden: PropTypes.bool,\n  md: PropTypes.number,\n  mdOffset: PropTypes.number,\n  mdHidden: PropTypes.bool,\n  lg: PropTypes.number,\n  lgOffset: PropTypes.number,\n  lgHidden: PropTypes.bool\n};\nexport default Column;","map":{"version":3,"sources":["/Users/susannahbennett/node_modules/react-native-flexbox-grid/src/components/Column.js"],"names":["React","Component","PropTypes","screenSize","isHidden","getComponentWidth","getComponentOffset","Column","props","sm","smOffset","smHidden","md","mdOffset","mdHidden","lg","lgOffset","lgHidden","rowSize","rest","gridProps","style","width","flexDirection","marginLeft","children","propTypes","number","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR;AACA,SAAQC,QAAR,EAAkBC,iBAAlB,EAAqCC,kBAArC;;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,MAEpBC,EAFoB,GAalBD,KAbkB,CAEpBC,EAFoB;AAAA,MAGpBC,QAHoB,GAalBF,KAbkB,CAGpBE,QAHoB;AAAA,MAIpBC,QAJoB,GAalBH,KAbkB,CAIpBG,QAJoB;AAAA,MAKpBC,EALoB,GAalBJ,KAbkB,CAKpBI,EALoB;AAAA,MAMpBC,QANoB,GAalBL,KAbkB,CAMpBK,QANoB;AAAA,MAOpBC,QAPoB,GAalBN,KAbkB,CAOpBM,QAPoB;AAAA,MAQpBC,EARoB,GAalBP,KAbkB,CAQpBO,EARoB;AAAA,MASpBC,QAToB,GAalBR,KAbkB,CASpBQ,QAToB;AAAA,MAUpBC,QAVoB,GAalBT,KAbkB,CAUpBS,QAVoB;AAAA,MAWpBC,OAXoB,GAalBV,KAbkB,CAWpBU,OAXoB;AAAA,MAYjBC,IAZiB,4BAalBX,KAbkB;;AAetB,MAAMY,SAAS,GAAG;AAChBX,IAAAA,EAAE,EAAFA,EADgB;AAEhBC,IAAAA,QAAQ,EAARA,QAFgB;AAGhBC,IAAAA,QAAQ,EAARA,QAHgB;AAIhBC,IAAAA,EAAE,EAAFA,EAJgB;AAKhBC,IAAAA,QAAQ,EAARA,QALgB;AAMhBC,IAAAA,QAAQ,EAARA,QANgB;AAOhBC,IAAAA,EAAE,EAAFA,EAPgB;AAQhBC,IAAAA,QAAQ,EAARA,QARgB;AAShBC,IAAAA,QAAQ,EAARA,QATgB;AAUhBC,IAAAA,OAAO,EAAPA;AAVgB,GAAlB;;AAaA,MAAGd,QAAQ,CAACD,UAAD,EAAaiB,SAAb,CAAX,EAAmC;AACjC,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,IAAD,eACID,IADJ;AAEA,MAAA,KAAK,EAAE,CACLX,KAAK,CAACa,KADD,EACQ;AACXC,QAAAA,KAAK,EAAEjB,iBAAiB,CAACF,UAAD,EAAaiB,SAAb,CADb;AAEXG,QAAAA,aAAa,EAAE,QAFJ;AAGXC,QAAAA,UAAU,EAAElB,kBAAkB,CAACH,UAAD,EAAaiB,SAAb;AAHnB,OADR,CAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAQGD,IAAI,CAACM,QARR,CADF;AAYD;AACJ,CA5CD;;AA8CAlB,MAAM,CAACmB,SAAP,GAAmB;AACjBjB,EAAAA,EAAE,EAAEP,SAAS,CAACyB,MADG;AAEjBjB,EAAAA,QAAQ,EAAER,SAAS,CAACyB,MAFH;AAGjBhB,EAAAA,QAAQ,EAAET,SAAS,CAAC0B,IAHH;AAIjBhB,EAAAA,EAAE,EAAEV,SAAS,CAACyB,MAJG;AAKjBd,EAAAA,QAAQ,EAAEX,SAAS,CAACyB,MALH;AAMjBb,EAAAA,QAAQ,EAAEZ,SAAS,CAAC0B,IANH;AAOjBb,EAAAA,EAAE,EAAEb,SAAS,CAACyB,MAPG;AAQjBX,EAAAA,QAAQ,EAAEd,SAAS,CAACyB,MARH;AASjBV,EAAAA,QAAQ,EAAEf,SAAS,CAAC0B;AATH,CAAnB;AAYA,eAAerB,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {screenSize} from '../lib/ScreenSize';\nimport {isHidden, getComponentWidth, getComponentOffset} from '../lib/helpers';\nimport {View} from 'react-native';\n\nconst Column = (props) => {\n    const {\n      sm,\n      smOffset,\n      smHidden,\n      md,\n      mdOffset,\n      mdHidden,\n      lg,\n      lgOffset,\n      lgHidden,\n      rowSize,\n      ...rest\n    } = props;\n\n    const gridProps = {\n      sm,\n      smOffset,\n      smHidden,\n      md,\n      mdOffset,\n      mdHidden,\n      lg,\n      lgOffset,\n      lgHidden,\n      rowSize\n    };\n\n    if(isHidden(screenSize, gridProps)){\n      return null;\n    } else {\n      return (\n        <View\n        {...rest}\n        style={[\n          props.style, {\n            width: getComponentWidth(screenSize, gridProps),\n            flexDirection: 'column',\n            marginLeft: getComponentOffset(screenSize, gridProps)\n          }]}>\n          {rest.children}\n        </View>\n      );\n    }\n};\n\nColumn.propTypes = {\n  sm: PropTypes.number,\n  smOffset: PropTypes.number,\n  smHidden: PropTypes.bool,\n  md: PropTypes.number,\n  mdOffset: PropTypes.number,\n  mdHidden: PropTypes.bool,\n  lg: PropTypes.number,\n  lgOffset: PropTypes.number,\n  lgHidden: PropTypes.bool,\n};\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}