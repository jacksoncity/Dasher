{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/susannahbennett/node_modules/react-native-flexbox-grid/src/components/Row.js\";\n\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { screenSize } from \"../lib/ScreenSize\";\nimport { isHidden } from \"../lib/helpers\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar cloneElements = function cloneElements(props) {\n  var rowSize = props.size > 0 ? props.size : 12;\n  return React.Children.map(props.children, function (element) {\n    return React.cloneElement(element, {\n      rowSize: rowSize\n    });\n  });\n};\n\nvar Row = function Row(props) {\n  if (isHidden(screenSize, props)) {\n    return null;\n  } else {\n    return React.createElement(View, _extends({}, props, {\n      style: [props.style, {\n        flexDirection: 'row',\n        flexWrap: props.nowrap ? 'nowrap' : 'wrap',\n        alignItems: props.alignItems,\n        justifyContent: props.justifyContent\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), cloneElements(props));\n  }\n};\n\nRow.propTypes = {\n  size: PropTypes.number,\n  nowrap: PropTypes.bool,\n  smHidden: PropTypes.bool,\n  mdHidden: PropTypes.bool,\n  lgHidden: PropTypes.bool\n};\nexport default Row;","map":{"version":3,"sources":["/Users/susannahbennett/node_modules/react-native-flexbox-grid/src/components/Row.js"],"names":["React","Component","PropTypes","screenSize","isHidden","cloneElements","props","rowSize","size","Children","map","children","element","cloneElement","Row","style","flexDirection","flexWrap","nowrap","alignItems","justifyContent","propTypes","number","bool","smHidden","mdHidden","lgHidden"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,UAAR;AACA,SAAQC,QAAR;;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAE7B,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAN,GAAa,CAAb,GAAiBF,KAAK,CAACE,IAAvB,GAA8B,EAA9C;AAEA,SAAOR,KAAK,CAACS,QAAN,CAAeC,GAAf,CAAmBJ,KAAK,CAACK,QAAzB,EAAmC,UAACC,OAAD,EAAa;AACrD,WAAOZ,KAAK,CAACa,YAAN,CAAmBD,OAAnB,EAA4B;AAACL,MAAAA,OAAO,EAAEA;AAAV,KAA5B,CAAP;AACD,GAFM,CAAP;AAGH,CAPD;;AASA,IAAMO,GAAG,GAAG,SAANA,GAAM,CAACR,KAAD,EAAW;AACrB,MAAGF,QAAQ,CAACD,UAAD,EAAaG,KAAb,CAAX,EAA+B;AAC3B,WAAO,IAAP;AACD,GAFH,MAES;AACL,WACE,oBAAC,IAAD,eAAUA,KAAV;AACE,MAAA,KAAK,EAAE,CAACA,KAAK,CAACS,KAAP,EACC;AAAEC,QAAAA,aAAa,EAAE,KAAjB;AACEC,QAAAA,QAAQ,EAAEX,KAAK,CAACY,MAAN,GAAe,QAAf,GAA0B,MADtC;AAEEC,QAAAA,UAAU,EAAEb,KAAK,CAACa,UAFpB;AAGEC,QAAAA,cAAc,EAAEd,KAAK,CAACc;AAHxB,OADD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOKf,aAAa,CAACC,KAAD,CAPlB,CADF;AAWD;AACJ,CAhBD;;AAkBAQ,GAAG,CAACO,SAAJ,GAAgB;AACdb,EAAAA,IAAI,EAAEN,SAAS,CAACoB,MADF;AAEdJ,EAAAA,MAAM,EAAEhB,SAAS,CAACqB,IAFJ;AAGdC,EAAAA,QAAQ,EAAEtB,SAAS,CAACqB,IAHN;AAIdE,EAAAA,QAAQ,EAAEvB,SAAS,CAACqB,IAJN;AAKdG,EAAAA,QAAQ,EAAExB,SAAS,CAACqB;AALN,CAAhB;AAQA,eAAeT,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport {screenSize} from '../lib/ScreenSize';\nimport {isHidden} from '../lib/helpers';\nimport {View} from 'react-native';\n\nconst cloneElements = (props) => {\n    //if size doesn't exist or is 0 default to 12\n    const rowSize = props.size > 0 ? props.size : 12;\n\n    return React.Children.map(props.children, (element) => {\n      return React.cloneElement(element, {rowSize: rowSize});\n    });\n}\n\nconst Row = (props) => {\n  if(isHidden(screenSize, props)){\n      return null;\n    } else {\n      return (\n        <View {...props}\n          style={[props.style,\n                  { flexDirection: 'row',\n                    flexWrap: props.nowrap ? 'nowrap' : 'wrap',\n                    alignItems: props.alignItems,\n                    justifyContent: props.justifyContent\n                  }]}>\n            {cloneElements(props)}\n        </View>\n      );\n    }\n}\n\nRow.propTypes = {\n  size: PropTypes.number,\n  nowrap: PropTypes.bool,\n  smHidden: PropTypes.bool,\n  mdHidden: PropTypes.bool,\n  lgHidden: PropTypes.bool,\n};\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}