{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport 'react-native-gesture-handler';\nimport { useForm, Controller } from 'react-hook-form';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { NavigationContainer, ThemeProvider } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { RecommendForm } from \"./RecommendForm\";\nimport ReactDOM from 'react-dom';\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 2\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Signup\",\n    component: SignupScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Main\",\n    component: MainScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Recommendations\",\n    component: RecommendScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecordDrive\",\n    component: RecordDriveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SaveDrive\",\n    component: SaveDriveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Statistics\",\n    component: StatisticsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n}\nvar Stack = createStackNavigator();\n\nfunction LoginScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm({\n    criteriaMode: 'all'\n  }),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      setError = _useForm.setError,\n      errors = _useForm.errors;\n\n  var usernameInputRef = React.useRef();\n  var passwordInputRef = React.useRef();\n\n  var onSubmit = function onSubmit(data) {\n    var json, username, password, user, response;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            username = json[\"username\"];\n            password = json[\"password\"];\n            user = {\n              username: username,\n              password: password\n            };\n            console.log(JSON.stringify(user));\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:5000/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(user)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 7:\n            response = _context.sent;\n\n            if (response.message == \"login successfull\") {\n              navigation.navigate('Main');\n            } else {}\n\n            console.log(response);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var signup = function signup() {\n    navigation.navigate('Signup');\n  };\n\n  var onError = function onError(errors, e) {\n    return console.log(errors, e);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Welcome!\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Username\"), React.createElement(Controller, {\n    name: \"username\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        autoCapitalize: false,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: usernameInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Password\"), React.createElement(Controller, {\n    name: \"password\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        secureTextEntry: true,\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: passwordInputRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    color: \"black\",\n    title: \"Log In\",\n    onPress: handleSubmit(onSubmit, onError),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 20,\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"New to Dasher? Create an account.\"))));\n}\n\nfunction SignupScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"Sign up here!\"));\n}\n\nfunction MainScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Main Menu\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Recommendations');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Get recommendation\")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"  Record a new drive  \")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Statistics');\n    },\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"      View statistics      \")), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, \"View/edit past drives\")));\n}\n\nfunction RecommendScreen(_ref4) {\n  var _this2 = this;\n\n  var navigation = _ref4.navigation;\n\n  var _useForm2 = useForm(),\n      control = _useForm2.control,\n      handleSubmit = _useForm2.handleSubmit,\n      errors = _useForm2.errors;\n\n  var restaurantInputRef = React.useRef();\n  var distanceInputRef = React.useRef();\n  var payInputRef = React.useRef();\n\n  var _useState = useState(\"__\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newPrediction = _useState2[0],\n      setNewPrediction = _useState2[1];\n\n  var _useState3 = useState(\"__\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newMessage = _useState4[0],\n      setNewMessage = _useState4[1];\n\n  var onSubmit = function onSubmit(data) {\n    var json, restaurant, distance, pay, drive, response, prediction, message;\n    return _regeneratorRuntime.async(function onSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n            restaurant = json[\"restaurant\"];\n            distance = json[\"distance\"];\n            pay = json[\"pay\"];\n            drive = {\n              restaurant: restaurant,\n              distance: distance,\n              pay: pay\n            };\n            console.log(drive);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(fetch(\"http://127.0.0.1:5000/get_recommendation\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(drive)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }));\n\n          case 8:\n            response = _context2.sent;\n            prediction = response.message.prediction;\n            message = response.message.message;\n            console.log(\"message: \" + message + \", prediction: \" + prediction);\n            setNewPrediction(prediction);\n            setNewMessage(message);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, \"Get Recommendation!\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \"Restaurant\"), React.createElement(Controller, {\n    name: \"restaurant\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: restaurantInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"Distance\"), React.createElement(Controller, {\n    name: \"distance\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: distanceInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, \"Pay\"), React.createElement(Controller, {\n    name: \"pay\",\n    control: control,\n    rules: {\n      required: 'This is required'\n    },\n    defaultValue: \"\",\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        style: styles.textbox,\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        ref: payInputRef,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleSubmit(onSubmit),\n    style: {\n      backgroundColor: 'cyan',\n      margin: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, \"Get Recommendation\"))), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }\n  }, \"Prediction: $\" + newPrediction + \"/hour\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, \"Notes: \" + newMessage), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, \"  \"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RecordDrive');\n    },\n    style: {\n      backgroundColor: 'rgba(33, 161, 72, 1)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, \"Accept Drive\")), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }, \"  \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Main');\n    },\n    style: {\n      backgroundColor: \"rgba(203, 59, 59, 1)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, \"Reject Drive\"))));\n}\n\nvar formatNumber = function formatNumber(number) {\n  return (\"0\" + number).slice(-2);\n};\n\nvar getRemaining = function getRemaining(time) {\n  var mins = Math.floor(time / 60);\n  var secs = time - mins * 60;\n  return {\n    mins: formatNumber(mins),\n    secs: formatNumber(secs)\n  };\n};\n\nfunction RecordDriveScreen(_ref5) {\n  var navigation = _ref5.navigation;\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      remainingSecs = _useState6[0],\n      setRemainingSecs = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isActive = _useState8[0],\n      setIsActive = _useState8[1];\n\n  var _getRemaining = getRemaining(remainingSecs),\n      mins = _getRemaining.mins,\n      secs = _getRemaining.secs;\n\n  var laps = new Array();\n\n  var toggle = function toggle() {\n    setIsActive(!isActive);\n\n    if (!isActive) {\n      laps.push(Date(Date.now()).toString());\n    } else {\n      console.log(laps.pop());\n    }\n  };\n\n  var reset = function reset() {\n    setRemainingSecs(0);\n    setIsActive(false);\n    laps = (_readOnlyError(\"laps\"), new Array());\n  };\n\n  var addLap = function addLap() {\n    laps.push(Date(Date.now()).toString());\n  };\n\n  var saveDrive = function saveDrive() {\n    console.log(laps[0]);\n    console.log(laps[1]);\n    console.log(laps[2]);\n    console.log(laps[3]);\n  };\n\n  useEffect(function () {\n    var interval = null;\n\n    if (isActive) {\n      interval = setInterval(function () {\n        setRemainingSecs(function (remainingSecs) {\n          return remainingSecs + 1;\n        });\n      }, 1000);\n    } else if (!isActive && remainingSecs !== 0) {\n      clearInterval(interval);\n    }\n\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [isActive, remainingSecs]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.timerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }\n  }, mins + \":\" + secs), React.createElement(TouchableOpacity, {\n    onPress: toggle,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 9\n    }\n  }, isActive ? 'Save' : 'Start')), React.createElement(TouchableOpacity, {\n    onPress: addLap,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }\n  }, \"Lap\")), React.createElement(TouchableOpacity, {\n    onPress: reset,\n    style: [styles.button, styles.buttonReset],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.buttonText, styles.buttonTextReset],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }, \"Reset\")));\n}\n\nfunction SaveDriveScreen(_ref6) {\n  var navigation = _ref6.navigation;\n\n  var _useForm3 = useForm(),\n      control = _useForm3.control;\n\n  var startRef = React.useRef();\n  var arrivalRef = React.useRef();\n  var leaveRef = React.useRef();\n  var endRef = React.useRef();\n\n  var onSubmit = function onSubmit(data) {\n    var json;\n    return _regeneratorRuntime.async(function onSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            json = JSON.parse(JSON.stringify(data));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 6\n    }\n  }, \"Confirm drive with comments/details here\"));\n}\n\nfunction StatisticsScreen(_ref7) {\n  var navigation = _ref7.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }\n  }, \"Statistics\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n    backgroundColor: 'white',\n    height: 40,\n    width: 200,\n    marginTop: 10,\n    marginBottom: 20,\n    borderRadius: 5,\n    borderColor: 'white',\n    borderWidth: 1,\n    padding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center'\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4\n  },\n  buttonText: {\n    fontSize: 30,\n    color: 'black'\n  },\n  buttonTextReset: {\n    fontSize: 30,\n    color: '#808080'\n  },\n  timerText: {\n    fontSize: 70,\n    color: 'white'\n  },\n  circleButton: {\n    width: 100,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 17,\n    borderRadius: 100,\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/App.js"],"names":["useForm","Controller","StatusBar","React","useEffect","useState","Component","NavigationContainer","ThemeProvider","createStackNavigator","RecommendForm","ReactDOM","App","LoginScreen","SignupScreen","MainScreen","RecommendScreen","RecordDriveScreen","SaveDriveScreen","StatisticsScreen","Stack","navigation","criteriaMode","control","handleSubmit","setError","errors","usernameInputRef","useRef","passwordInputRef","onSubmit","data","json","JSON","parse","stringify","username","password","user","console","log","fetch","method","headers","body","then","response","message","navigate","signup","onError","e","styles","container","title","label","required","props","textbox","value","onChange","text","color","fontSize","alignItems","backgroundColor","button","restaurantInputRef","distanceInputRef","payInputRef","newPrediction","setNewPrediction","newMessage","setNewMessage","restaurant","distance","pay","drive","prediction","margin","formatNumber","number","slice","getRemaining","time","mins","Math","floor","secs","remainingSecs","setRemainingSecs","isActive","setIsActive","laps","Array","toggle","push","Date","now","toString","pop","reset","addLap","saveDrive","interval","setInterval","clearInterval","timerText","buttonText","buttonReset","buttonTextReset","startRef","arrivalRef","leaveRef","endRef","StyleSheet","create","flex","justifyContent","marginHorizontal","marginVertical","padding","paddingHorizontal","borderRadius","height","width","marginTop","marginBottom","borderColor","borderWidth","alignContent","fontWeight","input","circleButton"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport { useForm, Controller } from 'react-hook-form'\nimport { StatusBar } from 'expo-status-bar'\nimport React, { useEffect, useState, Component } from 'react'\nimport { StyleSheet, Button, Text, View, Image, Alert, TextInput, TouchableOpacity, Dimensions} from 'react-native'\nimport { NavigationContainer, ThemeProvider } from '@react-navigation/native'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport { RecommendForm } from './RecommendForm'\nimport ReactDOM from 'react-dom'\n\nexport default function App () {\n  return (\n\t<NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n        <Stack.Screen name=\"Signup\" component={SignupScreen} />\n        <Stack.Screen name=\"Main\" component={MainScreen} />\n        <Stack.Screen name=\"Recommendations\" component={RecommendScreen} />\n        <Stack.Screen name=\"RecordDrive\" component={RecordDriveScreen} />\n        <Stack.Screen name=\"SaveDrive\" component={SaveDriveScreen} />\n        <Stack.Screen name=\"Statistics\" component={StatisticsScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  )\n}\n\nconst Stack = createStackNavigator()\n\n// Login screen\nfunction LoginScreen ({ navigation }) {\n\n  // useForm allows us to validate inputs and build forms\n  const {control, handleSubmit, setError, errors} = useForm( { criteriaMode: 'all' })\n  const usernameInputRef = React.useRef()\n  const passwordInputRef = React.useRef()\n\n  const onSubmit = async (data) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    const json = JSON.parse(JSON.stringify(data))\n    const username = json[\"username\"]\n    const password = json[\"password\"]\n    const user = {username, password}\n    console.log(JSON.stringify(user))\n    const response = await fetch(\"http://127.0.0.1:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then((response) => response.json())\n    .then(data => {\n        return data;\n    });\n    if (response.message == \"login successfull\") {\n      navigation.navigate('Main');\n    } else {\n      //clear the input fields and display message\n    }\n    console.log(response)\n    \n  }\n  const signup = () => {\n    navigation.navigate('Signup');\n  }\n\n  const onError = (errors, e) => console.log(errors, e)\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.title}>Welcome!</Text>\n        <Text style={styles.label}>Username</Text>\n        <Controller \n          name=\"username\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              autoCapitalize={false}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={usernameInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Text style={styles.label}>Password</Text>\n        <Controller \n          name=\"password\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              secureTextEntry={true}\n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }}\n              ref={passwordInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <Button color=\"black\" title=\"Log In\" \n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit, onError)} \n          // onPress={() => navigation.navigate('Main')}\n          />\n      </View>\n      <View>\n        <Text style={styles.text}>\n        </Text>\n        <TouchableOpacity onPress={signup}>\n          <Text style={ { color: 'white', fontSize: 20, alignItems: 'center',}}>New to Dasher? Create an account.</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\nfunction SignupScreen ({ navigation }) {\n  return (\n    <View>\n      <Text>Sign up here!</Text>\n    </View>\n  )\n}\n\n// Main menu screen\nfunction MainScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Main Menu</Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>Get recommendation</Text>\n      </TouchableOpacity>\n\n      <Text style={styles.text}>\n        </Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('RecordDrive')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>  Record a new drive  </Text>\n      </TouchableOpacity>\n\n      <Text style={styles.text}>\n        </Text>\n\n      <TouchableOpacity\n        onPress={() => navigation.navigate('Statistics')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>      View statistics      </Text>\n      </TouchableOpacity>\n\n      <Text style={styles.text}>\n        </Text>\n\n      <TouchableOpacity\n        // onPress={() => navigation.navigate('Recommendations')}\n        style={{ backgroundColor: '#fff' }}>\n        <Text style={styles.button}>View/edit past drives</Text>\n      </TouchableOpacity>\n\n    </View>\n  )\n}\n\n//GetRecommendations screen\nfunction RecommendScreen({ navigation }) {\n  const { control, handleSubmit, errors } = useForm();\n  const restaurantInputRef = React.useRef()\n  const distanceInputRef = React.useRef()\n  const payInputRef = React.useRef()\n\n  //Variables to print prediction and message\n  const [newPrediction, setNewPrediction] = useState(`__`);\n  const [newMessage, setNewMessage] = useState(`__`);\n  \n  \n  const onSubmit = async (data) => { \n    // Once handleSubmit validates the inputs in onPress in button, this code is executed\n    const json = JSON.parse(JSON.stringify(data))\n    const restaurant = json[\"restaurant\"]\n    const distance = json[\"distance\"]\n    const pay = json[\"pay\"]\n    const drive = {restaurant, distance, pay}\n    console.log(drive)\n    const response = await fetch(\"http://127.0.0.1:5000/get_recommendation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(drive)\n    }).then((response) => response.json())\n    .then(data => {\n        return data;\n    });\n    \n    const prediction = response.message.prediction\n    const message = response.message.message\n    console.log(\"message: \" + message+ \", prediction: \" + prediction)\n\n    //Set variables for later printing\n    setNewPrediction(prediction)\n    setNewMessage(message)\n  }\n\n  return (\n\n    <View style={styles.container}>\n      \n      <Text style={styles.title}>Get Recommendation!</Text>\n      \n      <View>\n        <Text style={styles.label}>Restaurant</Text>\n        <Controller \n          name=\"restaurant\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={restaurantInputRef}\n            />\n          }\n        />\n      </View>\n\n      <View>\n        <Text style={styles.label}>Distance</Text>\n        <Controller \n          name=\"distance\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={distanceInputRef}\n            />\n          }\n        />\n      </View>\n\n      <View>\n        <Text style={styles.label}>Pay</Text>\n        <Controller \n          name=\"pay\" \n          control={control} \n          rules= {{required: 'This is required'}}\n          defaultValue=''\n          render={(props) => \n            <TextInput {...props} \n              \n              style={styles.textbox}\n              onChangeText={(value) => {\n                props.onChange(value)\n              }} \n              ref={payInputRef}\n            />\n          }\n        />\n      </View>\n      <View>\n        <TouchableOpacity\n          // handleSubmit validates inputs before calling onSubmit\n          onPress={handleSubmit(onSubmit)}\n\n          //TO DO: OnPress will also enable the accept and reject drive buttons\n\n          style={{ backgroundColor: 'cyan', margin: 10 }}>\n        <Text style={ styles.button}>Get Recommendation</Text>\n      </TouchableOpacity>\n      </View>\n   \n      <Text style={styles.text}>{`Prediction: $${newPrediction}/hour`}</Text>\n      <Text style={styles.label}>{`Notes: ${newMessage}`}</Text>\n      <Text style={styles.label}>  </Text>\n\n      <View>\n      <TouchableOpacity onPress={() => navigation.navigate('RecordDrive')}\n          style={{ backgroundColor: 'rgba(33, 161, 72, 1)'}}>\n          <Text style={styles.button}>Accept Drive</Text>    \n      </TouchableOpacity>\n\n      <Text style={styles.label}>  </Text>\n\n      <TouchableOpacity \n      //TO DO: OnPress should refresh the page entirely\n      //possibly by returning to Main and then coming back to Get Rec\n          onPress={() => navigation.navigate('Main')}\n          style={{ backgroundColor: `rgba(203, 59, 59, 1)`}}>\n          <Text style={styles.button}>Reject Drive</Text>\n      </TouchableOpacity>\n      </View>\n  \n    </View>\n    \n  )\n}\n\n// For formatting the time, ensuring the zeros in front of the time\n// Slice -2 means selecting from the end of the array\nconst formatNumber = number => `0${number}`.slice(-2);\n\n// For getting minutes and seconds from a time passed\nconst getRemaining = (time) => {\n  const mins = Math.floor(time / 60);\n  const secs = time - mins * 60;\n  return { mins: formatNumber(mins), secs: formatNumber(secs) };\n}\n\n// RecordDrive screen\nfunction RecordDriveScreen ({ navigation }) {\n  // Storing a variable remainingSecs\n  const [remainingSecs, setRemainingSecs] = useState(0);\n  // Storing a variable isActive\n  const [isActive, setIsActive] = useState(false);\n  // Calling getRemaining to get time passed\n  const { mins, secs } = getRemaining(remainingSecs);\n  // let laps = { start: \" \", arrival: \" \", departure: \" \", end: \" \"};\n  const laps = new Array();\n  // var index = 0;\n\n  // Called when pressing start/pause button\n  const toggle = () => {\n    setIsActive(!isActive);\n    if (!isActive) {\n      // setting start position\n      laps.push((Date(Date.now())).toString());\n      // laps[0] = Date(Date.now());\n      // index = index + 1;\n    } else {\n      console.log(laps.pop());\n      // console.log(laps[1]);\n      // console.log(laps[2]);\n      // console.log(laps[3]);\n    }\n  }\n  // Resets the time back to initial state\n  const reset = () => {\n    setRemainingSecs(0);\n    setIsActive(false);\n    laps = new Array();\n  }\n  const addLap = () => {\n    // mins and secs \n    // laps[index] = Date(Date.now())\n    // index = index + 1\n    laps.push((Date(Date.now())).toString());\n    \n  }\n  const saveDrive = () => {\n    console.log(laps[0]);\n    console.log(laps[1]);\n    console.log(laps[2]);\n    console.log(laps[3]);\n    /** \n    const start = laps[0]\n    const restaurant_arrival = laps[1]\n    const restaurant_departure = laps[2]\n    const end = laps[3]\n    const drive = {\"start\": start, \"restaurant_arrival\": restaurant_arrival, \"restaurant_departure\": restaurant_departure, \"end\": end}\n    console.log(drive)\n    const response = await fetch(\"http://127.0.0.1:5000/record_drive\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(drive)\n    })\n    return await response.json();\n    // console.log(response)\n    */\n  }\n  \n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setRemainingSecs(remainingSecs => remainingSecs + 1);\n      }, 1000);\n    } else if (!isActive && remainingSecs !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, remainingSecs]);\n\n  // Still need to do the laps function, that way you can distinguish between different intervals of the drive\n  // Thinking of displaying splits below or next to the buttons and time\n  return (\n    <View style={styles.container}>\n      <StatusBar barStyle=\"light-content\" />\n      <Text style={styles.timerText}>{`${mins}:${secs}`}</Text>\n      <TouchableOpacity onPress={toggle} style={styles.button}>\n        <Text style={styles.buttonText}>{isActive ? 'Save' : 'Start'}</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={addLap}style={styles.button}>\n        <Text style={styles.buttonText}>Lap</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={reset} style={[styles.button, styles.buttonReset]}>\n          <Text style={[styles.buttonText, styles.buttonTextReset]}>Reset</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nfunction SaveDriveScreen ({ navigation }) {\n  // Save Drive Screen is for confirming details of the drive and adding comments/details\n  // This screen is where the api record drive is called\n  const { control } = useForm();\n  const startRef = React.useRef()\n  const arrivalRef = React.useRef()\n  const leaveRef = React.useRef()\n  const endRef = React.useRef()\n\n  const onSubmit = async (data) => { \n    const json = JSON.parse(JSON.stringify(data))\n    /**\n    const start = json[\"start\"]\n    const restaurant_arrival = json[\"restaurant_arrival\"]\n    const restaurant_leave = json[\"restaurant_leave\"]\n    const end = json[\"end\"]\n    const drive = {start, restaurant_arrival, restaurant_leave, end}\n    console.log(drive)\n    const response = await fetch(\"http://127.0.0.1:5000/record_drive\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(drive)\n    }).then((response) => response.json())\n    .then(data => {\n        return data;\n    });\n    */\n  }\n\n  return (\n   <View>\n     <Text>Confirm drive with comments/details here</Text>\n   </View>\n  )\n}\n\n// Statistics screen\nfunction StatisticsScreen ({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>\n      Statistics</Text>\n\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#66cc99',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: 'black',\n    fontSize: 30,\n    // backgroundColor: 'white',\n    marginHorizontal: 15,\n    marginVertical: 15,\n    padding: 7,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  button: {\n    color: 'black',\n    fontSize: 20,\n    marginHorizontal: 10,\n    marginVertical: 10,\n    borderRadius: 5\n  },\n  textbox: {\n    //backgroundColor: 'rgba(150,150,150,1)',\n    backgroundColor: 'white',\n  \theight: 40,\n  \twidth: 200,\n  \tmarginTop: 10,\n  \tmarginBottom: 20,\n  \tborderRadius: 5,\n  \tborderColor: 'white',\n  \tborderWidth: 1,\n  \tpadding: 5\n  },\n  text: {\n    fontSize: 20,\n    color: 'black',\n    margin: 10,\n    alignContent: 'center'\n  },\n  time: {\n    fontWeight: 'bold',\n    fontSize: 80,\n    color: '#000',\n    alignContent: 'center',\n  },\n  input: {\n    backgroundColor: 'white',\n    height: 40,\n    padding: 10,\n    width: 100,\n    borderRadius: 4,\n  },\n  buttonText: {\n    fontSize: 30,\n    // color: '#B9AAFF'\n    color: 'black',\n  },\n  buttonTextReset: {\n    fontSize: 30,\n    color: '#808080',\n  },\n  timerText: {\n    fontSize: 70,\n    color: 'white',\n  },\n  circleButton: {\n    width: 100,\n    height: 100,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 17,\n    borderRadius: 100,\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 30,\n  }\n});\n\n/*colors!\nOld background green: '#1ddf6e'\nNew background green: '#66cc99'\nReject drive red: `rgba(203, 59, 59, 1)`\n*/\n"]},"metadata":{},"sourceType":"module"}