{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/susannahbennett/Dasher/dasher-app/RecommendForm.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useForm } from \"react-hook-form\";\nexport var RecommendForm = function RecommendForm(_ref) {\n  var onNewRec = _ref.onNewRec;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurant = _useState2[0],\n      setRest = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      distance = _useState4[0],\n      setDist = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      payment = _useState6[0],\n      setPay = _useState6[1];\n\n  return React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(\"input\", {\n    name: \"restaurant\",\n    ref: restaurant,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), React.createElement(\"input\", {\n    name: \"distance\",\n    ref: distance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), React.createElement(\"input\", {\n    name: \"pay\",\n    ref: payment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function _callee() {\n      var values, response, jsonResponse, message, prediction, toReturn;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              values = getValues();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"/get_recommendation\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(values)\n              }));\n\n            case 3:\n              response = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 15;\n                break;\n              }\n\n              console.log(\"response worked!\");\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 8:\n              jsonResponse = _context.sent;\n              console.log(jsonResponse.message);\n              console.log(jsonResponse.prediction);\n              message = jsonResponse.message;\n              prediction = jsonResponse.prediction;\n              toReturn = {\n                message: message,\n                prediction: prediction\n              };\n              onNewRec(toReturn);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Get Values\"));\n};","map":{"version":3,"sources":["/Users/susannahbennett/Dasher/dasher-app/RecommendForm.js"],"names":["React","useState","useForm","RecommendForm","onNewRec","control","handleSubmit","errors","restaurant","setRest","distance","setDist","payment","setPay","values","getValues","fetch","method","headers","body","JSON","stringify","response","ok","console","log","json","jsonResponse","message","prediction","toReturn"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,iBACDF,OAAO,EADN;AAAA,MACnCG,OADmC,YACnCA,OADmC;AAAA,MAC1BC,YAD0B,YAC1BA,YAD0B;AAAA,MACZC,MADY,YACZA,MADY;;AAAA,kBAGbN,QAAQ,CAAC,EAAD,CAHK;AAAA;AAAA,MAGpCO,UAHoC;AAAA,MAGxBC,OAHwB;;AAAA,mBAIfR,QAAQ,CAAC,CAAD,CAJO;AAAA;AAAA,MAIpCS,QAJoC;AAAA,MAI1BC,OAJ0B;;AAAA,mBAKjBV,QAAQ,CAAC,CAAD,CALS;AAAA;AAAA,MAKpCW,OALoC;AAAA,MAK3BC,MAL2B;;AAO3C,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,GAAG,EAAEL,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,GAAG,EAAEE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,GAAG,EAAEE,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACDE,cAAAA,MADC,GACQC,SAAS,EADjB;AAAA;AAAA,+CAEgBC,KAAK,CAAC,qBAAD,EAAwB;AAChDC,gBAAAA,MAAM,EAAE,MADwC;AAEhDC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAFuC;AAKhDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AAL0C,eAAxB,CAFrB;;AAAA;AAEDQ,cAAAA,QAFC;;AAAA,mBAUCA,QAAQ,CAACC,EAVV;AAAA;AAAA;AAAA;;AAWDC,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAXC;AAAA,+CAY0BH,QAAQ,CAACI,IAAT,EAZ1B;;AAAA;AAYKC,cAAAA,YAZL;AAaDH,cAAAA,OAAO,CAACC,GAAR,CAAYE,YAAY,CAACC,OAAzB;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAYE,YAAY,CAACE,UAAzB;AACMD,cAAAA,OAfL,GAeeD,YAAY,CAACC,OAf5B;AAgBKC,cAAAA,UAhBL,GAgBkBF,YAAY,CAACE,UAhB/B;AAiBKC,cAAAA,QAjBL,GAiBgB;AAACF,gBAAAA,OAAO,EAAPA,OAAD;AAAUC,gBAAAA,UAAU,EAAVA;AAAV,eAjBhB;AAkBDzB,cAAAA,QAAQ,CAAC0B,QAAD,CAAR;;AAlBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADJ;AAoCH,CA3CM","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Button, Text, View, TextInput} from 'react-native';\nimport { useForm } from \"react-hook-form\";\n\nexport const RecommendForm = ({ onNewRec }) => {\n    const { control, handleSubmit, errors } = useForm();\n\n    const [restaurant, setRest] = useState(\"\");\n    const [distance, setDist] = useState(0);\n    const [payment, setPay] = useState(0);\n\n    return (\n        <form>\n          <input name=\"restaurant\" ref={restaurant} />\n          <input name=\"distance\" ref={distance} />\n          <input name=\"pay\" ref={payment} />\n    \n          <button\n            type=\"button\"\n            onClick={async () => {\n              const values = getValues(); \n              const response = await fetch(\"/get_recommendation\", {\n                  method: \"POST\",\n                  headers: {\n                      \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify(values)\n                  });\n\n                  if (response.ok) {\n                    console.log(\"response worked!\");\n                    const jsonResponse = await response.json();\n                    console.log(jsonResponse.message);\n                    console.log(jsonResponse.prediction);\n                    const message = jsonResponse.message;\n                    const prediction = jsonResponse.prediction;\n                    const toReturn = {message, prediction};\n                    onNewRec(toReturn);\n                  }\n              }\n            }\n            >\n            Get Values\n          </button>\n        </form>\n      );\n    \n}"]},"metadata":{},"sourceType":"module"}